# See LICENSE for license details.
#*****************************************************************************
# smaltt.S
#-----------------------------------------------------------------------------
#
# Test add instruction.
#


#include "riscv_test.h"
#include "compliance_test.h"
#include "compliance_io.h"
#include "aw_test_macros.h"

RVTEST_RV64U
RV_COMPLIANCE_CODE_BEGIN

  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------

TEST_RR_OP64_OO( 2 , smaltt, 0x0000000000000000, 0xffffffff, 0x00000000 , 8); 
TEST_RR_OP64_OO( 3 , smaltt, 0x0000000000008000, 0xffffffff, 0x80000000 , 16); 
TEST_RR_OP64_OO( 4 , smaltt, 0x0000000000008000, 0x00000000, 0x00000000 , 24); 
TEST_RR_OP64_OO( 5 , smaltt, 0x0000000000008000, 0x00000000, 0x2d3b05f9 , 32); 
TEST_RR_OP64_OO( 6 , smaltt, 0x0000000000008001, 0xffffffff, 0xffffffff , 40); 
TEST_RR_OP64_OO( 7 , smaltt, 0x0000000000008001, 0x00000000, 0x2a02e7f0 , 48); 
TEST_RR_OP64_OO( 8 , smaltt, 0x0000000024c00001, 0x80000000, 0xb681d348 , 56); 
TEST_RR_OP64_OO( 9 , smaltt, 0x000000001996a9d7, 0x6846eca6, 0xe499f754 , 64); 
TEST_RR_OP64_OO( 10 , smaltt, 0x00000000199729d7, 0x80000000, 0xffffffff , 72); 
TEST_RR_OP64_OO( 11 , smaltt, 0x000000001997a9d7, 0xffffffff, 0x80000000 , 80); 
TEST_RR_OP64_OO( 12 , smaltt, 0x000000001997a9d7, 0x00000000, 0x00000000 , 88); 
TEST_RR_OP64_OO( 13 , smaltt, 0x000000005997a9d7, 0x80000000, 0x80000000 , 96); 
TEST_RR_OP64_OO( 14 , smaltt, 0x0000000059974b9d, 0xffffffff, 0x5e3acff0 , 104); 
TEST_RR_OP64_OO( 15 , smaltt, 0x000000005997cb9d, 0x80000000, 0xffffffff , 112); 
TEST_RR_OP64_OO( 16 , smaltt, 0x000000009997cb9d, 0x80000000, 0x80000000 , 120); 
TEST_RR_OP64_OO( 17 , smaltt, 0x000000009997cb9d, 0x00000000, 0xffffffff , 128); 
TEST_RR_OP64_OO( 18 , smaltt, 0x000000009997cb9d, 0x00000000, 0xffffffff , 136); 
TEST_RR_OP64_OO( 19 , smaltt, 0x000000009997cb9d, 0x80000000, 0x00000000 , 144); 
TEST_RR_OP64_OO( 20 , smaltt, 0x000000009997cb9d, 0x00000000, 0x9df216d3 , 152); 
TEST_RR_OP64_OO( 21 , smaltt, 0x000000009bf64575, 0xd80c0f3f, 0xf0d23633 , 160); 
TEST_RR_OP64_OO( 22 , smaltt, 0x000000009bf6c575, 0xffffffff, 0x80000000 , 168); 
TEST_RR_OP64_OO( 23 , smaltt, 0x000000009bf74575, 0xffffffff, 0x80000000 , 176); 
TEST_RR_OP64_OO( 24 , smaltt, 0x000000009bf7751e, 0xd0575a36, 0xffffffff , 184); 
TEST_RR_OP64_OO( 25 , smaltt, 0x000000009bf7f51e, 0xffffffff, 0x80000000 , 192); 
TEST_RR_OP64_OO( 26 , smaltt, 0x00000000d5e9751e, 0x8c1d90ed, 0x80000000 , 200); 
TEST_RR_OP64_OO( 27 , smaltt, 0x00000000d5e96379, 0x11a56883, 0xffffffff , 208); 
TEST_RR_OP64_OO( 28 , smaltt, 0x00000000b8235945, 0x6d1b03f0, 0xba2488a9 , 216); 
TEST_RR_OP64_OO( 29 , smaltt, 0x00000000b8235945, 0x00000000, 0x00000000 , 224); 
TEST_RR_OP64_OO( 30 , smaltt, 0x00000000b8235945, 0x30d192e8, 0x00000000 , 232); 
TEST_RR_OP64_OO( 31 , smaltt, 0x00000000b8235945, 0x00000000, 0x80000000 , 240); 
TEST_RR_OP64_OO( 32 , smaltt, 0x00000000f8235945, 0x80000000, 0x80000000 , 248); 
TEST_RR_OP64_OO( 33 , smaltt, 0x00000000f8235945, 0x00000000, 0xffffffff , 256); 
TEST_RR_OP64_OO( 34 , smaltt, 0x00000000f8235945, 0x00000000, 0xffffffff , 264); 
TEST_RR_OP64_OO( 35 , smaltt, 0x00000000f8234a04, 0x0f412119, 0xffffffff , 272); 
TEST_RR_OP64_OO( 36 , smaltt, 0x000000010520ca04, 0xe6059478, 0x80000000 , 280); 
TEST_RR_OP64_OO( 37 , smaltt, 0x000000010520ca04, 0x0df8fe34, 0x00000000 , 288); 
TEST_RR_OP64_OO( 38 , smaltt, 0x000000010520ca04, 0x00000000, 0x80000000 , 296); 
TEST_RR_OP64_OO( 39 , smaltt, 0x000000010520ca04, 0x80000000, 0x00000000 , 304); 
TEST_RR_OP64_OO( 40 , smaltt, 0x000000010520ca05, 0xffffffff, 0xffffffff , 312); 
TEST_RR_OP64_OO( 41 , smaltt, 0x0000000105214a05, 0x80000000, 0xffffffff , 320); 
TEST_RR_OP64_OO( 42 , smaltt, 0x0000000105214a05, 0x47b5a3c7, 0x00000000 , 328); 
TEST_RR_OP64_OO( 43 , smaltt, 0x0000000105214a05, 0x00000000, 0xffffffff , 336); 
TEST_RR_OP64_OO( 44 , smaltt, 0x0000000105214a05, 0x00000000, 0x80000000 , 344); 
TEST_RR_OP64_OO( 45 , smaltt, 0x0000000105214a05, 0x0fd26403, 0x00000000 , 352); 
TEST_RR_OP64_OO( 46 , smaltt, 0x0000000105214a05, 0x38daccc5, 0x00000000 , 360); 
TEST_RR_OP64_OO( 47 , smaltt, 0x0000000105214a05, 0x00000000, 0xffffffff , 368); 
TEST_RR_OP64_OO( 48 , smaltt, 0x0000000105214a05, 0x00000000, 0x80000000 , 376); 
TEST_RR_OP64_OO( 49 , smaltt, 0x0000000105214a05, 0x00000000, 0x80000000 , 384); 
TEST_RR_OP64_OO( 50 , smaltt, 0x000000010521ca05, 0xffffffff, 0x80000000 , 392); 
TEST_RR_OP64_OO( 51 , smaltt, 0x000000010521ca05, 0xa4ff111a, 0x00000000 , 400); 
TEST_RR_OP64_OO( 52 , smaltt, 0x00000000d6a9ca05, 0x80000000, 0x5cf03be5 , 408); 
TEST_RR_OP64_OO( 53 , smaltt, 0x00000000d6aa4a05, 0x80000000, 0xffffffff , 416); 
TEST_RR_OP64_OO( 54 , smaltt, 0x00000000d6aaca05, 0xffffffff, 0x80000000 , 424); 
TEST_RR_OP64_OO( 55 , smaltt, 0x00000000d6ab4a05, 0xffffffff, 0x80000000 , 432); 
TEST_RR_OP64_OO( 56 , smaltt, 0x00000000d6aade8a, 0x6b7b2635, 0xffffffff , 440); 
TEST_RR_OP64_OO( 57 , smaltt, 0x00000000d6aade8a, 0x00000000, 0xffffffff , 448); 
TEST_RR_OP64_OO( 58 , smaltt, 0x00000000e8855e8a, 0x80000000, 0xdc4bf84a , 456); 
TEST_RR_OP64_OO( 59 , smaltt, 0x0000000128855e8a, 0x80000000, 0x80000000 , 464); 
TEST_RR_OP64_OO( 60 , smaltt, 0x000000013061a87b, 0x412f0600, 0x1edf2fe8 , 472); 
TEST_RR_OP64_OO( 61 , smaltt, 0x000000011d5c287b, 0x260bf575, 0x80000000 , 480); 
TEST_RR_OP64_OO( 62 , smaltt, 0x000000015d5c287b, 0x80000000, 0x80000000 , 488); 
TEST_RR_OP64_OO( 63 , smaltt, 0x00000001800e284c, 0x6d83580c, 0x511b850e , 496); 
TEST_RR_OP64_OO( 64 , smaltt, 0x00000001c00e284c, 0x80000000, 0x80000000 , 504); 
TEST_RR_OP64_OO( 65 , smaltt, 0x00000001c00e284c, 0x80000000, 0x00000000 , 512); 
TEST_RR_OP64_OO( 66 , smaltt, 0x00000001c00ea84c, 0x80000000, 0xffffffff , 520); 
TEST_RR_OP64_OO( 67 , smaltt, 0x00000001c4771fe4, 0x0c7443c2, 0x5a9e8c6d , 528); 
TEST_RR_OP64_OO( 68 , smaltt, 0x00000001c4771fe4, 0x00000000, 0x00000000 , 536); 
TEST_RR_OP64_OO( 69 , smaltt, 0x00000001c4771fe4, 0x80000000, 0x00000000 , 544); 
TEST_RR_OP64_OO( 70 , smaltt, 0x00000001b5d8f330, 0x62be8b51, 0xda1a68ab , 552); 
TEST_RR_OP64_OO( 71 , smaltt, 0x00000001b5d8f330, 0x00000000, 0x00000000 , 560); 
TEST_RR_OP64_OO( 72 , smaltt, 0x00000001e825f330, 0x80000000, 0x9b663031 , 568); 
TEST_RR_OP64_OO( 73 , smaltt, 0x00000001e825f330, 0xffffffff, 0x00000000 , 576); 
TEST_RR_OP64_OO( 74 , smaltt, 0x00000001e8267330, 0xffffffff, 0x80000000 , 584); 
TEST_RR_OP64_OO( 75 , smaltt, 0x00000001e8267330, 0x00000000, 0x80000000 , 592); 
TEST_RR_OP64_OO( 76 , smaltt, 0x00000001e8267331, 0xffffffff, 0xffffffff , 600); 
TEST_RR_OP64_OO( 77 , smaltt, 0x00000001e826f331, 0x80000000, 0xffffffff , 608); 
TEST_RR_OP64_OO( 78 , smaltt, 0x00000001e8277331, 0x80000000, 0xffffffff , 616); 
TEST_RR_OP64_OO( 79 , smaltt, 0x00000001e8277331, 0xffffffff, 0x00000000 , 624); 
TEST_RR_OP64_OO( 80 , smaltt, 0x00000001e8277332, 0xffffffff, 0xffffffff , 632); 
TEST_RR_OP64_OO( 81 , smaltt, 0x00000001e8277332, 0x80000000, 0x00000000 , 640); 
TEST_RR_OP64_OO( 82 , smaltt, 0x00000001e8277332, 0x00000000, 0x00000000 , 648); 
TEST_RR_OP64_OO( 83 , smaltt, 0x00000001e827f332, 0xffffffff, 0x80000000 , 656); 
TEST_RR_OP64_OO( 84 , smaltt, 0x00000001fd00f332, 0x80000000, 0xd64ee76c , 664); 
TEST_RR_OP64_OO( 85 , smaltt, 0x00000001fd00f332, 0x00000000, 0xc20d7489 , 672); 
TEST_RR_OP64_OO( 86 , smaltt, 0x00000001fd00f332, 0xffffffff, 0x00000000 , 680); 
TEST_RR_OP64_OO( 87 , smaltt, 0x000000023d00f332, 0x80000000, 0x80000000 , 688); 
TEST_RR_OP64_OO( 88 , smaltt, 0x000000023a6216bc, 0xc02ec99c, 0x0a83f7fd , 696); 
TEST_RR_OP64_OO( 89 , smaltt, 0x000000023a6216bc, 0x00000000, 0x00000000 , 704); 
TEST_RR_OP64_OO( 90 , smaltt, 0x000000023a6296bc, 0x80000000, 0xffffffff , 712); 
TEST_RR_OP64_OO( 91 , smaltt, 0x000000023a6263ec, 0x32d06bc0, 0xffffffff , 720); 
TEST_RR_OP64_OO( 92 , smaltt, 0x000000023a6263ec, 0x00000000, 0xffffffff , 728); 
TEST_RR_OP64_OO( 93 , smaltt, 0x000000023a62e3ec, 0x80000000, 0xffffffff , 736); 
TEST_RR_OP64_OO( 94 , smaltt, 0x000000023a6363ec, 0x80000000, 0xffffffff , 744); 
TEST_RR_OP64_OO( 95 , smaltt, 0x000000023c43611b, 0xf3cfdabe, 0xd8a1994d , 752); 
TEST_RR_OP64_OO( 96 , smaltt, 0x000000023c43611b, 0xffffffff, 0x00000000 , 760); 
TEST_RR_OP64_OO( 97 , smaltt, 0x0000000247fe718a, 0xd805c823, 0xb4e343e8 , 768); 
TEST_RR_OP64_OO( 98 , smaltt, 0x0000000247fe3185, 0xffffffff, 0x4005c2fa , 776); 
TEST_RR_OP64_OO( 99 , smaltt, 0x0000000247fe3186, 0xffffffff, 0xffffffff , 784); 
TEST_RR_OP64_OO( 100 , smaltt, 0x0000000247fe3186, 0x00000000, 0x00000000 , 792); 
TEST_RR_OP64_OO( 101 , smaltt, 0x0000000247fe3186, 0x00000000, 0xffffffff , 800); 
TEST_RR_OP64_OO( 102 , smaltt, 0x0000000247fdc9c7, 0xffffffff, 0x67bfda91 , 808); 
TEST_RR_OP64_OO( 103 , smaltt, 0x0000000247fdc9c7, 0x1c0d1dae, 0x00000000 , 816); 
TEST_RR_OP64_OO( 104 , smaltt, 0x0000000247fdc9c7, 0x00000000, 0x80000000 , 824); 
TEST_RR_OP64_OO( 105 , smaltt, 0x0000000247fd8077, 0xffffffff, 0x49501efc , 832); 
TEST_RR_OP64_OO( 106 , smaltt, 0x0000000247fe0077, 0x80000000, 0xffffffff , 840); 
TEST_RR_OP64_OO( 107 , smaltt, 0x0000000247fd8dcd, 0x72aa141f, 0xffffffff , 848); 
TEST_RR_OP64_OO( 108 , smaltt, 0x0000000247fd8dcd, 0x00000000, 0xffffffff , 856); 
TEST_RR_OP64_OO( 109 , smaltt, 0x0000000287fd8dcd, 0x80000000, 0x80000000 , 864); 
TEST_RR_OP64_OO( 110 , smaltt, 0x0000000287fd8dce, 0xffffffff, 0xffffffff , 872); 
TEST_RR_OP64_OO( 111 , smaltt, 0x0000000287fd8dce, 0x00000000, 0x6f6a94a4 , 880); 
TEST_RR_OP64_OO( 112 , smaltt, 0x0000000287fd1176, 0x7c58b57b, 0xffffffff , 888); 
TEST_RR_OP64_OO( 113 , smaltt, 0x0000000285929176, 0x80000000, 0x04d5e4c0 , 896); 
TEST_RR_OP64_OO( 114 , smaltt, 0x0000000285931176, 0x80000000, 0xffffffff , 904); 
TEST_RR_OP64_OO( 115 , smaltt, 0x0000000285939176, 0xffffffff, 0x80000000 , 912); 
TEST_RR_OP64_OO( 116 , smaltt, 0x000000026ffa8f5a, 0x832c375d, 0x2c4b1368 , 920); 
TEST_RR_OP64_OO( 117 , smaltt, 0x000000026ffa8f5b, 0xffffffff, 0xffffffff , 928); 
TEST_RR_OP64_OO( 118 , smaltt, 0x000000026ffafbb8, 0x93a360be, 0xffffffff , 936); 
TEST_RR_OP64_OO( 119 , smaltt, 0x00000002affafbb8, 0x80000000, 0x80000000 , 944); 
TEST_RR_OP64_OO( 120 , smaltt, 0x00000002affab848, 0xffffffff, 0x43704c9b , 952); 
TEST_RR_OP64_OO( 121 , smaltt, 0x00000002affb0daf, 0xffffffff, 0xaa99c39c , 960); 
TEST_RR_OP64_OO( 122 , smaltt, 0x00000002affb8daf, 0x80000000, 0xffffffff , 968); 
TEST_RR_OP64_OO( 123 , smaltt, 0x00000002affb8daf, 0xffffffff, 0x00000000 , 976); 
TEST_RR_OP64_OO( 124 , smaltt, 0x00000002affc0daf, 0x80000000, 0xffffffff , 984); 
TEST_RR_OP64_OO( 125 , smaltt, 0x00000002affc0daf, 0x54f2f2c9, 0x00000000 , 992); 
TEST_RR_OP64_OO( 126 , smaltt, 0x00000002a4e4f1f9, 0x19ea0e84, 0x92713977 , 1000); 
TEST_RR_OP64_OO( 127 , smaltt, 0x00000002a4e4f1f9, 0x00000000, 0x00000000 , 1008); 
TEST_RR_OP64_OO( 128 , smaltt, 0x00000002a4e4e7d4, 0xffffffff, 0x0a25fec4 , 1016); 
TEST_RR_OP64_OO( 129 , smaltt, 0x00000002a4e4e7d4, 0x00000000, 0x7e403df9 , 1024); 
TEST_RR_OP64_OO( 130 , smaltt, 0x000000028f9b99de, 0xbf26c87d, 0x540746e6 , 1032); 
TEST_RR_OP64_OO( 131 , smaltt, 0x000000028f9b99de, 0x00000000, 0x00000000 , 1040); 
TEST_RR_OP64_OO( 132 , smaltt, 0x000000028b7599de, 0x084c9651, 0x80000000 , 1048); 
TEST_RR_OP64_OO( 133 , smaltt, 0x000000028b76078a, 0xffffffff, 0x9254b52f , 1056); 
TEST_RR_OP64_OO( 134 , smaltt, 0x000000028b76078b, 0xffffffff, 0xffffffff , 1064); 
TEST_RR_OP64_OO( 135 , smaltt, 0x000000028b76078b, 0x80000000, 0x00000000 , 1072); 
TEST_RR_OP64_OO( 136 , smaltt, 0x00000002bab6878b, 0x80000000, 0xa17fb7ee , 1080); 
TEST_RR_OP64_OO( 137 , smaltt, 0x00000002ac769b0e, 0xc14514d1, 0x3a272a3e , 1088); 
TEST_RR_OP64_OO( 138 , smaltt, 0x00000002ac769b0e, 0x00000000, 0x5f271be6 , 1096); 
TEST_RR_OP64_OO( 139 , smaltt, 0x000000028a769b0e, 0x4400ffb0, 0x80000000 , 1104); 
TEST_RR_OP64_OO( 140 , smaltt, 0x000000028a769b0e, 0x00000000, 0x80000000 , 1112); 
TEST_RR_OP64_OO( 141 , smaltt, 0x000000028d469ece, 0xf640b942, 0xb627d10f , 1120); 
TEST_RR_OP64_OO( 142 , smaltt, 0x00000002a3a21ece, 0x80000000, 0xd34995b2 , 1128); 
TEST_RR_OP64_OO( 143 , smaltt, 0x00000002a3a21ece, 0x80000000, 0x00000000 , 1136); 
TEST_RR_OP64_OO( 144 , smaltt, 0x00000002a3a21ece, 0x80000000, 0x00000000 , 1144); 
TEST_RR_OP64_OO( 145 , smaltt, 0x00000002ce529ece, 0x80000000, 0xaa9fb2d3 , 1152); 
TEST_RR_OP64_OO( 146 , smaltt, 0x00000002ce52b74b, 0xe7838b6d, 0xffffffff , 1160); 
TEST_RR_OP64_OO( 147 , smaltt, 0x00000002c29b659c, 0xd7150184, 0x494de22c , 1168); 
TEST_RR_OP64_OO( 148 , smaltt, 0x00000002c29b659c, 0x00000000, 0x00000000 , 1176); 
TEST_RR_OP64_OO( 149 , smaltt, 0x00000002c29b659c, 0x00000000, 0xffffffff , 1184); 
TEST_RR_OP64_OO( 150 , smaltt, 0x00000002c29b659c, 0xffffffff, 0x00000000 , 1192); 
TEST_RR_OP64_OO( 151 , smaltt, 0x00000002df01e59c, 0x80000000, 0xc733d5e9 , 1200); 
TEST_RR_OP64_OO( 152 , smaltt, 0x00000002df01e59c, 0xffffffff, 0x00000000 , 1208); 
TEST_RR_OP64_OO( 153 , smaltt, 0x00000002df017774, 0xffffffff, 0x6e285620 , 1216); 
TEST_RR_OP64_OO( 154 , smaltt, 0x00000002c765f774, 0x2f371f7b, 0x80000000 , 1224); 
TEST_RR_OP64_OO( 155 , smaltt, 0x00000002c7667774, 0x80000000, 0xffffffff , 1232); 
TEST_RR_OP64_OO( 156 , smaltt, 0x00000002c7667774, 0x3958aa24, 0x00000000 , 1240); 
TEST_RR_OP64_OO( 157 , smaltt, 0x0000000307667774, 0x80000000, 0x80000000 , 1248); 
TEST_RR_OP64_OO( 158 , smaltt, 0x0000000307667774, 0x00000000, 0xded171d1 , 1256); 
TEST_RR_OP64_OO( 159 , smaltt, 0x0000000307667774, 0x00000000, 0xffffffff , 1264); 
TEST_RR_OP64_OO( 160 , smaltt, 0x000000030766332d, 0xffffffff, 0x4447b894 , 1272); 
TEST_RR_OP64_OO( 161 , smaltt, 0x000000030766332d, 0x80000000, 0x00000000 , 1280); 
TEST_RR_OP64_OO( 162 , smaltt, 0x00000002fcc0332d, 0x80000000, 0x154cbca7 , 1288); 
TEST_RR_OP64_OO( 163 , smaltt, 0x00000002fcc0b32d, 0x80000000, 0xffffffff , 1296); 
TEST_RR_OP64_OO( 164 , smaltt, 0x00000002fcc0b32e, 0xffffffff, 0xffffffff , 1304); 
TEST_RR_OP64_OO( 165 , smaltt, 0x00000002fcc0b32f, 0xffffffff, 0xffffffff , 1312); 
TEST_RR_OP64_OO( 166 , smaltt, 0x00000002fcc0b32f, 0x3cb1338f, 0x00000000 , 1320); 
TEST_RR_OP64_OO( 167 , smaltt, 0x00000002fcc0b32f, 0xffffffff, 0x00000000 , 1328); 
TEST_RR_OP64_OO( 168 , smaltt, 0x000000030fc22c5f, 0x2cf437aa, 0x6c3c9cdc , 1336); 
TEST_RR_OP64_OO( 169 , smaltt, 0x000000030fc277fe, 0xb46142ca, 0xffffffff , 1344); 
TEST_RR_OP64_OO( 170 , smaltt, 0x000000030fc277fe, 0x00000000, 0x00000000 , 1352); 
TEST_RR_OP64_OO( 171 , smaltt, 0x000000030fc277fe, 0x00000000, 0x97fc181f , 1360); 
TEST_RR_OP64_OO( 172 , smaltt, 0x000000030fc277fe, 0x00000000, 0x00000000 , 1368); 
TEST_RR_OP64_OO( 173 , smaltt, 0x000000030fc2ce15, 0xa9e9321e, 0xffffffff , 1376); 
TEST_RR_OP64_OO( 174 , smaltt, 0x000000030fc2ce15, 0xffffffff, 0x00000000 , 1384); 
TEST_RR_OP64_OO( 175 , smaltt, 0x000000030fc2ce15, 0x00000000, 0x00000000 , 1392); 
TEST_RR_OP64_OO( 176 , smaltt, 0x000000030fc2ce15, 0x00000000, 0x80000000 , 1400); 
TEST_RR_OP64_OO( 177 , smaltt, 0x000000030fc34860, 0x85b52214, 0xffffffff , 1408); 
TEST_RR_OP64_OO( 178 , smaltt, 0x000000030fc34860, 0x00000000, 0xffffffff , 1416); 
TEST_RR_OP64_OO( 179 , smaltt, 0x0000000326db4860, 0x80000000, 0xd1d08239 , 1424); 
TEST_RR_OP64_OO( 180 , smaltt, 0x000000032da1c860, 0x80000000, 0xf273d4be , 1432); 
TEST_RR_OP64_OO( 181 , smaltt, 0x000000036da1c860, 0x80000000, 0x80000000 , 1440); 
TEST_RR_OP64_OO( 182 , smaltt, 0x000000036da1c860, 0x00000000, 0x80000000 , 1448); 
TEST_RR_OP64_OO( 183 , smaltt, 0x000000036da1c861, 0xffffffff, 0xffffffff , 1456); 
TEST_RR_OP64_OO( 184 , smaltt, 0x000000036836efd1, 0xcd781448, 0x1b7274f7 , 1464); 
TEST_RR_OP64_OO( 185 , smaltt, 0x000000036836efd1, 0x00000000, 0x80000000 , 1472); 
TEST_RR_OP64_OO( 186 , smaltt, 0x000000033f5defd1, 0x51b261f4, 0x80000000 , 1480); 
TEST_RR_OP64_OO( 187 , smaltt, 0x000000033f5defd1, 0x00000000, 0x80000000 , 1488); 
TEST_RR_OP64_OO( 188 , smaltt, 0x000000033f5e4e31, 0xa1a086d7, 0xffffffff , 1496); 
TEST_RR_OP64_OO( 189 , smaltt, 0x000000034c9837bf, 0x54ddd502, 0x27e69fe3 , 1504); 
TEST_RR_OP64_OO( 190 , smaltt, 0x000000034c9837bf, 0xffffffff, 0x00000000 , 1512); 
TEST_RR_OP64_OO( 191 , smaltt, 0x000000034c9837bf, 0xffffffff, 0x00000000 , 1520); 
TEST_RR_OP64_OO( 192 , smaltt, 0x000000034c9837bf, 0x80000000, 0x00000000 , 1528); 
TEST_RR_OP64_OO( 193 , smaltt, 0x000000033097b7bf, 0x80000000, 0x380157a9 , 1536); 
TEST_RR_OP64_OO( 194 , smaltt, 0x0000000330980fb8, 0xffffffff, 0xa807de3d , 1544); 
TEST_RR_OP64_OO( 195 , smaltt, 0x0000000330980fb8, 0xffffffff, 0x00000000 , 1552); 
TEST_RR_OP64_OO( 196 , smaltt, 0x000000033097b6b9, 0x58ff4503, 0xffffffff , 1560); 
TEST_RR_OP64_OO( 197 , smaltt, 0x000000033097b6b9, 0x00000000, 0x80000000 , 1568); 
TEST_RR_OP64_OO( 198 , smaltt, 0x00000003309836b9, 0x80000000, 0xffffffff , 1576); 
TEST_RR_OP64_OO( 199 , smaltt, 0x00000003309836b9, 0x00000000, 0x80000000 , 1584); 

  #-------------------------------------------------------------
  # Bypassing tests
  #-------------------------------------------------------------


TEST_PASSFAIL

RV_COMPLIANCE_CODE_END

.data

RV_COMPLIANCE_DATA_BEGIN
test_res:
    .fill 398, 4, -1
RV_COMPLIANCE_DATA_END