# See LICENSE for license details.
#*****************************************************************************
# smulx8.S
#-----------------------------------------------------------------------------
#
# Test add instruction.
#


#include "riscv_test.h"
#include "compliance_test.h"
#include "compliance_io.h"
#include "aw_test_macros.h"

RVTEST_RV64U
RV_COMPLIANCE_CODE_BEGIN

  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------

TEST_RR_OP64_OO( 2 , smulx8, 0x00001f0000000009, 0x008000ff, 0xc2fff700 , 8); 
TEST_RR_OP64_OO( 3 , smulx8, 0xde80007e00010000, 0x43ffff00, 0x8280ffff , 16); 
TEST_RR_OP64_OO( 4 , smulx8, 0x0000000005a24000, 0x0000f280, 0x80c08099 , 24); 
TEST_RR_OP64_OO( 5 , smulx8, 0x0000000000000000, 0xff000000, 0xff003900 , 32); 
TEST_RR_OP64_OO( 6 , smulx8, 0xf6fa000033800000, 0x1e009900, 0xffb3ff80 , 40); 
TEST_RR_OP64_OO( 7 , smulx8, 0x000040000000db00, 0x00800080, 0x804f4aff , 48); 
TEST_RR_OP64_OO( 8 , smulx8, 0x0000000000000068, 0xff0000ff, 0xff00987d , 56); 
TEST_RR_OP64_OO( 9 , smulx8, 0xffc8000000000000, 0xfff900ff, 0x00380038 , 64); 
TEST_RR_OP64_OO( 10 , smulx8, 0xfc22fff900800080, 0x9dff80ff, 0x070a80ff , 72); 
TEST_RR_OP64_OO( 11 , smulx8, 0xfe86000000800000, 0xe500ff00, 0x800eac80 , 80); 
TEST_RR_OP64_OO( 12 , smulx8, 0x000000000000ff89, 0xff800077, 0x0000ff00 , 88); 
TEST_RR_OP64_OO( 13 , smulx8, 0x00001d0040000000, 0x00c6800b, 0x80680080 , 96); 
TEST_RR_OP64_OO( 14 , smulx8, 0xfc80000000570001, 0x0700ffff, 0xff80ffa9 , 104); 
TEST_RR_OP64_OO( 15 , smulx8, 0xd90000000000e900, 0x4e000040, 0x0080a4ff , 112); 
TEST_RR_OP64_OO( 16 , smulx8, 0x000000000000f600, 0x80c1ff14, 0x00008000 , 120); 
TEST_RR_OP64_OO( 17 , smulx8, 0x000a00000000efab, 0xff000025, 0xfff68fe9 , 128); 
TEST_RR_OP64_OO( 18 , smulx8, 0xffe73c8000010048, 0xff80ffff, 0x8719b8ff , 136); 
TEST_RR_OP64_OO( 19 , smulx8, 0x4000ed800e800000, 0x8025e300, 0x80800080 , 144); 
TEST_RR_OP64_OO( 20 , smulx8, 0xff9d000000800000, 0x63ff8002, 0x00ff00ff , 152); 
TEST_RR_OP64_OO( 21 , smulx8, 0x0000000000000080, 0x007600ff, 0x00008080 , 160); 
TEST_RR_OP64_OO( 22 , smulx8, 0xfc8e000000014000, 0xc100ff80, 0x000e80ff , 168); 
TEST_RR_OP64_OO( 23 , smulx8, 0x000000570000e253, 0x80a90047, 0xff0095ff , 176); 
TEST_RR_OP64_OO( 24 , smulx8, 0xfebc007900000067, 0xf4ff0067, 0x871b0100 , 184); 
TEST_RR_OP64_OO( 25 , smulx8, 0x0001008000000000, 0xff800000, 0xffff003a , 192); 
TEST_RR_OP64_OO( 26 , smulx8, 0x0080e0380b800001, 0x8071e9ff, 0xb8ffff80 , 200); 
TEST_RR_OP64_OO( 27 , smulx8, 0xfd00fa8000000000, 0x0680ff00, 0x0b80ff00 , 208); 
TEST_RR_OP64_OO( 28 , smulx8, 0x4000002e00000000, 0x80ff8000, 0xd280fc00 , 216); 
TEST_RR_OP64_OO( 29 , smulx8, 0x4000000000000bc8, 0x80008068, 0x36801d00 , 224); 
TEST_RR_OP64_OO( 30 , smulx8, 0xca00000000662b80, 0x8000ff80, 0xff6ca99a , 232); 
TEST_RR_OP64_OO( 31 , smulx8, 0x00000000003e0021, 0x0000ffdf, 0xff07ffc2 , 240); 
TEST_RR_OP64_OO( 32 , smulx8, 0x0000000000000000, 0x00808080, 0x00030000 , 248); 
TEST_RR_OP64_OO( 33 , smulx8, 0x0080d8000b800065, 0x8050e9ff, 0x80ff9b80 , 256); 
TEST_RR_OP64_OO( 34 , smulx8, 0x0080000000000080, 0x80800080, 0x00ffff00 , 264); 
TEST_RR_OP64_OO( 35 , smulx8, 0x00000000ff9b0000, 0x00006501, 0x808000ff , 272); 
TEST_RR_OP64_OO( 36 , smulx8, 0xffdc003cfffee100, 0x09c4ff80, 0xfffc3e02 , 280); 
TEST_RR_OP64_OO( 37 , smulx8, 0x0000000000800000, 0x0088ffbb, 0x00ff0080 , 288); 
TEST_RR_OP64_OO( 38 , smulx8, 0xe780400000800000, 0x3180ff00, 0x8080ff80 , 296); 
TEST_RR_OP64_OO( 39 , smulx8, 0x0000008000800020, 0xff8080ff, 0xff00e0ff , 304); 
TEST_RR_OP64_OO( 40 , smulx8, 0xf6f80df100800000, 0x22adff00, 0xd5bc8080 , 312); 
TEST_RR_OP64_OO( 41 , smulx8, 0x2680f58000000000, 0xb38000ff, 0x158000ff , 320); 
TEST_RR_OP64_OO( 42 , smulx8, 0x00000001ffb10000, 0x27ffff00, 0xff00004f , 328); 
TEST_RR_OP64_OO( 43 , smulx8, 0x000000200514ed00, 0x00e0e726, 0xff0080cc , 336); 
TEST_RR_OP64_OO( 44 , smulx8, 0x0000ffdcffbb0000, 0xff244500, 0xff00ffff , 344); 
TEST_RR_OP64_OO( 45 , smulx8, 0xe900008000800000, 0x2eff8000, 0x8080a5ff , 352); 
TEST_RR_OP64_OO( 46 , smulx8, 0x003b000000010000, 0xff00ffff, 0xffc500ff , 360); 
TEST_RR_OP64_OO( 47 , smulx8, 0x000000000000ffdf, 0x0000a121, 0xffffff00 , 368); 
TEST_RR_OP64_OO( 48 , smulx8, 0x0000f6a800000001, 0x00a4a7ff, 0x1a80ff00 , 376); 
TEST_RR_OP64_OO( 49 , smulx8, 0x0000004500800000, 0x80bbffff, 0xff000080 , 384); 
TEST_RR_OP64_OO( 50 , smulx8, 0x0080000000000000, 0x80000000, 0x80ffaa00 , 392); 
TEST_RR_OP64_OO( 51 , smulx8, 0x0000000000000000, 0x0021005e, 0x00b80080 , 400); 
TEST_RR_OP64_OO( 52 , smulx8, 0x00000080ffcf0000, 0xff80ff00, 0xff00ff31 , 408); 
TEST_RR_OP64_OO( 53 , smulx8, 0x0000001900000080, 0x00ffffff, 0xe76e8000 , 416); 
TEST_RR_OP64_OO( 54 , smulx8, 0xf60039804000ffa7, 0x148d8059, 0x8080ff80 , 424); 
TEST_RR_OP64_OO( 55 , smulx8, 0x0000000000000000, 0x0000b300, 0xffffff00 , 432); 
TEST_RR_OP64_OO( 56 , smulx8, 0x0000008000000080, 0x008000ff, 0xff8080ff , 440); 
TEST_RR_OP64_OO( 57 , smulx8, 0x0001000000800000, 0xff0080ff, 0x00ff00ff , 448); 
TEST_RR_OP64_OO( 58 , smulx8, 0x0000000000000000, 0x33808080, 0x00000000 , 456); 
TEST_RR_OP64_OO( 59 , smulx8, 0x0067ff9f40000000, 0xffff8000, 0x6199ff80 , 464); 
TEST_RR_OP64_OO( 60 , smulx8, 0x0080000000000000, 0x8007006c, 0x00ff0000 , 472); 
TEST_RR_OP64_OO( 61 , smulx8, 0x0000ffab00000000, 0x005500b0, 0xff800080 , 480); 
TEST_RR_OP64_OO( 62 , smulx8, 0x165bff9a0000ffe6, 0x6166d0ff, 0xff3b1a00 , 488); 
TEST_RR_OP64_OO( 63 , smulx8, 0x0001cf8000010000, 0xff80ffff, 0x61ff00ff , 496); 
TEST_RR_OP64_OO( 64 , smulx8, 0x0000000100430080, 0x91ffff80, 0xff00ffbd , 504); 
TEST_RR_OP64_OO( 65 , smulx8, 0x0000000100004000, 0x00ff0080, 0xff808080 , 512); 
TEST_RR_OP64_OO( 66 , smulx8, 0x0000008000000000, 0x008000ff, 0xffc2002e , 520); 
TEST_RR_OP64_OO( 67 , smulx8, 0x4000060000010001, 0x80f4ffff, 0x8080ffff , 528); 
TEST_RR_OP64_OO( 68 , smulx8, 0xe400000040000000, 0x80ff8000, 0x00380080 , 536); 
TEST_RR_OP64_OO( 69 , smulx8, 0xffaf000000004000, 0x51000080, 0x80ff80f5 , 544); 
TEST_RR_OP64_OO( 70 , smulx8, 0x0027002500000000, 0xffdbff00, 0xffd9ff00 , 552); 
TEST_RR_OP64_OO( 71 , smulx8, 0x0e8840000044d980, 0x7c80bc4d, 0x801e80ff , 560); 
TEST_RR_OP64_OO( 72 , smulx8, 0x000040000000ffad, 0x8080ffff, 0x80005300 , 568); 
TEST_RR_OP64_OO( 73 , smulx8, 0x4000000000000000, 0x800000ff, 0xff800000 , 576); 
TEST_RR_OP64_OO( 74 , smulx8, 0x00010000ff88ffa8, 0xff00ffff, 0x80ff5878 , 584); 
TEST_RR_OP64_OO( 75 , smulx8, 0x000000010000245e, 0x00ff00a1, 0xff809eff , 592); 
TEST_RR_OP64_OO( 76 , smulx8, 0x011d2d8000000000, 0x0380e2ff, 0xa55f0000 , 600); 
TEST_RR_OP64_OO( 77 , smulx8, 0x00000080ffdb0080, 0x0080ffff, 0xff0c8025 , 608); 
TEST_RR_OP64_OO( 78 , smulx8, 0x0000000100800000, 0x00ffff00, 0xff00ff80 , 616); 
TEST_RR_OP64_OO( 79 , smulx8, 0x007c18e400010600, 0xff94fff4, 0xc58480ff , 624); 
TEST_RR_OP64_OO( 80 , smulx8, 0xffa3400000000380, 0x5d8080f9, 0x80ff8000 , 632); 
TEST_RR_OP64_OO( 81 , smulx8, 0xffe70000fffe0000, 0x19300200, 0x00ff00ff , 640); 
TEST_RR_OP64_OO( 82 , smulx8, 0x000040000000ffec, 0x00800014, 0x80ffffad , 648); 
TEST_RR_OP64_OO( 83 , smulx8, 0x00800080ffec1200, 0x80ffff80, 0x80ffdc14 , 656); 
TEST_RR_OP64_OO( 84 , smulx8, 0x00000000ed86ffea, 0x00bb2bff, 0x00801692 , 664); 
TEST_RR_OP64_OO( 85 , smulx8, 0xf980f55a00801980, 0x801d80cd, 0xa20d80ff , 672); 
TEST_RR_OP64_OO( 86 , smulx8, 0x40000000fd420000, 0x8080fa00, 0x00808075 , 680); 
TEST_RR_OP64_OO( 87 , smulx8, 0xffacfff100000000, 0x540f1e00, 0xffff8000 , 688); 
TEST_RR_OP64_OO( 88 , smulx8, 0xe6650000005c0f80, 0xbb55ffe1, 0x005f80a4 , 696); 
TEST_RR_OP64_OO( 89 , smulx8, 0xffccda0000000000, 0xff4cff00, 0x80340000 , 704); 
TEST_RR_OP64_OO( 90 , smulx8, 0x0000000000004000, 0x80ffb380, 0x00008000 , 712); 
TEST_RR_OP64_OO( 91 , smulx8, 0xffbd000105800000, 0x43ff80ff, 0xffff00f5 , 720); 
TEST_RR_OP64_OO( 92 , smulx8, 0x003c000000000080, 0xff0000ff, 0x00c480d3 , 728); 
TEST_RR_OP64_OO( 93 , smulx8, 0x2c80000000000000, 0xa7ff80ff, 0x00800000 , 736); 
TEST_RR_OP64_OO( 94 , smulx8, 0x0000f72a00001c6b, 0x001a00b5, 0xa9ff9f80 , 744); 
TEST_RR_OP64_OO( 95 , smulx8, 0x4000008000000000, 0x80ff0000, 0x8080d7ff , 752); 
TEST_RR_OP64_OO( 96 , smulx8, 0x0000000000000000, 0x0000ffff, 0x00000000 , 760); 
TEST_RR_OP64_OO( 97 , smulx8, 0x3330fc800000ff10, 0x8280ff14, 0x0798f400 , 768); 
TEST_RR_OP64_OO( 98 , smulx8, 0xcc8000004000c400, 0x80008078, 0x80678080 , 776); 
TEST_RR_OP64_OO( 99 , smulx8, 0x000000800988005e, 0x8080eca2, 0xff00ff86 , 784); 
TEST_RR_OP64_OO( 100 , smulx8, 0x0000400000000000, 0x0f800000, 0x80000000 , 792); 
TEST_RR_OP64_OO( 101 , smulx8, 0x00800000c3800000, 0x80008000, 0x00ff8079 , 800); 
TEST_RR_OP64_OO( 102 , smulx8, 0x000000803d000000, 0x00ff8600, 0x80008080 , 808); 
TEST_RR_OP64_OO( 103 , smulx8, 0x0080000000800000, 0xff00805a, 0x808000ff , 816); 
TEST_RR_OP64_OO( 104 , smulx8, 0x00000001002f0000, 0x80ffd180, 0xff0000ff , 824); 
TEST_RR_OP64_OO( 105 , smulx8, 0x000000800300fffb, 0x00fffa05, 0x80ffff80 , 832); 
TEST_RR_OP64_OO( 106 , smulx8, 0x00800000cb000000, 0xff008000, 0x0080006a , 840); 
TEST_RR_OP64_OO( 107 , smulx8, 0x4000008039804000, 0x80808080, 0xff80808d , 848); 
TEST_RR_OP64_OO( 108 , smulx8, 0x0000170000000000, 0x00d20080, 0x80ff00ff , 856); 
TEST_RR_OP64_OO( 109 , smulx8, 0xde0000000000eea8, 0x800000b6, 0xff443cff , 864); 
TEST_RR_OP64_OO( 110 , smulx8, 0xf4ed000040000000, 0xe5008000, 0xff69ff80 , 872); 
TEST_RR_OP64_OO( 111 , smulx8, 0x1100000000000000, 0x80d38000, 0x00deb300 , 880); 
TEST_RR_OP64_OO( 112 , smulx8, 0x01140000ce800000, 0x04538080, 0x00450063 , 888); 
TEST_RR_OP64_OO( 113 , smulx8, 0x008000000062de00, 0xff809e44, 0x008080ff , 896); 
TEST_RR_OP64_OO( 114 , smulx8, 0x0fa0000000001080, 0xe0ff80df, 0x00838000 , 904); 
TEST_RR_OP64_OO( 115 , smulx8, 0x003700800000ffb0, 0xc9ff00ff, 0x80ff5002 , 912); 
TEST_RR_OP64_OO( 116 , smulx8, 0x00000000ffeb0068, 0x0000ffff, 0x00009815 , 920); 
TEST_RR_OP64_OO( 117 , smulx8, 0xffb400000000ffce, 0x4c0000ff, 0x00ff3200 , 928); 
TEST_RR_OP64_OO( 118 , smulx8, 0x4000089d00004000, 0x80eb0080, 0x97808080 , 936); 
TEST_RR_OP64_OO( 119 , smulx8, 0x0000000000000000, 0x3dff0000, 0x00005980 , 944); 
TEST_RR_OP64_OO( 120 , smulx8, 0x0080000000000001, 0x8000ffff, 0xffffff00 , 952); 
TEST_RR_OP64_OO( 121 , smulx8, 0x0000000000000000, 0xa2007000, 0x51008000 , 960); 
TEST_RR_OP64_OO( 122 , smulx8, 0x056a0080ffd70080, 0x1580ffff, 0xff428029 , 968); 
TEST_RR_OP64_OO( 123 , smulx8, 0x000040000000d880, 0x8080004f, 0x80008080 , 976); 
TEST_RR_OP64_OO( 124 , smulx8, 0x3b00000000000000, 0x8a000000, 0x8080ffb0 , 984); 
TEST_RR_OP64_OO( 125 , smulx8, 0x0000000000000000, 0x00808000, 0x00008000 , 992); 
TEST_RR_OP64_OO( 126 , smulx8, 0x0001400031000000, 0xff8080ff, 0x80ff009e , 1000); 
TEST_RR_OP64_OO( 127 , smulx8, 0x0001000100010001, 0xffffffff, 0xffffffff , 1008); 
TEST_RR_OP64_OO( 128 , smulx8, 0x0000fff400010052, 0xe6ffffae, 0x0c00ffff , 1016); 
TEST_RR_OP64_OO( 129 , smulx8, 0x0000000000000000, 0x00800000, 0x00ffff80 , 1024); 
TEST_RR_OP64_OO( 130 , smulx8, 0x4000007700800001, 0x80ffffff, 0x8980ff80 , 1032); 
TEST_RR_OP64_OO( 131 , smulx8, 0x0000000026c00080, 0x0000b0ff, 0x00008084 , 1040); 
TEST_RR_OP64_OO( 132 , smulx8, 0x3e00ffbe00000000, 0x80420000, 0xff848071 , 1048); 
TEST_RR_OP64_OO( 133 , smulx8, 0x0000000000000000, 0x94008000, 0x0000a200 , 1056); 
TEST_RR_OP64_OO( 134 , smulx8, 0x4000000014ac0000, 0x80806cc1, 0x00800031 , 1064); 
TEST_RR_OP64_OO( 135 , smulx8, 0x3a80ea0000800063, 0x8b2cffff, 0x80809d80 , 1072); 
TEST_RR_OP64_OO( 136 , smulx8, 0x00000000ef803100, 0x80802180, 0x00009e80 , 1080); 
TEST_RR_OP64_OO( 137 , smulx8, 0x00000000ffea0000, 0xff8016cc, 0x000000ff , 1088); 
TEST_RR_OP64_OO( 138 , smulx8, 0xf180000000000000, 0x80000000, 0x801d00ff , 1096); 
TEST_RR_OP64_OO( 139 , smulx8, 0x0000000000000000, 0x00a40083, 0x00170000 , 1104); 
TEST_RR_OP64_OO( 140 , smulx8, 0x01600000d5004000, 0xa8005680, 0x6efc8080 , 1112); 
TEST_RR_OP64_OO( 141 , smulx8, 0x0001008000000000, 0xff800200, 0xffffd400 , 1120); 
TEST_RR_OP64_OO( 142 , smulx8, 0x0c931780ff95c380, 0x25806b80, 0xd15779ff , 1128); 
TEST_RR_OP64_OO( 143 , smulx8, 0x0080000000800000, 0xff808000, 0x008000ff , 1136); 
TEST_RR_OP64_OO( 144 , smulx8, 0xfed4000000000000, 0x4b0000ff, 0x11fc0000 , 1144); 
TEST_RR_OP64_OO( 145 , smulx8, 0x00001b8000800000, 0x80c9ff00, 0x8000e780 , 1152); 
TEST_RR_OP64_OO( 146 , smulx8, 0x0000008000000000, 0x0080ff00, 0xff00ff00 , 1160); 
TEST_RR_OP64_OO( 147 , smulx8, 0x006c000100000000, 0x94ff00ff, 0xffff00ff , 1168); 
TEST_RR_OP64_OO( 148 , smulx8, 0x2280003c00000001, 0xbbff00ff, 0xc480ffff , 1176); 
TEST_RR_OP64_OO( 149 , smulx8, 0x000000000000c180, 0x00ff8080, 0x00ff7d00 , 1184); 
TEST_RR_OP64_OO( 150 , smulx8, 0x0ab0e78000800000, 0xb431ff00, 0x80dcae80 , 1192); 
TEST_RR_OP64_OO( 151 , smulx8, 0x008000000001f800, 0xff80ff80, 0x008010ff , 1200); 
TEST_RR_OP64_OO( 152 , smulx8, 0x00000000e800ff8e, 0x000030ff, 0x00ff7280 , 1208); 
TEST_RR_OP64_OO( 153 , smulx8, 0x400000000056ffca, 0x80b3ff36, 0x0080ffaa , 1216); 
TEST_RR_OP64_OO( 154 , smulx8, 0xffe2da0000010000, 0xff4cffff, 0x801e00ff , 1224); 
TEST_RR_OP64_OO( 155 , smulx8, 0xffa4ffbe00000000, 0xff428000, 0xff5c8000 , 1232); 
TEST_RR_OP64_OO( 156 , smulx8, 0x0080310026000000, 0x808080ec, 0x9eff00b4 , 1240); 
TEST_RR_OP64_OO( 157 , smulx8, 0x0001000000800000, 0xff00ff00, 0xffff5680 , 1248); 
TEST_RR_OP64_OO( 158 , smulx8, 0x0000008000000000, 0xff800051, 0xff000080 , 1256); 
TEST_RR_OP64_OO( 159 , smulx8, 0x4000e60000000000, 0x80340000, 0x808000ff , 1264); 
TEST_RR_OP64_OO( 160 , smulx8, 0x0000000100800000, 0x00ff8000, 0xff8080ff , 1272); 
TEST_RR_OP64_OO( 161 , smulx8, 0x0000d80000000080, 0xff5080ff, 0x80008000 , 1280); 
TEST_RR_OP64_OO( 162 , smulx8, 0x0000ffd40080f680, 0x002cff13, 0xff008080 , 1288); 
TEST_RR_OP64_OO( 163 , smulx8, 0x000000400000ffcc, 0x63ff00fe, 0xc0001a95 , 1296); 
TEST_RR_OP64_OO( 164 , smulx8, 0x0980008000000080, 0xedffec80, 0x8080ff00 , 1304); 
TEST_RR_OP64_OO( 165 , smulx8, 0x0080eb8140000000, 0xff9d80ff, 0x35800080 , 1312); 
TEST_RR_OP64_OO( 166 , smulx8, 0xffd9000000800000, 0xff00ff00, 0x0027ff80 , 1320); 
TEST_RR_OP64_OO( 167 , smulx8, 0xe180008000000000, 0x3dffffff, 0x80800000 , 1328); 
TEST_RR_OP64_OO( 168 , smulx8, 0x0001000040000000, 0xffc28080, 0x00ff0080 , 1336); 
TEST_RR_OP64_OO( 169 , smulx8, 0x0080ffa400000000, 0xff5cff00, 0xff807700 , 1344); 
TEST_RR_OP64_OO( 170 , smulx8, 0x0001400000000000, 0xff800000, 0x80ff0080 , 1352); 
TEST_RR_OP64_OO( 171 , smulx8, 0x00010080edae0001, 0xffffbdff, 0x80ffff46 , 1360); 
TEST_RR_OP64_OO( 172 , smulx8, 0x0000008034800000, 0x00809700, 0xff008080 , 1368); 
TEST_RR_OP64_OO( 173 , smulx8, 0x004000000001e596, 0xc022ff9e, 0x00ff45ff , 1376); 
TEST_RR_OP64_OO( 174 , smulx8, 0x0080000000800000, 0xff00ff00, 0x8080ff80 , 1384); 
TEST_RR_OP64_OO( 175 , smulx8, 0x0000e1c540000000, 0x00b98000, 0x6d0bff80 , 1392); 
TEST_RR_OP64_OO( 176 , smulx8, 0x008026000001c300, 0xff80ff80, 0xb4807aff , 1400); 
TEST_RR_OP64_OO( 177 , smulx8, 0xcd80008040000000, 0x80ff8000, 0x8065ff80 , 1408); 
TEST_RR_OP64_OO( 178 , smulx8, 0x0580d70000800012, 0x8052ffff, 0x80f5ee80 , 1416); 
TEST_RR_OP64_OO( 179 , smulx8, 0x0000400000000080, 0x55800080, 0x8000ffff , 1424); 
TEST_RR_OP64_OO( 180 , smulx8, 0x000b1300006a0080, 0xf5daff80, 0x80ffff96 , 1432); 
TEST_RR_OP64_OO( 181 , smulx8, 0x0000000000002880, 0xf28000af, 0x000080ff , 1440); 
TEST_RR_OP64_OO( 182 , smulx8, 0x0000000000000ccc, 0x00008034, 0xff1d3f00 , 1448); 
TEST_RR_OP64_OO( 183 , smulx8, 0x00001a0000000000, 0x00800000, 0xcc8080ff , 1456); 
TEST_RR_OP64_OO( 184 , smulx8, 0x0001ffa7ffb82300, 0xffffffba, 0x59ff8048 , 1464); 
TEST_RR_OP64_OO( 185 , smulx8, 0x0000000000000000, 0x00ff0000, 0x008080ff , 1472); 
TEST_RR_OP64_OO( 186 , smulx8, 0x0000008000000000, 0x00ff8000, 0x80b16000 , 1480); 
TEST_RR_OP64_OO( 187 , smulx8, 0x1600000000000000, 0x80000080, 0x80d400ff , 1488); 
TEST_RR_OP64_OO( 188 , smulx8, 0x000000800000007e, 0x00800082, 0xff80ffff , 1496); 
TEST_RR_OP64_OO( 189 , smulx8, 0xff8ffff400000080, 0x710c0080, 0xffffff3b , 1504); 
TEST_RR_OP64_OO( 190 , smulx8, 0x0001000000000000, 0xff0000bf, 0xb4ff0000 , 1512); 
TEST_RR_OP64_OO( 191 , smulx8, 0x00004000ffa84000, 0x00805880, 0x805d80ff , 1520); 
TEST_RR_OP64_OO( 192 , smulx8, 0x0000400000000000, 0x0080ff80, 0x80ff0000 , 1528); 
TEST_RR_OP64_OO( 193 , smulx8, 0xf894000140004000, 0x13ff8080, 0xff9c8080 , 1536); 
TEST_RR_OP64_OO( 194 , smulx8, 0x0000008000000000, 0xff80ff00, 0xff00ff00 , 1544); 
TEST_RR_OP64_OO( 195 , smulx8, 0x2f80000000000000, 0xa100ff00, 0x00808000 , 1552); 
TEST_RR_OP64_OO( 196 , smulx8, 0x0000ff6a00000080, 0x80fbff80, 0x1e00ff00 , 1560); 
TEST_RR_OP64_OO( 197 , smulx8, 0x0000000000000000, 0xdf004500, 0xb800ff00 , 1568); 
TEST_RR_OP64_OO( 198 , smulx8, 0x0080002800004000, 0xffffff80, 0xd8808000 , 1576); 
TEST_RR_OP64_OO( 199 , smulx8, 0x0000000100000000, 0x00ff0000, 0xff80a08f , 1584); 

  #-------------------------------------------------------------
  # Bypassing tests
  #-------------------------------------------------------------


TEST_PASSFAIL

RV_COMPLIANCE_CODE_END

.data

RV_COMPLIANCE_DATA_BEGIN
test_res:
    .fill 398, 4, -1
RV_COMPLIANCE_DATA_END