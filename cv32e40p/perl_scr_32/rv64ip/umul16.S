# See LICENSE for license details.
#*****************************************************************************
# umul16.S
#-----------------------------------------------------------------------------
#
# Test add instruction.
#


#include "riscv_test.h"
#include "compliance_test.h"
#include "compliance_io.h"
#include "aw_test_macros.h"

RVTEST_RV64U
RV_COMPLIANCE_CODE_BEGIN

  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------

TEST_RR_OP64_OO( 2 , umul16, 0x0000000000000000, 0xf50e8000, 0x00000000, 8); 
TEST_RR_OP64_OO( 3 , umul16, 0x000000003fdd5bc3, 0x00007cf5, 0xffff82d7, 16); 
TEST_RR_OP64_OO( 4 , umul16, 0x000000007fff8000, 0xb83affff, 0x00008000, 24); 
TEST_RR_OP64_OO( 5 , umul16, 0x0000000000000000, 0x00008000, 0x00000000, 32); 
TEST_RR_OP64_OO( 6 , umul16, 0xfffe000100000000, 0xffffc454, 0xffff0000, 40); 
TEST_RR_OP64_OO( 7 , umul16, 0x00000000fffe0001, 0x0000ffff, 0x0000ffff, 48); 
TEST_RR_OP64_OO( 8 , umul16, 0x7fff80000890f76f, 0x8000ffff, 0xffff0891, 56); 
TEST_RR_OP64_OO( 9 , umul16, 0x7fff800048ff8000, 0xffff8000, 0x800091ff, 64); 
TEST_RR_OP64_OO( 10 , umul16, 0x998b667400000000, 0xffff0000, 0x998c0000, 72); 
TEST_RR_OP64_OO( 11 , umul16, 0xfffe000166c20000, 0xffff8000, 0xffffcd84, 80); 
TEST_RR_OP64_OO( 12 , umul16, 0x0000000000000000, 0xc51f0000, 0x00008000, 88); 
TEST_RR_OP64_OO( 13 , umul16, 0x0000000000000000, 0x92490000, 0x00008000, 96); 
TEST_RR_OP64_OO( 14 , umul16, 0x40000000071819d8, 0x80003058, 0x80002591, 104); 
TEST_RR_OP64_OO( 15 , umul16, 0x0000000000000000, 0x00008000, 0x00000000, 112); 
TEST_RR_OP64_OO( 16 , umul16, 0x7fff800040000000, 0x80008000, 0xffff8000, 120); 
TEST_RR_OP64_OO( 17 , umul16, 0x7fff8000fffe0001, 0xffffffff, 0x8000ffff, 128); 
TEST_RR_OP64_OO( 18 , umul16, 0x0000000000000000, 0x00008000, 0x80000000, 136); 
TEST_RR_OP64_OO( 19 , umul16, 0x0000000000000000, 0xffff0000, 0x00008000, 144); 
TEST_RR_OP64_OO( 20 , umul16, 0x3fdb000072c68000, 0x80008000, 0x7fb6e58d, 152); 
TEST_RR_OP64_OO( 21 , umul16, 0x7fff800000000000, 0xffff8000, 0x80000000, 160); 
TEST_RR_OP64_OO( 22 , umul16, 0x000000007fff8000, 0xffff8000, 0x0000ffff, 168); 
TEST_RR_OP64_OO( 23 , umul16, 0x0000000073f48c0b, 0x8000ffff, 0x000073f5, 176); 
TEST_RR_OP64_OO( 24 , umul16, 0x00000000fffe0001, 0x0000ffff, 0x8000ffff, 184); 
TEST_RR_OP64_OO( 25 , umul16, 0x00000000859c7a63, 0xffffffff, 0x0000859d, 192); 
TEST_RR_OP64_OO( 26 , umul16, 0x7fff80007fff8000, 0x80008000, 0xffffffff, 200); 
TEST_RR_OP64_OO( 27 , umul16, 0x0000000000000000, 0x00000000, 0x80008000, 208); 
TEST_RR_OP64_OO( 28 , umul16, 0x79bb864400000000, 0x79bc0000, 0xffff8000, 216); 
TEST_RR_OP64_OO( 29 , umul16, 0xd80f27f040000000, 0xd8108000, 0xffff8000, 224); 
TEST_RR_OP64_OO( 30 , umul16, 0x00000000cb0134fe, 0x0000cb02, 0x15b7ffff, 232); 
TEST_RR_OP64_OO( 31 , umul16, 0x0000000000000000, 0x00000000, 0xffffed98, 240); 
TEST_RR_OP64_OO( 32 , umul16, 0x4000000000000000, 0x80002d66, 0x80000000, 248); 
TEST_RR_OP64_OO( 33 , umul16, 0xeb8614791d397f00, 0xffff4d54, 0xeb8760c0, 256); 
TEST_RR_OP64_OO( 34 , umul16, 0x00000000f2eb0d14, 0x0000f2ec, 0x0000ffff, 264); 
TEST_RR_OP64_OO( 35 , umul16, 0x000000007fff8000, 0x7cbe8000, 0x0000ffff, 272); 
TEST_RR_OP64_OO( 36 , umul16, 0x5f5580001d0d0000, 0x80008000, 0xbeab3a1a, 280); 
TEST_RR_OP64_OO( 37 , umul16, 0x40000000fffe0001, 0x8000ffff, 0x8000ffff, 288); 
TEST_RR_OP64_OO( 38 , umul16, 0x7fff80003c7ec381, 0xffffffff, 0x80003c7f, 296); 
TEST_RR_OP64_OO( 39 , umul16, 0x7fff800000000000, 0xffff0000, 0x8000fb75, 304); 
TEST_RR_OP64_OO( 40 , umul16, 0xfffe000100000000, 0xffffffff, 0xffff0000, 312); 
TEST_RR_OP64_OO( 41 , umul16, 0x000000007fff8000, 0x2f07ffff, 0x00008000, 320); 
TEST_RR_OP64_OO( 42 , umul16, 0x5bc3a43c00000000, 0x5bc48000, 0xffff0000, 328); 
TEST_RR_OP64_OO( 43 , umul16, 0xaa3d55c200000000, 0xaa3e0000, 0xffffffff, 336); 
TEST_RR_OP64_OO( 44 , umul16, 0x0000000000000000, 0x03060000, 0x0000f58a, 344); 
TEST_RR_OP64_OO( 45 , umul16, 0x00000000c3a83c57, 0x0761c3a9, 0x0000ffff, 352); 
TEST_RR_OP64_OO( 46 , umul16, 0x7fee801100000000, 0xffff0000, 0x7fefffff, 360); 
TEST_RR_OP64_OO( 47 , umul16, 0x0000000000000000, 0x0000ffff, 0xffff0000, 368); 
TEST_RR_OP64_OO( 48 , umul16, 0x0000000000000000, 0x1bc00000, 0x0000ffff, 376); 
TEST_RR_OP64_OO( 49 , umul16, 0x129355e040000000, 0xba508000, 0x19868000, 384); 
TEST_RR_OP64_OO( 50 , umul16, 0x0000000000000000, 0x0000efe0, 0xffff0000, 392); 
TEST_RR_OP64_OO( 51 , umul16, 0x7fff800040000000, 0xffff8000, 0x80008000, 400); 
TEST_RR_OP64_OO( 52 , umul16, 0x258500007fff8000, 0x8000ffff, 0x4b0a8000, 408); 
TEST_RR_OP64_OO( 53 , umul16, 0xfffe000100000000, 0xffffad7b, 0xffff0000, 416); 
TEST_RR_OP64_OO( 54 , umul16, 0x4000000000000000, 0x80000000, 0x80000000, 424); 
TEST_RR_OP64_OO( 55 , umul16, 0x0000000000000000, 0x00008000, 0x9d1e0000, 432); 
TEST_RR_OP64_OO( 56 , umul16, 0x00000000bd0142fe, 0x0000ffff, 0x0000bd02, 440); 
TEST_RR_OP64_OO( 57 , umul16, 0x7fff80007fff8000, 0xffffffff, 0x80008000, 448); 
TEST_RR_OP64_OO( 58 , umul16, 0x0000000000000000, 0xd3aa0000, 0x00000000, 456); 
TEST_RR_OP64_OO( 59 , umul16, 0xfd63029c1d690000, 0xfd643ad2, 0xffff8000, 464); 
TEST_RR_OP64_OO( 60 , umul16, 0xfffe000100000000, 0xffff0000, 0xffff0000, 472); 
TEST_RR_OP64_OO( 61 , umul16, 0xfffe0001d4c42b3b, 0xffffffff, 0xffffd4c5, 480); 
TEST_RR_OP64_OO( 62 , umul16, 0x0000000000000000, 0xbcd90000, 0x0000ffff, 488); 
TEST_RR_OP64_OO( 63 , umul16, 0xa693596c3c7377e7, 0xffffbb53, 0xa694529d, 496); 
TEST_RR_OP64_OO( 64 , umul16, 0xfffe000100000000, 0xffff8000, 0xffff0000, 504); 
TEST_RR_OP64_OO( 65 , umul16, 0x43eebc117ed08000, 0x43ef8000, 0xfffffda1, 512); 
TEST_RR_OP64_OO( 66 , umul16, 0x0000000015deea21, 0x000015df, 0x63e4ffff, 520); 
TEST_RR_OP64_OO( 67 , umul16, 0x6b5d000000b30000, 0xd6ba0166, 0x80008000, 528); 
TEST_RR_OP64_OO( 68 , umul16, 0xfffe0001fffe0001, 0xffffffff, 0xffffffff, 536); 
TEST_RR_OP64_OO( 69 , umul16, 0x0000000036938000, 0x00008000, 0x80006d27, 544); 
TEST_RR_OP64_OO( 70 , umul16, 0x0000000038a10000, 0x80007142, 0x00008000, 552); 
TEST_RR_OP64_OO( 71 , umul16, 0xfffe000100000000, 0xffffffff, 0xffff0000, 560); 
TEST_RR_OP64_OO( 72 , umul16, 0x0000000000000000, 0x00000000, 0xffff8000, 568); 
TEST_RR_OP64_OO( 73 , umul16, 0x7fff8000fffe0001, 0x8000ffff, 0xffffffff, 576); 
TEST_RR_OP64_OO( 74 , umul16, 0x000000007fff8000, 0x0000ffff, 0x80008000, 584); 
TEST_RR_OP64_OO( 75 , umul16, 0x3ec9000000000000, 0x7d920000, 0x8000ffff, 592); 
TEST_RR_OP64_OO( 76 , umul16, 0x772088df53aaac55, 0x7721ffff, 0xffff53ab, 600); 
TEST_RR_OP64_OO( 77 , umul16, 0x400000002db6d249, 0x8000ffff, 0x80002db7, 608); 
TEST_RR_OP64_OO( 78 , umul16, 0x000000006693996c, 0xffff6694, 0x0000ffff, 616); 
TEST_RR_OP64_OO( 79 , umul16, 0x000000005ea38000, 0x0000bd47, 0xf2198000, 624); 
TEST_RR_OP64_OO( 80 , umul16, 0xfffe000100000000, 0xffff0000, 0xffffffff, 632); 
TEST_RR_OP64_OO( 81 , umul16, 0x4000000006c10000, 0x80000d82, 0x80008000, 640); 
TEST_RR_OP64_OO( 82 , umul16, 0x000000006cb30000, 0xffffd966, 0x00008000, 648); 
TEST_RR_OP64_OO( 83 , umul16, 0x0000000000000000, 0xffff0000, 0x00008000, 656); 
TEST_RR_OP64_OO( 84 , umul16, 0xfffe000100000000, 0xffff0000, 0xffffffff, 664); 
TEST_RR_OP64_OO( 85 , umul16, 0x5ee9a11600000000, 0xffffffff, 0x5eea0000, 672); 
TEST_RR_OP64_OO( 86 , umul16, 0x4a67800000000000, 0x80000000, 0x94cf0000, 680); 
TEST_RR_OP64_OO( 87 , umul16, 0x46d880007fff8000, 0x8000ffff, 0x8db18000, 688); 
TEST_RR_OP64_OO( 88 , umul16, 0x6bec9413c75038af, 0xffffffff, 0x6bedc751, 696); 
TEST_RR_OP64_OO( 89 , umul16, 0x0000000000000000, 0x80005f07, 0x00000000, 704); 
TEST_RR_OP64_OO( 90 , umul16, 0x00000000fffe0001, 0xffffffff, 0x0000ffff, 712); 
TEST_RR_OP64_OO( 91 , umul16, 0x07e3858cfffe0001, 0x55a7ffff, 0x1794ffff, 720); 
TEST_RR_OP64_OO( 92 , umul16, 0x0000000000000000, 0x80000000, 0x00008000, 728); 
TEST_RR_OP64_OO( 93 , umul16, 0x0000000000000000, 0x80000000, 0x0000b8d2, 736); 
TEST_RR_OP64_OO( 94 , umul16, 0x7fff800000000000, 0x8000e40b, 0xffff0000, 744); 
TEST_RR_OP64_OO( 95 , umul16, 0x2cdbcab5be6a4195, 0x6217be6b, 0x7513ffff, 752); 
TEST_RR_OP64_OO( 96 , umul16, 0x000000007fff8000, 0xffffffff, 0x00008000, 760); 
TEST_RR_OP64_OO( 97 , umul16, 0x0000000036fb0000, 0x00006df6, 0x80008000, 768); 
TEST_RR_OP64_OO( 98 , umul16, 0x0000000000000000, 0xffff0000, 0x00000000, 776); 
TEST_RR_OP64_OO( 99 , umul16, 0x7fff800000000000, 0x80008000, 0xffff0000, 784); 
TEST_RR_OP64_OO( 100 , umul16, 0x0000000000000000, 0x80000000, 0x00000000, 792); 
TEST_RR_OP64_OO( 101 , umul16, 0xbd1442eb7a088000, 0xffff8000, 0xbd15f411, 800); 
TEST_RR_OP64_OO( 102 , umul16, 0x5b58a4a700000000, 0xffffffff, 0x5b590000, 808); 
TEST_RR_OP64_OO( 103 , umul16, 0x0000000000000000, 0x00004221, 0xce340000, 816); 
TEST_RR_OP64_OO( 104 , umul16, 0xfffe000100000000, 0xffff0000, 0xffff8000, 824); 
TEST_RR_OP64_OO( 105 , umul16, 0x0000000000000000, 0x4fff8000, 0x00000000, 832); 
TEST_RR_OP64_OO( 106 , umul16, 0xfffe000100000000, 0xffff0000, 0xffffc2e5, 840); 
TEST_RR_OP64_OO( 107 , umul16, 0xfffe0001075853a4, 0xffff1dfa, 0xffff3eba, 848); 
TEST_RR_OP64_OO( 108 , umul16, 0x0000000000000000, 0xffff0000, 0x0000ffff, 856); 
TEST_RR_OP64_OO( 109 , umul16, 0x000000007fff8000, 0x00008000, 0xe472ffff, 864); 
TEST_RR_OP64_OO( 110 , umul16, 0x0ca1000060bdd440, 0x80008dc0, 0x1942aeb7, 872); 
TEST_RR_OP64_OO( 111 , umul16, 0xfffe00018760789f, 0xffffffff, 0xffff8761, 880); 
TEST_RR_OP64_OO( 112 , umul16, 0x0000000040000000, 0xffff8000, 0x00008000, 888); 
TEST_RR_OP64_OO( 113 , umul16, 0x0000000000000000, 0x2ee20000, 0x0000ffff, 896); 
TEST_RR_OP64_OO( 114 , umul16, 0x7fff800000000000, 0xffffb386, 0x80000000, 904); 
TEST_RR_OP64_OO( 115 , umul16, 0x7fff800033238000, 0xffff8000, 0x80006647, 912); 
TEST_RR_OP64_OO( 116 , umul16, 0x6d8a927517503d20, 0x6d8b52d2, 0xffff4810, 920); 
TEST_RR_OP64_OO( 117 , umul16, 0x000000005db4a24b, 0x0000ffff, 0x85545db5, 928); 
TEST_RR_OP64_OO( 118 , umul16, 0x0000000040000000, 0x84738000, 0x00008000, 936); 
TEST_RR_OP64_OO( 119 , umul16, 0xf45ea19c02073e10, 0xfbd42bf5, 0xf86b0bd0, 944); 
TEST_RR_OP64_OO( 120 , umul16, 0x0000000000000000, 0xffffffff, 0x00000000, 952); 
TEST_RR_OP64_OO( 121 , umul16, 0x000000007fff8000, 0xffffffff, 0x00008000, 960); 
TEST_RR_OP64_OO( 122 , umul16, 0x0000000000000000, 0x0000d034, 0xffff0000, 968); 
TEST_RR_OP64_OO( 123 , umul16, 0x000000007fff8000, 0x00008000, 0xffffffff, 976); 
TEST_RR_OP64_OO( 124 , umul16, 0x0000000003955d79, 0x0000066f, 0x00008e97, 984); 
TEST_RR_OP64_OO( 125 , umul16, 0x4cd680007fff8000, 0x8000ffff, 0x99ad8000, 992); 
TEST_RR_OP64_OO( 126 , umul16, 0x7fff800000000000, 0x8000ffff, 0xffff0000, 1000); 
TEST_RR_OP64_OO( 127 , umul16, 0xad5452ab00000000, 0xad550000, 0xffff0000, 1008); 
TEST_RR_OP64_OO( 128 , umul16, 0x0000000000000000, 0x00000000, 0xbc420000, 1016); 
TEST_RR_OP64_OO( 129 , umul16, 0x5a3000007fff8000, 0xb4608000, 0x8000ffff, 1024); 
TEST_RR_OP64_OO( 130 , umul16, 0xfffe00017fff8000, 0xffff8000, 0xffffffff, 1032); 
TEST_RR_OP64_OO( 131 , umul16, 0xb3524cad00000000, 0xffff0000, 0xb353ffff, 1040); 
TEST_RR_OP64_OO( 132 , umul16, 0x7fff80000ab5f54a, 0x8000ffff, 0xffff0ab6, 1048); 
TEST_RR_OP64_OO( 133 , umul16, 0x0000000000000000, 0x00000000, 0xffff04d2, 1056); 
TEST_RR_OP64_OO( 134 , umul16, 0xfffe00012ed4e489, 0xffff3dd5, 0xffffc1e5, 1064); 
TEST_RR_OP64_OO( 135 , umul16, 0x3e85800026ad4edd, 0x80004ab5, 0x7d0b8489, 1072); 
TEST_RR_OP64_OO( 136 , umul16, 0x0000000000000000, 0x00000000, 0x00000000, 1080); 
TEST_RR_OP64_OO( 137 , umul16, 0x000000007fff8000, 0x00008000, 0x68d4ffff, 1088); 
TEST_RR_OP64_OO( 138 , umul16, 0x0000000000000000, 0x00000000, 0x00000000, 1096); 
TEST_RR_OP64_OO( 139 , umul16, 0x0000000000000000, 0x00000000, 0x0000ffff, 1104); 
TEST_RR_OP64_OO( 140 , umul16, 0x03176f002e5a552e, 0x05c0810f, 0x89a45bf2, 1112); 
TEST_RR_OP64_OO( 141 , umul16, 0x3594000000000000, 0x80008000, 0x6b280000, 1120); 
TEST_RR_OP64_OO( 142 , umul16, 0x7fff80007fff8000, 0xffff8000, 0x8000ffff, 1128); 
TEST_RR_OP64_OO( 143 , umul16, 0x2dbea5c800000000, 0x2dd7ffff, 0xff780000, 1136); 
TEST_RR_OP64_OO( 144 , umul16, 0x0000000000000000, 0x00000000, 0xf12cffff, 1144); 
TEST_RR_OP64_OO( 145 , umul16, 0x191a8fae00000000, 0x1b4d0000, 0xeb660000, 1152); 
TEST_RR_OP64_OO( 146 , umul16, 0x0000000000000000, 0x00008000, 0x80000000, 1160); 
TEST_RR_OP64_OO( 147 , umul16, 0xfffe000170d68000, 0xffff8000, 0xffffe1ad, 1168); 
TEST_RR_OP64_OO( 148 , umul16, 0x1e40f2aefffe0001, 0x55d2ffff, 0x5a3fffff, 1176); 
TEST_RR_OP64_OO( 149 , umul16, 0x7fff80006b4deee9, 0x8000ea83, 0xffff7523, 1184); 
TEST_RR_OP64_OO( 150 , umul16, 0x4000000000000000, 0x80000000, 0x80000000, 1192); 
TEST_RR_OP64_OO( 151 , umul16, 0x14150445acaa3d04, 0x319fc89c, 0x679bdc57, 1200); 
TEST_RR_OP64_OO( 152 , umul16, 0xfffe000100000000, 0xffff578e, 0xffff0000, 1208); 
TEST_RR_OP64_OO( 153 , umul16, 0x0000000016e38000, 0xffff2dc7, 0x00008000, 1216); 
TEST_RR_OP64_OO( 154 , umul16, 0x0000000000000000, 0x80000000, 0x0000ffff, 1224); 
TEST_RR_OP64_OO( 155 , umul16, 0x0000000000000000, 0x00008000, 0x80000000, 1232); 
TEST_RR_OP64_OO( 156 , umul16, 0x7fff800000000000, 0x80000000, 0xffffffff, 1240); 
TEST_RR_OP64_OO( 157 , umul16, 0xfffe000100000000, 0xffff0000, 0xffff8000, 1248); 
TEST_RR_OP64_OO( 158 , umul16, 0x00000000fffe0001, 0x8000ffff, 0x0000ffff, 1256); 
TEST_RR_OP64_OO( 159 , umul16, 0x044300007fff8000, 0x0886ffff, 0x80008000, 1264); 
TEST_RR_OP64_OO( 160 , umul16, 0x0000000040000000, 0x00008000, 0x80008000, 1272); 
TEST_RR_OP64_OO( 161 , umul16, 0x77c00d24181be7e4, 0x7f84181c, 0xf069ffff, 1280); 
TEST_RR_OP64_OO( 162 , umul16, 0x000000001462277b, 0x000059ed, 0xffff3a07, 1288); 
TEST_RR_OP64_OO( 163 , umul16, 0xfffe000100000000, 0xffffc02d, 0xffff0000, 1296); 
TEST_RR_OP64_OO( 164 , umul16, 0x7fff800040000000, 0x80008000, 0xffff8000, 1304); 
TEST_RR_OP64_OO( 165 , umul16, 0xec4213bd6a3d8000, 0xffffd47b, 0xec438000, 1312); 
TEST_RR_OP64_OO( 166 , umul16, 0x7978868700000000, 0x79790000, 0xffff7c9a, 1320); 
TEST_RR_OP64_OO( 167 , umul16, 0x7bd8000000000000, 0xf7b00000, 0x80008000, 1328); 
TEST_RR_OP64_OO( 168 , umul16, 0x0000000000000000, 0x0000ffff, 0xffff0000, 1336); 
TEST_RR_OP64_OO( 169 , umul16, 0xfffe00017fff8000, 0xffff8000, 0xffffffff, 1344); 
TEST_RR_OP64_OO( 170 , umul16, 0x12900000a7b65849, 0x2520ffff, 0x8000a7b7, 1352); 
TEST_RR_OP64_OO( 171 , umul16, 0x4f26800000000000, 0x80000000, 0x9e4d8000, 1360); 
TEST_RR_OP64_OO( 172 , umul16, 0x7fff80007fff8000, 0xffff8000, 0x8000ffff, 1368); 
TEST_RR_OP64_OO( 173 , umul16, 0x7fff8000918f663c, 0x8000cc8d, 0xffffb62c, 1376); 
TEST_RR_OP64_OO( 174 , umul16, 0x4c7ce7947fff8000, 0xe43c8000, 0x55cbffff, 1384); 
TEST_RR_OP64_OO( 175 , umul16, 0x7fff80007fff8000, 0x80008000, 0xffffffff, 1392); 
TEST_RR_OP64_OO( 176 , umul16, 0xbc7c4383fffe0001, 0xbc7dffff, 0xffffffff, 1400); 
TEST_RR_OP64_OO( 177 , umul16, 0x0000000069a78000, 0xffffd34f, 0x00008000, 1408); 
TEST_RR_OP64_OO( 178 , umul16, 0x1fd8e02700000000, 0x1fd90000, 0xffff1017, 1416); 
TEST_RR_OP64_OO( 179 , umul16, 0x00000000de75218a, 0x0000de76, 0xf6deffff, 1424); 
TEST_RR_OP64_OO( 180 , umul16, 0x0000000000000000, 0xffff8000, 0x00000000, 1432); 
TEST_RR_OP64_OO( 181 , umul16, 0x3fbbc04400000000, 0x3fbc0000, 0xffffffff, 1440); 
TEST_RR_OP64_OO( 182 , umul16, 0x91286ed725ab0000, 0x91298000, 0xffff4b56, 1448); 
TEST_RR_OP64_OO( 183 , umul16, 0x000000002d8bd274, 0x0000ffff, 0x80002d8c, 1456); 
TEST_RR_OP64_OO( 184 , umul16, 0x0000000000000000, 0xffff0000, 0x0000ffff, 1464); 
TEST_RR_OP64_OO( 185 , umul16, 0x000000000cb38000, 0x00008000, 0x91f61967, 1472); 
TEST_RR_OP64_OO( 186 , umul16, 0x044ab51200000000, 0x32f20000, 0x15910000, 1480); 
TEST_RR_OP64_OO( 187 , umul16, 0x000000007fff8000, 0x0000ffff, 0xffff8000, 1488); 
TEST_RR_OP64_OO( 188 , umul16, 0x0000000000000000, 0x80000000, 0x000015d1, 1496); 
TEST_RR_OP64_OO( 189 , umul16, 0x3625000000000000, 0x80000000, 0x6c4a8000, 1504); 
TEST_RR_OP64_OO( 190 , umul16, 0x95f86a0700000000, 0xffff8b01, 0x95f90000, 1512); 
TEST_RR_OP64_OO( 191 , umul16, 0x0337fcc848772804, 0xffff5ba9, 0x0338ca64, 1520); 
TEST_RR_OP64_OO( 192 , umul16, 0x400000007fff8000, 0x80008000, 0x8000ffff, 1528); 
TEST_RR_OP64_OO( 193 , umul16, 0x7fff800000000000, 0xffff0000, 0x80000c5b, 1536); 
TEST_RR_OP64_OO( 194 , umul16, 0x0000000000000000, 0x00008000, 0x00000000, 1544); 
TEST_RR_OP64_OO( 195 , umul16, 0x0000000000000000, 0x0000ffff, 0x62560000, 1552); 
TEST_RR_OP64_OO( 196 , umul16, 0x0000000000000000, 0xba74ffff, 0x00000000, 1560); 
TEST_RR_OP64_OO( 197 , umul16, 0xccf733087fff8000, 0xccf88000, 0xffffffff, 1568); 
TEST_RR_OP64_OO( 198 , umul16, 0x0000000000000000, 0x00008000, 0x00000000, 1576); 
TEST_RR_OP64_OO( 199 , umul16, 0x0000000040000000, 0x80008000, 0x00008000, 1584); 

  #-------------------------------------------------------------
  # Bypassing tests
  #-------------------------------------------------------------


TEST_PASSFAIL

RV_COMPLIANCE_CODE_END

.data

RV_COMPLIANCE_DATA_BEGIN
test_res:
    .fill 398, 4, -1
RV_COMPLIANCE_DATA_END