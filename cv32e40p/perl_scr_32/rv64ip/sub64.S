# See LICENSE for license details.
#*****************************************************************************
# sub64.S
#-----------------------------------------------------------------------------
#
# Test add instruction.
#


#include "riscv_test.h"
#include "compliance_test.h"
#include "compliance_io.h"
#include "aw_test_macros.h"

RVTEST_RV64U
RV_COMPLIANCE_CODE_BEGIN

  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------

TEST_RR_OP64_IO( 2 , sub64, 0x8000000000000000, 0x00000000, 0x80000000, 0x00000000, 0x00000000, 8); 
TEST_RR_OP64_IO( 3 , sub64, 0xffffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 16); 
TEST_RR_OP64_IO( 4 , sub64, 0xba22ba89232bd044, 0x232bd044, 0x3a22ba89, 0x00000000, 0x80000000, 24); 
TEST_RR_OP64_IO( 5 , sub64, 0xffffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 32); 
TEST_RR_OP64_IO( 6 , sub64, 0x175a83c1a30890b7, 0xa30890b7, 0x175a83c1, 0x00000000, 0x00000000, 40); 
TEST_RR_OP64_IO( 7 , sub64, 0x5e6098112ef683ab, 0x2ef683aa, 0x5e609811, 0xffffffff, 0xffffffff, 48); 
TEST_RR_OP64_IO( 8 , sub64, 0x0000000000000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 56); 
TEST_RR_OP64_IO( 9 , sub64, 0x7fffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x80000000, 64); 
TEST_RR_OP64_IO( 10 , sub64, 0x0000000000000000, 0x00000000, 0x80000000, 0x00000000, 0x80000000, 72); 
TEST_RR_OP64_IO( 11 , sub64, 0x8000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x80000000, 80); 
TEST_RR_OP64_IO( 12 , sub64, 0x0000000000000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 88); 
TEST_RR_OP64_IO( 13 , sub64, 0x0000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 96); 
TEST_RR_OP64_IO( 14 , sub64, 0x11442e30b694a985, 0xb694a985, 0x91442e30, 0x00000000, 0x80000000, 104); 
TEST_RR_OP64_IO( 15 , sub64, 0x4cdb2a023d8bb2ed, 0x3d8bb2ed, 0xccdb2a02, 0x00000000, 0x80000000, 112); 
TEST_RR_OP64_IO( 16 , sub64, 0xd187128b8dd796ae, 0x00000000, 0x80000000, 0x72286952, 0xae78ed74, 120); 
TEST_RR_OP64_IO( 17 , sub64, 0x7fffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x80000000, 128); 
TEST_RR_OP64_IO( 18 , sub64, 0x2bffb84323a39a7c, 0xef9cfe84, 0xa7edd306, 0xcbf96408, 0x7bee1ac3, 136); 
TEST_RR_OP64_IO( 19 , sub64, 0x7fffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x80000000, 144); 
TEST_RR_OP64_IO( 20 , sub64, 0x15169f08a192c23a, 0x00000000, 0x00000000, 0x5e6d3dc6, 0xeae960f7, 152); 
TEST_RR_OP64_IO( 21 , sub64, 0xffffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 160); 
TEST_RR_OP64_IO( 22 , sub64, 0xb3af889c412669f3, 0x412669f3, 0xb3af889c, 0x00000000, 0x00000000, 168); 
TEST_RR_OP64_IO( 23 , sub64, 0xf7f514c44b42da2a, 0xffffffff, 0xffffffff, 0xb4bd25d5, 0x080aeb3b, 176); 
TEST_RR_OP64_IO( 24 , sub64, 0x0000000000000000, 0x00000000, 0x80000000, 0x00000000, 0x80000000, 184); 
TEST_RR_OP64_IO( 25 , sub64, 0xd5c6ff5a9d3cdd93, 0x00000000, 0x80000000, 0x62c3226d, 0xaa3900a5, 192); 
TEST_RR_OP64_IO( 26 , sub64, 0x8000000000000000, 0x00000000, 0x80000000, 0x00000000, 0x00000000, 200); 
TEST_RR_OP64_IO( 27 , sub64, 0x93286802baa9e123, 0xeb38954d, 0x79dbdb98, 0x308eb42a, 0xe6b37396, 208); 
TEST_RR_OP64_IO( 28 , sub64, 0x0000000000000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 216); 
TEST_RR_OP64_IO( 29 , sub64, 0x990f92101eb8c5a2, 0xbb848db4, 0x0477abc1, 0x9ccbc812, 0x6b6819b1, 224); 
TEST_RR_OP64_IO( 30 , sub64, 0x02bce81aead69233, 0x584f8244, 0x2a5c9fab, 0x6d78f011, 0x279fb790, 232); 
TEST_RR_OP64_IO( 31 , sub64, 0x0000000000000001, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 240); 
TEST_RR_OP64_IO( 32 , sub64, 0x0000000000000000, 0x00000000, 0x80000000, 0x00000000, 0x80000000, 248); 
TEST_RR_OP64_IO( 33 , sub64, 0x9d740a24ccbcb660, 0xccbcb65f, 0x9d740a24, 0xffffffff, 0xffffffff, 256); 
TEST_RR_OP64_IO( 34 , sub64, 0xffffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 264); 
TEST_RR_OP64_IO( 35 , sub64, 0xffffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 272); 
TEST_RR_OP64_IO( 36 , sub64, 0xc80611930e97999a, 0xc096eb17, 0x064420be, 0xb1ff517d, 0x3e3e0f2b, 280); 
TEST_RR_OP64_IO( 37 , sub64, 0x8000000000000001, 0x00000000, 0x80000000, 0xffffffff, 0xffffffff, 288); 
TEST_RR_OP64_IO( 38 , sub64, 0xffffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 296); 
TEST_RR_OP64_IO( 39 , sub64, 0x5e190471193c3b35, 0x00000000, 0x00000000, 0xe6c3c4cb, 0xa1e6fb8e, 304); 
TEST_RR_OP64_IO( 40 , sub64, 0x637c775f8384cfdd, 0x8384cfdc, 0x637c775f, 0xffffffff, 0xffffffff, 312); 
TEST_RR_OP64_IO( 41 , sub64, 0x7fffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x80000000, 320); 
TEST_RR_OP64_IO( 42 , sub64, 0x8000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x80000000, 328); 
TEST_RR_OP64_IO( 43 , sub64, 0xe17758ff90642268, 0x90642268, 0x617758ff, 0x00000000, 0x80000000, 336); 
TEST_RR_OP64_IO( 44 , sub64, 0x8000000000000001, 0x00000000, 0x80000000, 0xffffffff, 0xffffffff, 344); 
TEST_RR_OP64_IO( 45 , sub64, 0x8000000000000000, 0x00000000, 0x80000000, 0x00000000, 0x00000000, 352); 
TEST_RR_OP64_IO( 46 , sub64, 0x8000000000000001, 0x00000000, 0x80000000, 0xffffffff, 0xffffffff, 360); 
TEST_RR_OP64_IO( 47 , sub64, 0x0000000000000001, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 368); 
TEST_RR_OP64_IO( 48 , sub64, 0x0000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 376); 
TEST_RR_OP64_IO( 49 , sub64, 0x0000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 384); 
TEST_RR_OP64_IO( 50 , sub64, 0x10c52c6f7006733e, 0x00000000, 0x80000000, 0x8ff98cc2, 0x6f3ad390, 392); 
TEST_RR_OP64_IO( 51 , sub64, 0x55bd5abc5afaeec0, 0x8cbb137d, 0x436eb935, 0x31c024bd, 0xedb15e79, 400); 
TEST_RR_OP64_IO( 52 , sub64, 0x8000000000000000, 0x00000000, 0x80000000, 0x00000000, 0x00000000, 408); 
TEST_RR_OP64_IO( 53 , sub64, 0x0000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 416); 
TEST_RR_OP64_IO( 54 , sub64, 0xffffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 424); 
TEST_RR_OP64_IO( 55 , sub64, 0xe2ef791de97f5009, 0x00000000, 0x80000000, 0x1680aff7, 0x9d1086e2, 432); 
TEST_RR_OP64_IO( 56 , sub64, 0x8000000000000001, 0x00000000, 0x80000000, 0xffffffff, 0xffffffff, 440); 
TEST_RR_OP64_IO( 57 , sub64, 0x7fffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x80000000, 448); 
TEST_RR_OP64_IO( 58 , sub64, 0xfe8dc1a27735b640, 0x00000000, 0x00000000, 0x88ca49c0, 0x01723e5d, 456); 
TEST_RR_OP64_IO( 59 , sub64, 0x0000000000000000, 0x00000000, 0x80000000, 0x00000000, 0x80000000, 464); 
TEST_RR_OP64_IO( 60 , sub64, 0xdb5d1e1af8e2edd5, 0xd20b84f4, 0x36010214, 0xd928971f, 0x5aa3e3f9, 472); 
TEST_RR_OP64_IO( 61 , sub64, 0x8000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x80000000, 480); 
TEST_RR_OP64_IO( 62 , sub64, 0x58d4b74b7b6e2bc4, 0x7b6e2bc4, 0x58d4b74b, 0x00000000, 0x00000000, 488); 
TEST_RR_OP64_IO( 63 , sub64, 0x725cc3a8e6fcc6c6, 0xa3beaf16, 0x069a26c9, 0xbcc1e850, 0x943d6320, 496); 
TEST_RR_OP64_IO( 64 , sub64, 0xaefe16fc3c5a172d, 0xffffffff, 0xffffffff, 0xc3a5e8d2, 0x5101e903, 504); 
TEST_RR_OP64_IO( 65 , sub64, 0x0000000000000001, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 512); 
TEST_RR_OP64_IO( 66 , sub64, 0xc9c093def08acec8, 0x00000000, 0x00000000, 0x0f753138, 0x363f6c21, 520); 
TEST_RR_OP64_IO( 67 , sub64, 0xbc9556848924f9df, 0xf9dd3813, 0x736384fc, 0x70b83e34, 0xb6ce2e78, 528); 
TEST_RR_OP64_IO( 68 , sub64, 0x7fffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x80000000, 536); 
TEST_RR_OP64_IO( 69 , sub64, 0x56cffa4cd49f6a3b, 0xffffffff, 0xffffffff, 0x2b6095c4, 0xa93005b3, 544); 
TEST_RR_OP64_IO( 70 , sub64, 0x8000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x80000000, 552); 
TEST_RR_OP64_IO( 71 , sub64, 0x0000000000000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 560); 
TEST_RR_OP64_IO( 72 , sub64, 0x8000000000000001, 0x00000000, 0x80000000, 0xffffffff, 0xffffffff, 568); 
TEST_RR_OP64_IO( 73 , sub64, 0x8000000000000001, 0x00000000, 0x80000000, 0xffffffff, 0xffffffff, 576); 
TEST_RR_OP64_IO( 74 , sub64, 0x8f875e772333e798, 0x00000000, 0x00000000, 0xdccc1868, 0x7078a188, 584); 
TEST_RR_OP64_IO( 75 , sub64, 0x48c26abcf5245b42, 0x00000000, 0x00000000, 0x0adba4be, 0xb73d9543, 592); 
TEST_RR_OP64_IO( 76 , sub64, 0xd8878748ab97f366, 0xffffffff, 0xffffffff, 0x54680c99, 0x277878b7, 600); 
TEST_RR_OP64_IO( 77 , sub64, 0x0000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 608); 
TEST_RR_OP64_IO( 78 , sub64, 0x7fffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x80000000, 616); 
TEST_RR_OP64_IO( 79 , sub64, 0x8c5a16e133ceef20, 0xffffffff, 0xffffffff, 0xcc3110df, 0x73a5e91e, 624); 
TEST_RR_OP64_IO( 80 , sub64, 0x8000000000000000, 0x00000000, 0x80000000, 0x00000000, 0x00000000, 632); 
TEST_RR_OP64_IO( 81 , sub64, 0x8000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x80000000, 640); 
TEST_RR_OP64_IO( 82 , sub64, 0x7f5f4e2bd35d7e69, 0xffffffff, 0xffffffff, 0x2ca28196, 0x80a0b1d4, 648); 
TEST_RR_OP64_IO( 83 , sub64, 0x8000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x80000000, 656); 
TEST_RR_OP64_IO( 84 , sub64, 0x7d28b45f781614ba, 0x9cf8af6c, 0x2c2d953f, 0x24e29ab2, 0xaf04e0e0, 664); 
TEST_RR_OP64_IO( 85 , sub64, 0x8000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x80000000, 672); 
TEST_RR_OP64_IO( 86 , sub64, 0x0000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 680); 
TEST_RR_OP64_IO( 87 , sub64, 0x8000000000000001, 0x00000000, 0x80000000, 0xffffffff, 0xffffffff, 688); 
TEST_RR_OP64_IO( 88 , sub64, 0xf09d0cdb1f8cf86d, 0x80b164a2, 0xa52bf681, 0x61246c35, 0xb48ee9a6, 696); 
TEST_RR_OP64_IO( 89 , sub64, 0x0000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 704); 
TEST_RR_OP64_IO( 90 , sub64, 0x42200ea668542377, 0xffffffff, 0xffffffff, 0x97abdc88, 0xbddff159, 712); 
TEST_RR_OP64_IO( 91 , sub64, 0x0000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 720); 
TEST_RR_OP64_IO( 92 , sub64, 0x0000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 728); 
TEST_RR_OP64_IO( 93 , sub64, 0x0000000000000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 736); 
TEST_RR_OP64_IO( 94 , sub64, 0x0000000000000000, 0x00000000, 0x80000000, 0x00000000, 0x80000000, 744); 
TEST_RR_OP64_IO( 95 , sub64, 0xffffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 752); 
TEST_RR_OP64_IO( 96 , sub64, 0x0000000000000001, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 760); 
TEST_RR_OP64_IO( 97 , sub64, 0x307b470a483519da, 0xc8cb11f7, 0x5fbe7080, 0x8095f81d, 0x2f432976, 768); 
TEST_RR_OP64_IO( 98 , sub64, 0x8000000000000000, 0x00000000, 0x80000000, 0x00000000, 0x00000000, 776); 
TEST_RR_OP64_IO( 99 , sub64, 0x0000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 784); 
TEST_RR_OP64_IO( 100 , sub64, 0x737068a489726c90, 0x00000000, 0x80000000, 0x768d9370, 0x0c8f975b, 792); 
TEST_RR_OP64_IO( 101 , sub64, 0xbd1c2015be30f883, 0x00000000, 0x80000000, 0x41cf077d, 0xc2e3dfea, 800); 
TEST_RR_OP64_IO( 102 , sub64, 0xffffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 808); 
TEST_RR_OP64_IO( 103 , sub64, 0x64fd5816579cec06, 0xffffffff, 0xffffffff, 0xa86313f9, 0x9b02a7e9, 816); 
TEST_RR_OP64_IO( 104 , sub64, 0x8d32cf548fb6855b, 0x00000000, 0x80000000, 0x70497aa5, 0xf2cd30ab, 824); 
TEST_RR_OP64_IO( 105 , sub64, 0x0000000000000000, 0x00000000, 0x80000000, 0x00000000, 0x80000000, 832); 
TEST_RR_OP64_IO( 106 , sub64, 0xaff0aaf581fbe9f3, 0x81fbe9f3, 0x2ff0aaf5, 0x00000000, 0x80000000, 840); 
TEST_RR_OP64_IO( 107 , sub64, 0x2a22efeee3b8306a, 0xe3b8306a, 0xaa22efee, 0x00000000, 0x80000000, 848); 
TEST_RR_OP64_IO( 108 , sub64, 0x8000000000000000, 0x00000000, 0x80000000, 0x00000000, 0x00000000, 856); 
TEST_RR_OP64_IO( 109 , sub64, 0x8000000000000001, 0x00000000, 0x80000000, 0xffffffff, 0xffffffff, 864); 
TEST_RR_OP64_IO( 110 , sub64, 0xffffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 872); 
TEST_RR_OP64_IO( 111 , sub64, 0x8000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x80000000, 880); 
TEST_RR_OP64_IO( 112 , sub64, 0xffffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 888); 
TEST_RR_OP64_IO( 113 , sub64, 0x5eb0b1cd2a88342a, 0x00000000, 0x00000000, 0xd577cbd6, 0xa14f4e32, 896); 
TEST_RR_OP64_IO( 114 , sub64, 0x9854b4c6284814f5, 0x00000000, 0x00000000, 0xd7b7eb0b, 0x67ab4b39, 904); 
TEST_RR_OP64_IO( 115 , sub64, 0x0000000000000001, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 912); 
TEST_RR_OP64_IO( 116 , sub64, 0xe5f921eb884228f1, 0x884228f0, 0xe5f921eb, 0xffffffff, 0xffffffff, 920); 
TEST_RR_OP64_IO( 117 , sub64, 0x8000000000000001, 0x00000000, 0x80000000, 0xffffffff, 0xffffffff, 928); 
TEST_RR_OP64_IO( 118 , sub64, 0x0000000000000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 936); 
TEST_RR_OP64_IO( 119 , sub64, 0xa26de676ff82c285, 0x00000000, 0x00000000, 0x007d3d7b, 0x5d921989, 944); 
TEST_RR_OP64_IO( 120 , sub64, 0x18fd0abac4d794eb, 0x00000000, 0x00000000, 0x3b286b15, 0xe702f545, 952); 
TEST_RR_OP64_IO( 121 , sub64, 0xffffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 960); 
TEST_RR_OP64_IO( 122 , sub64, 0x8000000000000000, 0x00000000, 0x80000000, 0x00000000, 0x00000000, 968); 
TEST_RR_OP64_IO( 123 , sub64, 0x0000000000000001, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 976); 
TEST_RR_OP64_IO( 124 , sub64, 0x0000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 984); 
TEST_RR_OP64_IO( 125 , sub64, 0x123a6e5ec37efd00, 0x00000000, 0x80000000, 0x3c810300, 0x6dc591a1, 992); 
TEST_RR_OP64_IO( 126 , sub64, 0x2a3ac19731f73a96, 0x00000000, 0x80000000, 0xce08c56a, 0x55c53e68, 1000); 
TEST_RR_OP64_IO( 127 , sub64, 0xe59d8b21044a5c2e, 0x00000000, 0x00000000, 0xfbb5a3d2, 0x1a6274de, 1008); 
TEST_RR_OP64_IO( 128 , sub64, 0x0000000000000001, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 1016); 
TEST_RR_OP64_IO( 129 , sub64, 0xffffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 1024); 
TEST_RR_OP64_IO( 130 , sub64, 0x0000000000000000, 0x00000000, 0x80000000, 0x00000000, 0x80000000, 1032); 
TEST_RR_OP64_IO( 131 , sub64, 0x0000000000000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 1040); 
TEST_RR_OP64_IO( 132 , sub64, 0xf8cc3692b8409be9, 0x53e3c38f, 0x9c8cd50e, 0x9ba327a6, 0xa3c09e7b, 1048); 
TEST_RR_OP64_IO( 133 , sub64, 0x7fffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x80000000, 1056); 
TEST_RR_OP64_IO( 134 , sub64, 0x0000000000000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 1064); 
TEST_RR_OP64_IO( 135 , sub64, 0xffffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 1072); 
TEST_RR_OP64_IO( 136 , sub64, 0x33dc39a089a5f992, 0x00000000, 0x80000000, 0x765a066e, 0x4c23c65f, 1080); 
TEST_RR_OP64_IO( 137 , sub64, 0x50b2c9d502090624, 0xffffffff, 0xffffffff, 0xfdf6f9db, 0xaf4d362a, 1088); 
TEST_RR_OP64_IO( 138 , sub64, 0xcc4d8228c65580d1, 0xda9f0cf3, 0xa4b6e0a8, 0x14498c22, 0xd8695e80, 1096); 
TEST_RR_OP64_IO( 139 , sub64, 0x47d00f7c02d99631, 0x00000000, 0x00000000, 0xfd2669cf, 0xb82ff083, 1104); 
TEST_RR_OP64_IO( 140 , sub64, 0x0c98b96d1d7ca4cf, 0xffffffff, 0xffffffff, 0xe2835b30, 0xf3674692, 1112); 
TEST_RR_OP64_IO( 141 , sub64, 0x94e340d70153f9c0, 0x00000000, 0x80000000, 0xfeac0640, 0xeb1cbf28, 1120); 
TEST_RR_OP64_IO( 142 , sub64, 0x59ae879136edbbc7, 0x00000000, 0x00000000, 0xc9124439, 0xa651786e, 1128); 
TEST_RR_OP64_IO( 143 , sub64, 0x8000000000000000, 0x00000000, 0x80000000, 0x00000000, 0x00000000, 1136); 
TEST_RR_OP64_IO( 144 , sub64, 0xffffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 1144); 
TEST_RR_OP64_IO( 145 , sub64, 0xee27ab7922bc76b7, 0x00000000, 0x00000000, 0xdd438949, 0x11d85486, 1152); 
TEST_RR_OP64_IO( 146 , sub64, 0x93b0de6d4a42d2c0, 0xfaa6486c, 0x4322a7d3, 0xb06375ac, 0xaf71c966, 1160); 
TEST_RR_OP64_IO( 147 , sub64, 0x64b4d43dfb08e50b, 0xfb08e50b, 0xe4b4d43d, 0x00000000, 0x80000000, 1168); 
TEST_RR_OP64_IO( 148 , sub64, 0x0000000000000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 1176); 
TEST_RR_OP64_IO( 149 , sub64, 0x0000000000000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 1184); 
TEST_RR_OP64_IO( 150 , sub64, 0x0000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 1192); 
TEST_RR_OP64_IO( 151 , sub64, 0x0000000000000001, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 1200); 
TEST_RR_OP64_IO( 152 , sub64, 0x45814dd866403c27, 0x00000000, 0x80000000, 0x99bfc3d9, 0x3a7eb227, 1208); 
TEST_RR_OP64_IO( 153 , sub64, 0x7fffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x80000000, 1216); 
TEST_RR_OP64_IO( 154 , sub64, 0x8000000000000001, 0x00000000, 0x80000000, 0xffffffff, 0xffffffff, 1224); 
TEST_RR_OP64_IO( 155 , sub64, 0x8000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x80000000, 1232); 
TEST_RR_OP64_IO( 156 , sub64, 0xc38740401d4e2a14, 0x1d4e2a14, 0x43874040, 0x00000000, 0x80000000, 1240); 
TEST_RR_OP64_IO( 157 , sub64, 0x0000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 1248); 
TEST_RR_OP64_IO( 158 , sub64, 0xffffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 1256); 
TEST_RR_OP64_IO( 159 , sub64, 0x8000000000000000, 0x00000000, 0x80000000, 0x00000000, 0x00000000, 1264); 
TEST_RR_OP64_IO( 160 , sub64, 0xca22828afe2ddd57, 0x00000000, 0x80000000, 0x01d222a9, 0xb5dd7d75, 1272); 
TEST_RR_OP64_IO( 161 , sub64, 0x8000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x80000000, 1280); 
TEST_RR_OP64_IO( 162 , sub64, 0x0d236002eb181ccc, 0xbd05ed3a, 0x25ce5bc8, 0xd1edd06e, 0x18aafbc5, 1288); 
TEST_RR_OP64_IO( 163 , sub64, 0x0000000000000001, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 1296); 
TEST_RR_OP64_IO( 164 , sub64, 0x8000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x80000000, 1304); 
TEST_RR_OP64_IO( 165 , sub64, 0x8000000000000001, 0x00000000, 0x80000000, 0xffffffff, 0xffffffff, 1312); 
TEST_RR_OP64_IO( 166 , sub64, 0x0000000000000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 1320); 
TEST_RR_OP64_IO( 167 , sub64, 0xde1ad04163a63b1d, 0x392bfdd3, 0x4f7d39cb, 0xd585c2b6, 0x71626989, 1328); 
TEST_RR_OP64_IO( 168 , sub64, 0x8000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x80000000, 1336); 
TEST_RR_OP64_IO( 169 , sub64, 0x8000000000000001, 0x00000000, 0x80000000, 0xffffffff, 0xffffffff, 1344); 
TEST_RR_OP64_IO( 170 , sub64, 0x8000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x80000000, 1352); 
TEST_RR_OP64_IO( 171 , sub64, 0xffffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 1360); 
TEST_RR_OP64_IO( 172 , sub64, 0x0000000000000001, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 1368); 
TEST_RR_OP64_IO( 173 , sub64, 0xe21533ae8fe46a9b, 0x8fe46a9b, 0xe21533ae, 0x00000000, 0x00000000, 1376); 
TEST_RR_OP64_IO( 174 , sub64, 0x64531286f9b3d2c4, 0xf9b3d2c4, 0xe4531286, 0x00000000, 0x80000000, 1384); 
TEST_RR_OP64_IO( 175 , sub64, 0x0000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 1392); 
TEST_RR_OP64_IO( 176 , sub64, 0x8000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x80000000, 1400); 
TEST_RR_OP64_IO( 177 , sub64, 0x7fffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x80000000, 1408); 
TEST_RR_OP64_IO( 178 , sub64, 0xffffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 1416); 
TEST_RR_OP64_IO( 179 , sub64, 0x0000000000000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 1424); 
TEST_RR_OP64_IO( 180 , sub64, 0x0000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 1432); 
TEST_RR_OP64_IO( 181 , sub64, 0x1ce19a3bbffebc35, 0xbffebc35, 0x1ce19a3b, 0x00000000, 0x00000000, 1440); 
TEST_RR_OP64_IO( 182 , sub64, 0xffffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 1448); 
TEST_RR_OP64_IO( 183 , sub64, 0x0000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 1456); 
TEST_RR_OP64_IO( 184 , sub64, 0x8000000000000001, 0x00000000, 0x80000000, 0xffffffff, 0xffffffff, 1464); 
TEST_RR_OP64_IO( 185 , sub64, 0x46ac63c99bed6eca, 0xb8ccc1c1, 0x649feada, 0x1cdf52f7, 0x1df38711, 1472); 
TEST_RR_OP64_IO( 186 , sub64, 0xda0fad229920971c, 0x9920971c, 0x5a0fad22, 0x00000000, 0x80000000, 1480); 
TEST_RR_OP64_IO( 187 , sub64, 0xbdb8dbb60e7e3291, 0xffffffff, 0xffffffff, 0xf181cd6e, 0x42472449, 1488); 
TEST_RR_OP64_IO( 188 , sub64, 0x0000000000000001, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 1496); 
TEST_RR_OP64_IO( 189 , sub64, 0x0000000000000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 1504); 
TEST_RR_OP64_IO( 190 , sub64, 0xa38a3229d2ce29bf, 0xd2ce29be, 0xa38a3229, 0xffffffff, 0xffffffff, 1512); 
TEST_RR_OP64_IO( 191 , sub64, 0x02fabfde4b372bc4, 0x55ccbd60, 0x65ad2655, 0x0a95919c, 0x62b26677, 1520); 
TEST_RR_OP64_IO( 192 , sub64, 0xca5fa97cba7dd706, 0x00000000, 0x00000000, 0x458228fa, 0x35a05683, 1528); 
TEST_RR_OP64_IO( 193 , sub64, 0x0000000000000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 1536); 
TEST_RR_OP64_IO( 194 , sub64, 0x7a115049763a6cba, 0x763a6cba, 0x7a115049, 0x00000000, 0x00000000, 1544); 
TEST_RR_OP64_IO( 195 , sub64, 0x8000000000000000, 0x00000000, 0x00000000, 0x00000000, 0x80000000, 1552); 
TEST_RR_OP64_IO( 196 , sub64, 0xffffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 1560); 
TEST_RR_OP64_IO( 197 , sub64, 0xffffffffffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 1568); 
TEST_RR_OP64_IO( 198 , sub64, 0xda6ac5bcca4ee330, 0xca4ee330, 0xda6ac5bc, 0x00000000, 0x00000000, 1576); 
TEST_RR_OP64_IO( 199 , sub64, 0x0000000000000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 1584); 

  #-------------------------------------------------------------
  # Bypassing tests
  #-------------------------------------------------------------


TEST_PASSFAIL

RV_COMPLIANCE_CODE_END

.data

RV_COMPLIANCE_DATA_BEGIN
test_res:
    .fill 398, 4, -1
RV_COMPLIANCE_DATA_END