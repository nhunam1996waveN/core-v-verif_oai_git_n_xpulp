# See LICENSE for license details.
#*****************************************************************************
# umulx8.S
#-----------------------------------------------------------------------------
#
# Test add instruction.
#


#include "riscv_test.h"
#include "compliance_test.h"
#include "compliance_io.h"
#include "aw_test_macros.h"

RVTEST_RV64U
RV_COMPLIANCE_CODE_BEGIN

  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------

TEST_RR_OP64_OO( 2 , umulx8, 0x0ef1728df20d7f80, 0xffffffff, 0x730f80f3 , 8); 
TEST_RR_OP64_OO( 3 , umulx8, 0x5e803ec100000000, 0x80ff0000, 0x3fbd802d , 16); 
TEST_RR_OP64_OO( 4 , umulx8, 0xa659fe0100000000, 0xffff0000, 0xffa7ff00 , 24); 
TEST_RR_OP64_OO( 5 , umulx8, 0x826e00000000906f, 0x9f0000ff, 0xffd29180 , 32); 
TEST_RR_OP64_OO( 6 , umulx8, 0x7f8000c6fe017f80, 0x8016ff80, 0x09ffffff , 40); 
TEST_RR_OP64_OO( 7 , umulx8, 0x00007f807f801a80, 0x00ff8080, 0x800035ff , 48); 
TEST_RR_OP64_OO( 8 , umulx8, 0x000029d60000fe01, 0x00ff00ff, 0x2a4fff00 , 56); 
TEST_RR_OP64_OO( 9 , umulx8, 0x906f7c8340000000, 0xffff8000, 0x7d919780 , 64); 
TEST_RR_OP64_OO( 10 , umulx8, 0x0000699600000000, 0x006a00ff, 0xff6d0000 , 72); 
TEST_RR_OP64_OO( 11 , umulx8, 0x000000005a802900, 0xff00b580, 0x00005280 , 80); 
TEST_RR_OP64_OO( 12 , umulx8, 0x0000e51a5d00fe01, 0x00e680ff, 0xff20ffba , 88); 
TEST_RR_OP64_OO( 13 , umulx8, 0x0000000040000000, 0x00008000, 0xffffff80 , 96); 
TEST_RR_OP64_OO( 14 , umulx8, 0xfe0100005a000000, 0xff0080ff, 0xffff00b4 , 104); 
TEST_RR_OP64_OO( 15 , umulx8, 0x3700747c00007f80, 0x80d50080, 0x8c6eff3a , 112); 
TEST_RR_OP64_OO( 16 , umulx8, 0x00007f8000000000, 0x0680b1ff, 0xff000000 , 120); 
TEST_RR_OP64_OO( 17 , umulx8, 0x7f807d0024dbb748, 0xfffa25ff, 0x8080b8ff , 128); 
TEST_RR_OP64_OO( 18 , umulx8, 0x7f80000000007f80, 0xff800080, 0x0080ff92 , 136); 
TEST_RR_OP64_OO( 19 , umulx8, 0x0000588000000000, 0x00800000, 0xb10080ff , 144); 
TEST_RR_OP64_OO( 20 , umulx8, 0x0000520048000000, 0x80a490a9, 0x80000080 , 152); 
TEST_RR_OP64_OO( 21 , umulx8, 0x0000fe0140000000, 0x00ff8000, 0xff00ff80 , 160); 
TEST_RR_OP64_OO( 22 , umulx8, 0x02be38c700007f80, 0xeaff0080, 0x3903ff00 , 168); 
TEST_RR_OP64_OO( 23 , umulx8, 0x3a8000007f804000, 0x75008080, 0x808080ff , 176); 
TEST_RR_OP64_OO( 24 , umulx8, 0xcd32600040004000, 0xce808080, 0xc0ff8080 , 184); 
TEST_RR_OP64_OO( 25 , umulx8, 0x37c80b390000758a, 0x38a9ffff, 0x11ff7600 , 192); 
TEST_RR_OP64_OO( 26 , umulx8, 0x7f807f80000038c7, 0x80808039, 0xffffff00 , 200); 
TEST_RR_OP64_OO( 27 , umulx8, 0x3cc000000000fe01, 0xf39f80ff, 0x0040ff00 , 208); 
TEST_RR_OP64_OO( 28 , umulx8, 0x7f800000fe01f30c, 0x8000ffff, 0xf8fff4ff , 216); 
TEST_RR_OP64_OO( 29 , umulx8, 0x7f807f803f003fc0, 0xff807eff, 0xff804080 , 224); 
TEST_RR_OP64_OO( 30 , umulx8, 0x7f80000040001480, 0xff008080, 0xe1802980 , 232); 
TEST_RR_OP64_OO( 31 , umulx8, 0x7f80400000007f80, 0x8080ffff, 0x80ff8000 , 240); 
TEST_RR_OP64_OO( 32 , umulx8, 0x000000000000fe01, 0x000066ff, 0x3880ff00 , 248); 
TEST_RR_OP64_OO( 33 , umulx8, 0x5b804000e9162670, 0x8080ffcd, 0x80b730ea , 256); 
TEST_RR_OP64_OO( 34 , umulx8, 0x7f807f8000007f80, 0xff80ffff, 0xff808000 , 264); 
TEST_RR_OP64_OO( 35 , umulx8, 0x7f80000040001b00, 0x80008036, 0x61ff8080 , 272); 
TEST_RR_OP64_OO( 36 , umulx8, 0x0000110000004000, 0x00220080, 0x803b80e3 , 280); 
TEST_RR_OP64_OO( 37 , umulx8, 0x7c00000000007f80, 0x803d7880, 0x00f8ff00 , 288); 
TEST_RR_OP64_OO( 38 , umulx8, 0x00007f8000004000, 0x00ff0080, 0x808080c6 , 296); 
TEST_RR_OP64_OO( 39 , umulx8, 0x4a80000000007500, 0x80ff00ea, 0x00958080 , 304); 
TEST_RR_OP64_OO( 40 , umulx8, 0x4000000019e65780, 0x80ff1aaf, 0x008080ff , 312); 
TEST_RR_OP64_OO( 41 , umulx8, 0x000000007f800000, 0x7a00ff00, 0xff001280 , 320); 
TEST_RR_OP64_OO( 42 , umulx8, 0x0000fe01276203fc, 0x00ff4704, 0xff7fff8e , 328); 
TEST_RR_OP64_OO( 43 , umulx8, 0x55f0000012e1fe01, 0x6400b3ff, 0x53dcff1b , 336); 
TEST_RR_OP64_OO( 44 , umulx8, 0x0000000000007f80, 0x000000ff, 0x00808000 , 344); 
TEST_RR_OP64_OO( 45 , umulx8, 0x0000000000000000, 0xf6000000, 0xff008000 , 352); 
TEST_RR_OP64_OO( 46 , umulx8, 0x0000fe0140000000, 0x80ff8000, 0xff000080 , 360); 
TEST_RR_OP64_OO( 47 , umulx8, 0x00004d800d9e5f10, 0x009ba69c, 0x80009c15 , 368); 
TEST_RR_OP64_OO( 48 , umulx8, 0x0dd0d92675001de8, 0x34daeaae, 0xff442c80 , 376); 
TEST_RR_OP64_OO( 49 , umulx8, 0x00000000fe010000, 0x8000ffff, 0x610000ff , 384); 
TEST_RR_OP64_OO( 50 , umulx8, 0xfe01000000000000, 0xff000080, 0xa1ff0080 , 392); 
TEST_RR_OP64_OO( 51 , umulx8, 0x00007f80f00f1be4, 0x0080f11c, 0xff00ffff , 400); 
TEST_RR_OP64_OO( 52 , umulx8, 0x768914eb7f800000, 0xffffff00, 0x1577ff80 , 408); 
TEST_RR_OP64_OO( 53 , umulx8, 0x0000fe017f80fe01, 0x00ff80ff, 0xff00ffff , 416); 
TEST_RR_OP64_OO( 54 , umulx8, 0x18e7bb448e71fe01, 0x19ffffff, 0xbcffff8f , 424); 
TEST_RR_OP64_OO( 55 , umulx8, 0x0000608000000000, 0x0080ff00, 0xc1ff8000 , 432); 
TEST_RR_OP64_OO( 56 , umulx8, 0xef107f8000001600, 0xff80ff2c, 0xfff08000 , 440); 
TEST_RR_OP64_OO( 57 , umulx8, 0x00001480fb042c00, 0x0029fc80, 0x80ff58ff , 448); 
TEST_RR_OP64_OO( 58 , umulx8, 0xfe0134cb00000000, 0xffff0000, 0x35ff00ff , 456); 
TEST_RR_OP64_OO( 59 , umulx8, 0x7f80000000007f80, 0xffffc1ff, 0x00808000 , 464); 
TEST_RR_OP64_OO( 60 , umulx8, 0x0000fe017f800000, 0x00ffff00, 0xff808080 , 472); 
TEST_RR_OP64_OO( 61 , umulx8, 0x0000000000007f80, 0xff0000ff, 0x800080ff , 480); 
TEST_RR_OP64_OO( 62 , umulx8, 0x000033007f8030da, 0x0080ff4a, 0x6680a980 , 488); 
TEST_RR_OP64_OO( 63 , umulx8, 0x00000000fe01bf40, 0xff00ffff, 0x8000c0ff , 496); 
TEST_RR_OP64_OO( 64 , umulx8, 0x0000400031007f80, 0x3a806280, 0x8000ff80 , 504); 
TEST_RR_OP64_OO( 65 , umulx8, 0x1680000000007f80, 0x2d805180, 0x0080ff00 , 512); 
TEST_RR_OP64_OO( 66 , umulx8, 0x2fd000007f800000, 0xff0cff00, 0x0030ff80 , 520); 
TEST_RR_OP64_OO( 67 , umulx8, 0xfe010000fe010000, 0xffffff00, 0x00ff80ff , 528); 
TEST_RR_OP64_OO( 68 , umulx8, 0x00000000857a56a9, 0x6480ffff, 0x00005786 , 536); 
TEST_RR_OP64_OO( 69 , umulx8, 0x4000000000000000, 0x808015a6, 0x00800000 , 544); 
TEST_RR_OP64_OO( 70 , umulx8, 0x09b300000c00fe01, 0x0d0080ff, 0x00bfff18 , 552); 
TEST_RR_OP64_OO( 71 , umulx8, 0x4000000000007f80, 0x8000ff80, 0x8080ff00 , 560); 
TEST_RR_OP64_OO( 72 , umulx8, 0x0000000040005180, 0xffd38080, 0x0000a380 , 568); 
TEST_RR_OP64_OO( 73 , umulx8, 0x4000400040007f80, 0x80808080, 0x8080ff80 , 576); 
TEST_RR_OP64_OO( 74 , umulx8, 0x000010a8fe01ef10, 0xd2a4fff0, 0x1a00ffff , 584); 
TEST_RR_OP64_OO( 75 , umulx8, 0x000000003780dc23, 0xffff6fff, 0x0000dd80 , 592); 
TEST_RR_OP64_OO( 76 , umulx8, 0xd02f400000000000, 0xff809100, 0x80d10000 , 600); 
TEST_RR_OP64_OO( 77 , umulx8, 0x17e808ea00000000, 0xff0e0000, 0xa318ff80 , 608); 
TEST_RR_OP64_OO( 78 , umulx8, 0x00004f00fe010000, 0x8080ff00, 0x9e00ffff , 616); 
TEST_RR_OP64_OO( 79 , umulx8, 0x00000000d926fe01, 0x00ffffff, 0x0080ffda , 624); 
TEST_RR_OP64_OO( 80 , umulx8, 0x0400000000000000, 0x08005300, 0x8380ff00 , 632); 
TEST_RR_OP64_OO( 81 , umulx8, 0x7f800000a25d7f80, 0x8004ff80, 0x00ffffa3 , 640); 
TEST_RR_OP64_OO( 82 , umulx8, 0x40007f8000000000, 0x80ffff00, 0x8080ff00 , 648); 
TEST_RR_OP64_OO( 83 , umulx8, 0x00000000fe010000, 0x00ffffff, 0x008000ff , 656); 
TEST_RR_OP64_OO( 84 , umulx8, 0xfe014000000012f3, 0xff80a84d, 0x80ff3f00 , 664); 
TEST_RR_OP64_OO( 85 , umulx8, 0x00007f80400011ee, 0x008080ff, 0xff121280 , 672); 
TEST_RR_OP64_OO( 86 , umulx8, 0x000035ca00000000, 0x7eff0000, 0x36000080 , 680); 
TEST_RR_OP64_OO( 87 , umulx8, 0x639c000000000000, 0xff000080, 0xfe640066 , 688); 
TEST_RR_OP64_OO( 88 , umulx8, 0x4000cd3200000000, 0x80cedc00, 0xff800000 , 696); 
TEST_RR_OP64_OO( 89 , umulx8, 0x6a95000000000000, 0x6b00fff3, 0xceff0000 , 704); 
TEST_RR_OP64_OO( 90 , umulx8, 0xfe01000000007f80, 0xffff0f80, 0x00ffff00 , 712); 
TEST_RR_OP64_OO( 91 , umulx8, 0x40007f8000000000, 0x80800080, 0xff800000 , 720); 
TEST_RR_OP64_OO( 92 , umulx8, 0x27e0000000000e2b, 0x3aff8075, 0x00b01f00 , 728); 
TEST_RR_OP64_OO( 93 , umulx8, 0x000010683fc04cce, 0x003840ae, 0x4b0071ff , 736); 
TEST_RR_OP64_OO( 94 , umulx8, 0x000000007f804480, 0x0000ff80, 0x65cf8980 , 744); 
TEST_RR_OP64_OO( 95 , umulx8, 0x0000400064800000, 0x00808000, 0x80fff5c9 , 752); 
TEST_RR_OP64_OO( 96 , umulx8, 0x9f6000000000827d, 0xff000083, 0xffa0ff00 , 760); 
TEST_RR_OP64_OO( 97 , umulx8, 0x0000fe0100000000, 0x6eff4600, 0xff000000 , 768); 
TEST_RR_OP64_OO( 98 , umulx8, 0x5b040000000063e0, 0xe98000bc, 0x006488ff , 776); 
TEST_RR_OP64_OO( 99 , umulx8, 0x4000000040007f80, 0x800080ff, 0xff808080 , 784); 
TEST_RR_OP64_OO( 100 , umulx8, 0x68970168000045f6, 0x693c005a, 0x06ffc700 , 792); 
TEST_RR_OP64_OO( 101 , umulx8, 0x0000000040007f80, 0xc50080ff, 0x00008080 , 800); 
TEST_RR_OP64_OO( 102 , umulx8, 0x8766000000000000, 0xdaff8400, 0x009f8e00 , 808); 
TEST_RR_OP64_OO( 103 , umulx8, 0x5a009f607f800000, 0xb4ffff3c, 0xa0800080 , 816); 
TEST_RR_OP64_OO( 104 , umulx8, 0x00001fe000ff0000, 0x00ffff00, 0x2000ff01 , 824); 
TEST_RR_OP64_OO( 105 , umulx8, 0xa25d368000000000, 0xff800000, 0x6da380ff , 832); 
TEST_RR_OP64_OO( 106 , umulx8, 0x00007f804c00f609, 0x00ff80ff, 0x80fff798 , 840); 
TEST_RR_OP64_OO( 107 , umulx8, 0x00006a0000000000, 0x00d40000, 0x80ce80ff , 848); 
TEST_RR_OP64_OO( 108 , umulx8, 0x000002fd00000000, 0x00ff0000, 0x03ad8200 , 856); 
TEST_RR_OP64_OO( 109 , umulx8, 0x40007f805ea1af50, 0x80ffffb0, 0x8080ff5f , 864); 
TEST_RR_OP64_OO( 110 , umulx8, 0x4000000000001d00, 0x80008080, 0x00803a00 , 872); 
TEST_RR_OP64_OO( 111 , umulx8, 0x000000007f80ea15, 0x80ffffff, 0x0000eb80 , 880); 
TEST_RR_OP64_OO( 112 , umulx8, 0x00007f807f807f80, 0x8080ffff, 0xff008080 , 888); 
TEST_RR_OP64_OO( 113 , umulx8, 0x00000ff77f800000, 0x00438000, 0x3d3edaff , 896); 
TEST_RR_OP64_OO( 114 , umulx8, 0x400023dc00000000, 0x80ffffb7, 0x24800000 , 904); 
TEST_RR_OP64_OO( 115 , umulx8, 0x0000000000000000, 0x00008000, 0x00808000 , 912); 
TEST_RR_OP64_OO( 116 , umulx8, 0x7f80000000002100, 0xff800042, 0x00808080 , 920); 
TEST_RR_OP64_OO( 117 , umulx8, 0x182c000040004000, 0x5b008080, 0x00448080 , 928); 
TEST_RR_OP64_OO( 118 , umulx8, 0x7f80629d06f90000, 0x80ff0700, 0x63ffffff , 936); 
TEST_RR_OP64_OO( 119 , umulx8, 0x00000000207c7f80, 0x008024ff, 0x008080e7 , 944); 
TEST_RR_OP64_OO( 120 , umulx8, 0x7700bb4400007f80, 0xeeffcd80, 0xbc80ff00 , 952); 
TEST_RR_OP64_OO( 121 , umulx8, 0x00007f8000000000, 0x00ff8000, 0x806e8000 , 960); 
TEST_RR_OP64_OO( 122 , umulx8, 0x00000000fe01e718, 0xff00ffe8, 0x0000ffff , 968); 
TEST_RR_OP64_OO( 123 , umulx8, 0xfe01fe01d8270914, 0xffffd953, 0xffff1cff , 976); 
TEST_RR_OP64_OO( 124 , umulx8, 0x38c700000000ba45, 0xffff80bb, 0x0039ff00 , 984); 
TEST_RR_OP64_OO( 125 , umulx8, 0x7f8000002a660000, 0x8000a200, 0xffffff43 , 992); 
TEST_RR_OP64_OO( 126 , umulx8, 0x7f8000007f800000, 0x8000ffc7, 0x10ff0080 , 1000); 
TEST_RR_OP64_OO( 127 , umulx8, 0x7f80fe010000fe01, 0xffff00ff, 0xff80ffb8 , 1008); 
TEST_RR_OP64_OO( 128 , umulx8, 0x02820000fe010580, 0x0300ff80, 0x80d60bff , 1016); 
TEST_RR_OP64_OO( 129 , umulx8, 0x000040008a9d0000, 0x80809700, 0x800080eb , 1024); 
TEST_RR_OP64_OO( 130 , umulx8, 0x292200007f800000, 0x36008080, 0x00c300ff , 1032); 
TEST_RR_OP64_OO( 131 , umulx8, 0x7f8000000000f20d, 0xff0000f3, 0xff80ff80 , 1040); 
TEST_RR_OP64_OO( 132 , umulx8, 0x0000b74832410000, 0x00ff53ff, 0xb85f009b , 1048); 
TEST_RR_OP64_OO( 133 , umulx8, 0x2680000000000000, 0x80000080, 0x804d001f , 1056); 
TEST_RR_OP64_OO( 134 , umulx8, 0x0000000000001125, 0xff5c0021, 0x00008580 , 1064); 
TEST_RR_OP64_OO( 135 , umulx8, 0x0a48000000000000, 0xbcff0062, 0x000e00ff , 1072); 
TEST_RR_OP64_OO( 136 , umulx8, 0xb9c749b645ba0000, 0xf94aff20, 0xffbf0046 , 1080); 
TEST_RR_OP64_OO( 137 , umulx8, 0x4000000011000000, 0x80002200, 0xff800080 , 1088); 
TEST_RR_OP64_OO( 138 , umulx8, 0x0000000000000000, 0x0000ff80, 0xff670000 , 1096); 
TEST_RR_OP64_OO( 139 , umulx8, 0x0200000000004000, 0x04ffff80, 0x00808000 , 1104); 
TEST_RR_OP64_OO( 140 , umulx8, 0x02fd000000001700, 0x0300802e, 0x80ff8000 , 1112); 
TEST_RR_OP64_OO( 141 , umulx8, 0x7f80fe016d800000, 0x80ff8000, 0xffff4bdb , 1120); 
TEST_RR_OP64_OO( 142 , umulx8, 0x141c7f8000008778, 0x16ffafff, 0x80ea8800 , 1128); 
TEST_RR_OP64_OO( 143 , umulx8, 0x00000780946b0000, 0x000fff00, 0x80000095 , 1136); 
TEST_RR_OP64_OO( 144 , umulx8, 0x72807f807f800000, 0x80ffff00, 0x80e58080 , 1144); 
TEST_RR_OP64_OO( 145 , umulx8, 0x65dedc236a0028b0, 0x76dd807c, 0xffdd54d4 , 1152); 
TEST_RR_OP64_OO( 146 , umulx8, 0x7f80000000000000, 0x80000000, 0x80ffffff , 1160); 
TEST_RR_OP64_OO( 147 , umulx8, 0x000000000000fe01, 0x000000ff, 0x51ffff00 , 1168); 
TEST_RR_OP64_OO( 148 , umulx8, 0xd8277f8000000000, 0xd9ff80ff, 0x80ff0000 , 1176); 
TEST_RR_OP64_OO( 149 , umulx8, 0x7f804e8000000000, 0xff9dff00, 0x80800000 , 1184); 
TEST_RR_OP64_OO( 150 , umulx8, 0x788000007f802fba, 0x8080ff52, 0x00f19580 , 1192); 
TEST_RR_OP64_OO( 151 , umulx8, 0x629d7f800000ea15, 0x638000eb, 0xffffffff , 1200); 
TEST_RR_OP64_OO( 152 , umulx8, 0x0000400000007f80, 0x00800080, 0x8080ff80 , 1208); 
TEST_RR_OP64_OO( 153 , umulx8, 0x00000000d6290000, 0x0000ffff, 0x800000d7 , 1216); 
TEST_RR_OP64_OO( 154 , umulx8, 0x000040000000629d, 0x00800063, 0x80ffff9a , 1224); 
TEST_RR_OP64_OO( 155 , umulx8, 0x7f80760000000000, 0x8080ff00, 0xecff8a00 , 1232); 
TEST_RR_OP64_OO( 156 , umulx8, 0x36be00003ac50000, 0x5bffff00, 0x009a003b , 1240); 
TEST_RR_OP64_OO( 157 , umulx8, 0x00007f8040004000, 0x00ff8080, 0x800a8080 , 1248); 
TEST_RR_OP64_OO( 158 , umulx8, 0x00006a9500000000, 0x00ffff00, 0x6b008000 , 1256); 
TEST_RR_OP64_OO( 159 , umulx8, 0x0000000000000000, 0x00a60000, 0x00008000 , 1264); 
TEST_RR_OP64_OO( 160 , umulx8, 0x0000748b00002cd3, 0xffff00ff, 0x75002dff , 1272); 
TEST_RR_OP64_OO( 161 , umulx8, 0xbb44de2100000000, 0xbcff0000, 0xdfffefff , 1280); 
TEST_RR_OP64_OO( 162 , umulx8, 0xfe01650000007f80, 0xff803080, 0xcaffff00 , 1288); 
TEST_RR_OP64_OO( 163 , umulx8, 0x4100000024807f80, 0x80004980, 0x0082ff80 , 1296); 
TEST_RR_OP64_OO( 164 , umulx8, 0xfe01000000000000, 0xff000eff, 0x8eff0000 , 1304); 
TEST_RR_OP64_OO( 165 , umulx8, 0xfe010e7000000000, 0xff1c0080, 0x84ff0058 , 1312); 
TEST_RR_OP64_OO( 166 , umulx8, 0x00000000c5130000, 0xff00c9d8, 0x800000fb , 1320); 
TEST_RR_OP64_OO( 167 , umulx8, 0x4e00000063804000, 0x9c008080, 0xb88080c7 , 1328); 
TEST_RR_OP64_OO( 168 , umulx8, 0x0000fe017f807f80, 0x00ffffff, 0xff008080 , 1336); 
TEST_RR_OP64_OO( 169 , umulx8, 0x000000003680eb14, 0xff8080ec, 0x0000ff6d , 1344); 
TEST_RR_OP64_OO( 170 , umulx8, 0x00000000fe010000, 0x00ffff00, 0x00eb80ff , 1352); 
TEST_RR_OP64_OO( 171 , umulx8, 0x1388fe015e800000, 0x7dff8000, 0xff2827bd , 1360); 
TEST_RR_OP64_OO( 172 , umulx8, 0x0000000013c7f807, 0x800053f9, 0x9c00ff3d , 1368); 
TEST_RR_OP64_OO( 173 , umulx8, 0x18801b80178005f1, 0x80372f0d, 0x80317580 , 1376); 
TEST_RR_OP64_OO( 174 , umulx8, 0x00000000fe017f80, 0x0000ffff, 0xffff80ff , 1384); 
TEST_RR_OP64_OO( 175 , umulx8, 0x0000000000007280, 0x8000ff80, 0xff00e500 , 1392); 
TEST_RR_OP64_OO( 176 , umulx8, 0x0000fe010000fe01, 0x00ff00ff, 0xff00ff80 , 1400); 
TEST_RR_OP64_OO( 177 , umulx8, 0x00004000f50a7f80, 0x0080ffff, 0x800080f6 , 1408); 
TEST_RR_OP64_OO( 178 , umulx8, 0x7f80fe0100001700, 0x80ff002e, 0xffff806e , 1416); 
TEST_RR_OP64_OO( 179 , umulx8, 0x000000001a0d0000, 0x0000f7ff, 0xff00001b , 1424); 
TEST_RR_OP64_OO( 180 , umulx8, 0x000040000000fe01, 0x008000ff, 0x8080ff00 , 1432); 
TEST_RR_OP64_OO( 181 , umulx8, 0x0000000098670000, 0x80009900, 0x000000ff , 1440); 
TEST_RR_OP64_OO( 182 , umulx8, 0x00006e917f800000, 0x766fffa4, 0xff000080 , 1448); 
TEST_RR_OP64_OO( 183 , umulx8, 0x0000400009800000, 0x00808080, 0x80980013 , 1456); 
TEST_RR_OP64_OO( 184 , umulx8, 0x000000007f802980, 0x0000ff53, 0x9b008080 , 1464); 
TEST_RR_OP64_OO( 185 , umulx8, 0x3cc3400040007000, 0xff808080, 0x803de080 , 1472); 
TEST_RR_OP64_OO( 186 , umulx8, 0xb44b4300e92a7f80, 0xb586eb80, 0x80fffffe , 1480); 
TEST_RR_OP64_OO( 187 , umulx8, 0x6c80c33c40000ce8, 0xd9c4803b, 0xff803880 , 1488); 
TEST_RR_OP64_OO( 188 , umulx8, 0x0000000040bf40b0, 0x8080ff50, 0x0000cf41 , 1496); 
TEST_RR_OP64_OO( 189 , umulx8, 0x719a000000000000, 0x83190000, 0x00de7cff , 1504); 
TEST_RR_OP64_OO( 190 , umulx8, 0x00003e0024db7900, 0x007c25f2, 0x800080ff , 1512); 
TEST_RR_OP64_OO( 191 , umulx8, 0x7f807f8000004480, 0x80808089, 0xffff8000 , 1520); 
TEST_RR_OP64_OO( 192 , umulx8, 0x7f80fe011e00c639, 0xffff3cc7, 0xff80ff80 , 1528); 
TEST_RR_OP64_OO( 193 , umulx8, 0x2f00400000000000, 0x808026ff, 0x805e0000 , 1536); 
TEST_RR_OP64_OO( 194 , umulx8, 0x3a800000000055aa, 0x75008056, 0xff80ff00 , 1544); 
TEST_RR_OP64_OO( 195 , umulx8, 0x7f807c830000f30c, 0x807dfff4, 0xffffff00 , 1552); 
TEST_RR_OP64_OO( 196 , umulx8, 0x0b800000b6496ee4, 0x8000ff97, 0x0817bcb7 , 1560); 
TEST_RR_OP64_OO( 197 , umulx8, 0x40006d0033cc0000, 0x8080ff00, 0xda808034 , 1568); 
TEST_RR_OP64_OO( 198 , umulx8, 0x0000618040000000, 0x80c380ff, 0x80000080 , 1576); 
TEST_RR_OP64_OO( 199 , umulx8, 0x000000000f000000, 0x00801e00, 0x00808080 , 1584); 

  #-------------------------------------------------------------
  # Bypassing tests
  #-------------------------------------------------------------


TEST_PASSFAIL

RV_COMPLIANCE_CODE_END

.data

RV_COMPLIANCE_DATA_BEGIN
test_res:
    .fill 398, 4, -1
RV_COMPLIANCE_DATA_END