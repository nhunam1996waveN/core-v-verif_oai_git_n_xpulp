# See LICENSE for license details.
#*****************************************************************************
# smalda.S
#-----------------------------------------------------------------------------
#
# Test add instruction.
#


#include "riscv_test.h"
#include "compliance_test.h"
#include "compliance_io.h"
#include "aw_test_macros.h"

RVTEST_RV64U
RV_COMPLIANCE_CODE_BEGIN

  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------

TEST_RR_OP64_OO( 2 , smalda, 0xffffffffff008000, 0x01ff78c1, 0x80000000 , 8); 
TEST_RR_OP64_OO( 3 , smalda, 0xffffffffff008000, 0x00000000, 0xffffffff , 16); 
TEST_RR_OP64_OO( 4 , smalda, 0xffffffffff008000, 0x00000000, 0x991f34c8 , 24); 
TEST_RR_OP64_OO( 5 , smalda, 0xffffffffca510000, 0x695fc91d, 0x80000000 , 32); 
TEST_RR_OP64_OO( 6 , smalda, 0xffffffffeb768000, 0x80000000, 0xbdb5133c , 40); 
TEST_RR_OP64_OO( 7 , smalda, 0xffffffffeb768000, 0x00000000, 0xffffffff , 48); 
TEST_RR_OP64_OO( 8 , smalda, 0xffffffffeb768000, 0x80000000, 0x00000000 , 56); 
TEST_RR_OP64_OO( 9 , smalda, 0x000000002b768000, 0x80000000, 0x80000000 , 64); 
TEST_RR_OP64_OO( 10 , smalda, 0x000000002b768000, 0x00000000, 0xffffffff , 72); 
TEST_RR_OP64_OO( 11 , smalda, 0x000000002b768000, 0x00000000, 0x00000000 , 80); 
TEST_RR_OP64_OO( 12 , smalda, 0x000000004d7a0000, 0x80000000, 0xbbf99198 , 88); 
TEST_RR_OP64_OO( 13 , smalda, 0x00000000481d1070, 0x36dedc1e, 0xbf5cc36c , 96); 
TEST_RR_OP64_OO( 14 , smalda, 0x00000000481d1070, 0xffffffff, 0x00000000 , 104); 
TEST_RR_OP64_OO( 15 , smalda, 0x000000006f439070, 0xb1b3571e, 0x80000000 , 112); 
TEST_RR_OP64_OO( 16 , smalda, 0x00000000af439070, 0x80000000, 0x80000000 , 120); 
TEST_RR_OP64_OO( 17 , smalda, 0x00000000dc5e9070, 0xa5ca9e51, 0x80000000 , 128); 
TEST_RR_OP64_OO( 18 , smalda, 0x00000000a1791070, 0x80000000, 0x75cb3cb5 , 136); 
TEST_RR_OP64_OO( 19 , smalda, 0x00000000a1791070, 0x00000000, 0x00000000 , 144); 
TEST_RR_OP64_OO( 20 , smalda, 0x00000000a1791070, 0x00000000, 0xffffffff , 152); 
TEST_RR_OP64_OO( 21 , smalda, 0x00000000a1789e8d, 0x527b1f68, 0xffffffff , 160); 
TEST_RR_OP64_OO( 22 , smalda, 0x00000000a1789e8d, 0x80000000, 0x00000000 , 168); 
TEST_RR_OP64_OO( 23 , smalda, 0x00000000a1789e8d, 0x80000000, 0x00000000 , 176); 
TEST_RR_OP64_OO( 24 , smalda, 0x00000000a1789e8d, 0x00000000, 0xb1b93245 , 184); 
TEST_RR_OP64_OO( 25 , smalda, 0x00000000a1791e8d, 0xffffffff, 0x80000000 , 192); 
TEST_RR_OP64_OO( 26 , smalda, 0x00000000a1799e8d, 0xffffffff, 0x80000000 , 200); 
TEST_RR_OP64_OO( 27 , smalda, 0x00000000a1799e8d, 0x00000000, 0xffffffff , 208); 
TEST_RR_OP64_OO( 28 , smalda, 0x00000000a17a1e8d, 0xffffffff, 0x80000000 , 216); 
TEST_RR_OP64_OO( 29 , smalda, 0x00000000a17a1e8d, 0xffffffff, 0x00000000 , 224); 
TEST_RR_OP64_OO( 30 , smalda, 0x00000000a17a9e8d, 0x80000000, 0xffffffff , 232); 
TEST_RR_OP64_OO( 31 , smalda, 0x00000000b81d9e8d, 0xd2ba51bd, 0x80000000 , 240); 
TEST_RR_OP64_OO( 32 , smalda, 0x00000000b81d9e8d, 0x00000000, 0x00000000 , 248); 
TEST_RR_OP64_OO( 33 , smalda, 0x00000000a40ca899, 0x49d01b8a, 0xd963acf6 , 256); 
TEST_RR_OP64_OO( 34 , smalda, 0x00000000a40d2899, 0x80000000, 0xffffffff , 264); 
TEST_RR_OP64_OO( 35 , smalda, 0x00000000e40d2899, 0x80000000, 0x80000000 , 272); 
TEST_RR_OP64_OO( 36 , smalda, 0x00000000e40d2899, 0x00000000, 0xf423d2b8 , 280); 
TEST_RR_OP64_OO( 37 , smalda, 0x00000000e40d2899, 0x00000000, 0x80000000 , 288); 
TEST_RR_OP64_OO( 38 , smalda, 0x00000000e40d2899, 0x1d466261, 0x00000000 , 296); 
TEST_RR_OP64_OO( 39 , smalda, 0x00000001240d2899, 0x80000000, 0x80000000 , 304); 
TEST_RR_OP64_OO( 40 , smalda, 0x00000001240d2899, 0x00000000, 0x80000000 , 312); 
TEST_RR_OP64_OO( 41 , smalda, 0x00000001240da899, 0x80000000, 0xffffffff , 320); 
TEST_RR_OP64_OO( 42 , smalda, 0x00000001240da899, 0x80000000, 0x00000000 , 328); 
TEST_RR_OP64_OO( 43 , smalda, 0x00000001240e4c1a, 0x9d71bf0e, 0xffffffff , 336); 
TEST_RR_OP64_OO( 44 , smalda, 0x00000001240e4c1a, 0x00000000, 0x80000000 , 344); 
TEST_RR_OP64_OO( 45 , smalda, 0x00000001240e4c1c, 0xffffffff, 0xffffffff , 352); 
TEST_RR_OP64_OO( 46 , smalda, 0x00000001240dd623, 0x67e50e14, 0xffffffff , 360); 
TEST_RR_OP64_OO( 47 , smalda, 0x00000001240dd623, 0x00000000, 0x342dafd9 , 368); 
TEST_RR_OP64_OO( 48 , smalda, 0x00000001176e4f37, 0xcff13302, 0x63361e1f , 376); 
TEST_RR_OP64_OO( 49 , smalda, 0x00000001576e4f37, 0x80000000, 0x80000000 , 384); 
TEST_RR_OP64_OO( 50 , smalda, 0x00000001576e4f37, 0x00000000, 0x80000000 , 392); 
TEST_RR_OP64_OO( 51 , smalda, 0x0000000177e84f37, 0xbf0cce7b, 0x80000000 , 400); 
TEST_RR_OP64_OO( 52 , smalda, 0x00000001b7e84f37, 0x80000000, 0x80000000 , 408); 
TEST_RR_OP64_OO( 53 , smalda, 0x00000001b7e84f37, 0x7b57bc10, 0x00000000 , 416); 
TEST_RR_OP64_OO( 54 , smalda, 0x00000001b7e84f37, 0x00000000, 0x80000000 , 424); 
TEST_RR_OP64_OO( 55 , smalda, 0x00000001b7e84f37, 0x00000000, 0xffffffff , 432); 
TEST_RR_OP64_OO( 56 , smalda, 0x00000001b7e84f37, 0x00000000, 0x32db2e5f , 440); 
TEST_RR_OP64_OO( 57 , smalda, 0x00000001b7e862e9, 0x8bdc6072, 0xffffffff , 448); 
TEST_RR_OP64_OO( 58 , smalda, 0x00000001ad63e2e9, 0x80000000, 0x1509ab44 , 456); 
TEST_RR_OP64_OO( 59 , smalda, 0x00000001ad63e2e9, 0x00000000, 0x00000000 , 464); 
TEST_RR_OP64_OO( 60 , smalda, 0x00000001ad6462e9, 0xffffffff, 0x80000000 , 472); 
TEST_RR_OP64_OO( 61 , smalda, 0x00000001ad6462e9, 0x5663cd42, 0x00000000 , 480); 
TEST_RR_OP64_OO( 62 , smalda, 0x00000001a4c7e2e9, 0x80000000, 0x1139561e , 488); 
TEST_RR_OP64_OO( 63 , smalda, 0x00000001a4c852cf, 0xffffffff, 0x8f6400b6 , 496); 
TEST_RR_OP64_OO( 64 , smalda, 0x00000001a4c83486, 0xffffffff, 0xe8013648 , 504); 
TEST_RR_OP64_OO( 65 , smalda, 0x00000001a4c83486, 0x00000000, 0x80000000 , 512); 
TEST_RR_OP64_OO( 66 , smalda, 0x00000001a4c8c9a1, 0xffffffff, 0xe30187e4 , 520); 
TEST_RR_OP64_OO( 67 , smalda, 0x00000001a4c8c9a1, 0x00000000, 0x80000000 , 528); 
TEST_RR_OP64_OO( 68 , smalda, 0x0000000182161deb, 0x305aa5fc, 0x81fb1efd , 536); 
TEST_RR_OP64_OO( 69 , smalda, 0x00000001821667a1, 0xd35de2ed, 0xffffffff , 544); 
TEST_RR_OP64_OO( 70 , smalda, 0x00000001821667a3, 0xffffffff, 0xffffffff , 552); 
TEST_RR_OP64_OO( 71 , smalda, 0x000000018216540b, 0xffffffff, 0x35fcdd9c , 560); 
TEST_RR_OP64_OO( 72 , smalda, 0x000000018cf82683, 0x0f301cae, 0x175c54c4 , 568); 
TEST_RR_OP64_OO( 73 , smalda, 0x000000018cf82683, 0x00000000, 0xffffffff , 576); 
TEST_RR_OP64_OO( 74 , smalda, 0x000000018cf82683, 0xa54b517f, 0x00000000 , 584); 
TEST_RR_OP64_OO( 75 , smalda, 0x000000018cf825b8, 0xe38b1d40, 0xffffffff , 592); 
TEST_RR_OP64_OO( 76 , smalda, 0x00000001ccf825b8, 0x80000000, 0x80000000 , 600); 
TEST_RR_OP64_OO( 77 , smalda, 0x00000001ccf82ad2, 0xf1cc091a, 0xffffffff , 608); 
TEST_RR_OP64_OO( 78 , smalda, 0x00000001ccf84164, 0xffffffff, 0x4540a42e , 616); 
TEST_RR_OP64_OO( 79 , smalda, 0x00000001ccf82a9e, 0xffffffff, 0xe4c13205 , 624); 
TEST_RR_OP64_OO( 80 , smalda, 0x00000001ccf8aa9e, 0xffffffff, 0x80000000 , 632); 
TEST_RR_OP64_OO( 81 , smalda, 0x00000001ccf8aa9e, 0x00000000, 0x80000000 , 640); 
TEST_RR_OP64_OO( 82 , smalda, 0x00000001ccf96367, 0xffffffff, 0xb1e9954e , 648); 
TEST_RR_OP64_OO( 83 , smalda, 0x00000001f2a26367, 0xb4ae971c, 0x80000000 , 656); 
TEST_RR_OP64_OO( 84 , smalda, 0x00000001f2a2c9ae, 0xd322c697, 0xffffffff , 664); 
TEST_RR_OP64_OO( 85 , smalda, 0x00000001f2a2c9ae, 0x00000000, 0xcbac32f9 , 672); 
TEST_RR_OP64_OO( 86 , smalda, 0x00000001fa30e3b5, 0x9abceae7, 0xd2c57d6d , 680); 
TEST_RR_OP64_OO( 87 , smalda, 0x00000001fa30e3b7, 0xffffffff, 0xffffffff , 688); 
TEST_RR_OP64_OO( 88 , smalda, 0x00000001fa30e3b9, 0xffffffff, 0xffffffff , 696); 
TEST_RR_OP64_OO( 89 , smalda, 0x00000001fa30e3b9, 0xbc18213a, 0x00000000 , 704); 
TEST_RR_OP64_OO( 90 , smalda, 0x00000001fa30e3bb, 0xffffffff, 0xffffffff , 712); 
TEST_RR_OP64_OO( 91 , smalda, 0x00000001fa30e3bb, 0x00000000, 0x80000000 , 720); 
TEST_RR_OP64_OO( 92 , smalda, 0x00000001fa3163bb, 0xffffffff, 0x80000000 , 728); 
TEST_RR_OP64_OO( 93 , smalda, 0x00000001fa3163bb, 0x80000000, 0x00000000 , 736); 
TEST_RR_OP64_OO( 94 , smalda, 0x000000020432737c, 0x5e7cf741, 0x2657795d , 744); 
TEST_RR_OP64_OO( 95 , smalda, 0x00000001fda9f37c, 0x80000000, 0x0d113705 , 752); 
TEST_RR_OP64_OO( 96 , smalda, 0x00000001fda9f37c, 0x00000000, 0xffffffff , 760); 
TEST_RR_OP64_OO( 97 , smalda, 0x00000001fda9f37c, 0x00000000, 0x00000000 , 768); 
TEST_RR_OP64_OO( 98 , smalda, 0x00000001ee7bf37c, 0x1e5c667b, 0x80000000 , 776); 
TEST_RR_OP64_OO( 99 , smalda, 0x000000022e7bf37c, 0x80000000, 0x80000000 , 784); 
TEST_RR_OP64_OO( 100 , smalda, 0x00000002148ef37c, 0x33dac196, 0x80000000 , 792); 
TEST_RR_OP64_OO( 101 , smalda, 0x00000002548ef37c, 0x80000000, 0x80000000 , 800); 
TEST_RR_OP64_OO( 102 , smalda, 0x00000002548f8dd9, 0xcf65963e, 0xffffffff , 808); 
TEST_RR_OP64_OO( 103 , smalda, 0x00000002548f8dd9, 0x80000000, 0x00000000 , 816); 
TEST_RR_OP64_OO( 104 , smalda, 0x00000002548f8dd9, 0x00000000, 0x00000000 , 824); 
TEST_RR_OP64_OO( 105 , smalda, 0x00000002548f8dd9, 0x00000000, 0xffffffff , 832); 
TEST_RR_OP64_OO( 106 , smalda, 0x00000002548f8dd9, 0x00000000, 0x00000000 , 840); 
TEST_RR_OP64_OO( 107 , smalda, 0x00000002548f8ddb, 0xffffffff, 0xffffffff , 848); 
TEST_RR_OP64_OO( 108 , smalda, 0x00000002548f8ddb, 0x00000000, 0x23d3a258 , 856); 
TEST_RR_OP64_OO( 109 , smalda, 0x00000002548f8ddb, 0x00000000, 0xffffffff , 864); 
TEST_RR_OP64_OO( 110 , smalda, 0x00000002548f8ddb, 0x00000000, 0x124e54e8 , 872); 
TEST_RR_OP64_OO( 111 , smalda, 0x00000002548f8ddb, 0xffffffff, 0x00000000 , 880); 
TEST_RR_OP64_OO( 112 , smalda, 0x0000000249a98e17, 0xb443e7db, 0x297ef166 , 888); 
TEST_RR_OP64_OO( 113 , smalda, 0x0000000249a98e17, 0xffffffff, 0x00000000 , 896); 
TEST_RR_OP64_OO( 114 , smalda, 0x000000025db3c1b4, 0xbe0af8eb, 0xaf6a1a2b , 904); 
TEST_RR_OP64_OO( 115 , smalda, 0x000000025db3a8a1, 0xa65e72b5, 0xffffffff , 912); 
TEST_RR_OP64_OO( 116 , smalda, 0x000000025db3a8a1, 0x00000000, 0x00000000 , 920); 
TEST_RR_OP64_OO( 117 , smalda, 0x000000025db3a8a1, 0x00000000, 0xffffffff , 928); 
TEST_RR_OP64_OO( 118 , smalda, 0x000000025db3a8a1, 0x00000000, 0x80000000 , 936); 
TEST_RR_OP64_OO( 119 , smalda, 0x000000025db3e98a, 0x36f78820, 0xffffffff , 944); 
TEST_RR_OP64_OO( 120 , smalda, 0x000000025db43166, 0xffffffff, 0x37d38051 , 952); 
TEST_RR_OP64_OO( 121 , smalda, 0x000000025db43166, 0x00000000, 0x80000000 , 960); 
TEST_RR_OP64_OO( 122 , smalda, 0x000000025db4846d, 0xffffffff, 0xa2370ac2 , 968); 
TEST_RR_OP64_OO( 123 , smalda, 0x000000025db4846d, 0x00000000, 0xd1b6f945 , 976); 
TEST_RR_OP64_OO( 124 , smalda, 0x000000025db4846d, 0xffffffff, 0x00000000 , 984); 
TEST_RR_OP64_OO( 125 , smalda, 0x000000025db4846d, 0x00000000, 0x00000000 , 992); 
TEST_RR_OP64_OO( 126 , smalda, 0x0000000275c7846d, 0xcfdaa453, 0x80000000 , 1000); 
TEST_RR_OP64_OO( 127 , smalda, 0x0000000275c8046d, 0xffffffff, 0x80000000 , 1008); 
TEST_RR_OP64_OO( 128 , smalda, 0x0000000275c8046d, 0xffffffff, 0x00000000 , 1016); 
TEST_RR_OP64_OO( 129 , smalda, 0x00000002a0f9046d, 0xa99e3456, 0x80000000 , 1024); 
TEST_RR_OP64_OO( 130 , smalda, 0x00000002a0f9846d, 0xffffffff, 0x80000000 , 1032); 
TEST_RR_OP64_OO( 131 , smalda, 0x00000002a0f98733, 0xffffffff, 0x0808f532 , 1040); 
TEST_RR_OP64_OO( 132 , smalda, 0x00000002a0fa22ac, 0xffffffff, 0xba00aa87 , 1048); 
TEST_RR_OP64_OO( 133 , smalda, 0x00000002a0fa22ac, 0xffffffff, 0x00000000 , 1056); 
TEST_RR_OP64_OO( 134 , smalda, 0x00000002ddefa2ac, 0x8615c32a, 0x80000000 , 1064); 
TEST_RR_OP64_OO( 135 , smalda, 0x000000031defa2ac, 0x80000000, 0x80000000 , 1072); 
TEST_RR_OP64_OO( 136 , smalda, 0x000000031df022ac, 0xffffffff, 0x80000000 , 1080); 
TEST_RR_OP64_OO( 137 , smalda, 0x000000031df022ac, 0x00000000, 0x94947dd3 , 1088); 
TEST_RR_OP64_OO( 138 , smalda, 0x000000031b5efb6c, 0x668f05e1, 0xf9b3fe23 , 1096); 
TEST_RR_OP64_OO( 139 , smalda, 0x000000031b5efb6c, 0x00000000, 0x00000000 , 1104); 
TEST_RR_OP64_OO( 140 , smalda, 0x000000031b5efb6c, 0x80000000, 0x00000000 , 1112); 
TEST_RR_OP64_OO( 141 , smalda, 0x000000031b5f2730, 0x3bc0987c, 0xffffffff , 1120); 
TEST_RR_OP64_OO( 142 , smalda, 0x000000031b5f2730, 0x80000000, 0x00000000 , 1128); 
TEST_RR_OP64_OO( 143 , smalda, 0x000000031b5ecfbd, 0xef4d6826, 0xffffffff , 1136); 
TEST_RR_OP64_OO( 144 , smalda, 0x00000002e49acfbd, 0x6d88cc35, 0x80000000 , 1144); 
TEST_RR_OP64_OO( 145 , smalda, 0x00000002e49acfbd, 0x80000000, 0x00000000 , 1152); 
TEST_RR_OP64_OO( 146 , smalda, 0x00000002f7064fbd, 0x80000000, 0xdb297cbc , 1160); 
TEST_RR_OP64_OO( 147 , smalda, 0x00000002f7064fbd, 0xb651a348, 0x00000000 , 1168); 
TEST_RR_OP64_OO( 148 , smalda, 0x00000002f706cfbd, 0x80000000, 0xffffffff , 1176); 
TEST_RR_OP64_OO( 149 , smalda, 0x00000002e49b4256, 0x13a7249f, 0xb4d4a793 , 1184); 
TEST_RR_OP64_OO( 150 , smalda, 0x00000002e49b4256, 0x00000000, 0x80000000 , 1192); 
TEST_RR_OP64_OO( 151 , smalda, 0x00000002da904256, 0x80000000, 0x14167f04 , 1200); 
TEST_RR_OP64_OO( 152 , smalda, 0x00000002f7643b54, 0xa7cf4b6a, 0xebbc4a29 , 1208); 
TEST_RR_OP64_OO( 153 , smalda, 0x00000002f7643b54, 0x8e3758d7, 0x00000000 , 1216); 
TEST_RR_OP64_OO( 154 , smalda, 0x00000002c0e9f322, 0xa9f67cea, 0x5086c7d1 , 1224); 
TEST_RR_OP64_OO( 155 , smalda, 0x00000002c0e9b059, 0x22d91ff0, 0xffffffff , 1232); 
TEST_RR_OP64_OO( 156 , smalda, 0x00000002c0e9b059, 0x00000000, 0xffffffff , 1240); 
TEST_RR_OP64_OO( 157 , smalda, 0x00000002c0e9b059, 0x80000000, 0x00000000 , 1248); 
TEST_RR_OP64_OO( 158 , smalda, 0x00000002c0e9b059, 0x00000000, 0xffffffff , 1256); 
TEST_RR_OP64_OO( 159 , smalda, 0x00000002c0e9a1f5, 0xffffffff, 0xbd7450f0 , 1264); 
TEST_RR_OP64_OO( 160 , smalda, 0x00000002c0ea21f5, 0xffffffff, 0x80000000 , 1272); 
TEST_RR_OP64_OO( 161 , smalda, 0x00000002c0ea21f7, 0xffffffff, 0xffffffff , 1280); 
TEST_RR_OP64_OO( 162 , smalda, 0x00000002ce7021f7, 0x80000000, 0xe4f4cf49 , 1288); 
TEST_RR_OP64_OO( 163 , smalda, 0x000000030c3f21f7, 0x8462f80f, 0x80000000 , 1296); 
TEST_RR_OP64_OO( 164 , smalda, 0x000000030c3fa1f7, 0xffffffff, 0x80000000 , 1304); 
TEST_RR_OP64_OO( 165 , smalda, 0x000000030c3fa1f7, 0x00000000, 0x7389a8a1 , 1312); 
TEST_RR_OP64_OO( 166 , smalda, 0x000000030c3fa1f7, 0x00000000, 0x80000000 , 1320); 
TEST_RR_OP64_OO( 167 , smalda, 0x000000034c3fa1f7, 0x80000000, 0x80000000 , 1328); 
TEST_RR_OP64_OO( 168 , smalda, 0x000000034c3fa1f7, 0x00000000, 0x80000000 , 1336); 
TEST_RR_OP64_OO( 169 , smalda, 0x000000034c3fa1f7, 0xffffffff, 0x00000000 , 1344); 
TEST_RR_OP64_OO( 170 , smalda, 0x000000038c3fa1f7, 0x80000000, 0x80000000 , 1352); 
TEST_RR_OP64_OO( 171 , smalda, 0x0000000393f6a1f7, 0xf0928ead, 0x80000000 , 1360); 
TEST_RR_OP64_OO( 172 , smalda, 0x000000036ebaa1f7, 0x80000000, 0x4a78d656 , 1368); 
TEST_RR_OP64_OO( 173 , smalda, 0x000000036ebaa1f7, 0x62626a12, 0x00000000 , 1376); 
TEST_RR_OP64_OO( 174 , smalda, 0x000000035c8fa1f7, 0x2456575b, 0x80000000 , 1384); 
TEST_RR_OP64_OO( 175 , smalda, 0x000000037cb921f7, 0x80000000, 0xbfad7926 , 1392); 
TEST_RR_OP64_OO( 176 , smalda, 0x00000003bcb921f7, 0x80000000, 0x80000000 , 1400); 
TEST_RR_OP64_OO( 177 , smalda, 0x00000003bcb921f7, 0x00000000, 0x00000000 , 1408); 
TEST_RR_OP64_OO( 178 , smalda, 0x00000003bcb921f7, 0xffffffff, 0x00000000 , 1416); 
TEST_RR_OP64_OO( 179 , smalda, 0x00000003bcb921f9, 0xffffffff, 0xffffffff , 1424); 
TEST_RR_OP64_OO( 180 , smalda, 0x00000003bcb921fb, 0xffffffff, 0xffffffff , 1432); 
TEST_RR_OP64_OO( 181 , smalda, 0x00000003bcb921fb, 0x00000000, 0xffffffff , 1440); 
TEST_RR_OP64_OO( 182 , smalda, 0x00000003bcb98c2d, 0xffffffff, 0x8acc0b02 , 1448); 
TEST_RR_OP64_OO( 183 , smalda, 0x00000003bcb98c2d, 0x0e627905, 0x00000000 , 1456); 
TEST_RR_OP64_OO( 184 , smalda, 0x00000003bcb98c2d, 0x00000000, 0xffffffff , 1464); 
TEST_RR_OP64_OO( 185 , smalda, 0x00000003bb5e97b3, 0x853ed3aa, 0x1e57b3d2 , 1472); 
TEST_RR_OP64_OO( 186 , smalda, 0x00000003bb5e97b3, 0x00000000, 0xffffffff , 1480); 
TEST_RR_OP64_OO( 187 , smalda, 0x00000003bb5e97b3, 0x80000000, 0x00000000 , 1488); 
TEST_RR_OP64_OO( 188 , smalda, 0x00000003bb5e97b3, 0x00000000, 0x32ca703b , 1496); 
TEST_RR_OP64_OO( 189 , smalda, 0x00000003fb5e97b3, 0x80000000, 0x80000000 , 1504); 
TEST_RR_OP64_OO( 190 , smalda, 0x00000003fb5e3d75, 0xe54d74f1, 0xffffffff , 1512); 
TEST_RR_OP64_OO( 191 , smalda, 0x00000003fb5e3d77, 0xffffffff, 0xffffffff , 1520); 
TEST_RR_OP64_OO( 192 , smalda, 0x000000042d3dbd77, 0x9c4142c4, 0x80000000 , 1528); 
TEST_RR_OP64_OO( 193 , smalda, 0x000000046d3dbd77, 0x80000000, 0x80000000 , 1536); 
TEST_RR_OP64_OO( 194 , smalda, 0x0000000457cb3d77, 0x80000000, 0x2ae5c32a , 1544); 
TEST_RR_OP64_OO( 195 , smalda, 0x0000000457cb0e63, 0x6b3dc3d7, 0xffffffff , 1552); 
TEST_RR_OP64_OO( 196 , smalda, 0x0000000457cb0e63, 0x00000000, 0xcab5a764 , 1560); 
TEST_RR_OP64_OO( 197 , smalda, 0x0000000457cb0e63, 0x00000000, 0x80000000 , 1568); 
TEST_RR_OP64_OO( 198 , smalda, 0x0000000497cb0e63, 0x80000000, 0x80000000 , 1576); 
TEST_RR_OP64_OO( 199 , smalda, 0x0000000495baada5, 0x401a0662, 0xecc26e77 , 1584); 

  #-------------------------------------------------------------
  # Bypassing tests
  #-------------------------------------------------------------


TEST_PASSFAIL

RV_COMPLIANCE_CODE_END

.data

RV_COMPLIANCE_DATA_BEGIN
test_res:
    .fill 398, 4, -1
RV_COMPLIANCE_DATA_END