# See LICENSE for license details.
#*****************************************************************************
# smul16.S
#-----------------------------------------------------------------------------
#
# Test add instruction.
#


#include "riscv_test.h"
#include "compliance_test.h"
#include "compliance_io.h"
#include "aw_test_macros.h"

RVTEST_RV64U
RV_COMPLIANCE_CODE_BEGIN

  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------

TEST_RR_OP64_OO( 2 , smul16, 0xfa509c8200000000, 0x3c95ffff, 0xe7fa0000, 8); 
TEST_RR_OP64_OO( 3 , smul16, 0x00000000f8c08000, 0x00008000, 0xb1b90e7f, 16); 
TEST_RR_OP64_OO( 4 , smul16, 0x0000000000000000, 0x00000000, 0x0000ffff, 24); 
TEST_RR_OP64_OO( 5 , smul16, 0x0000000040000000, 0x80008000, 0x00008000, 32); 
TEST_RR_OP64_OO( 6 , smul16, 0x4000000000000000, 0x80000000, 0x80000000, 40); 
TEST_RR_OP64_OO( 7 , smul16, 0x0000000000000001, 0x0000ffff, 0x8000ffff, 48); 
TEST_RR_OP64_OO( 8 , smul16, 0x0000000040000000, 0x00008000, 0x00008000, 56); 
TEST_RR_OP64_OO( 9 , smul16, 0xedb98000c4480000, 0x248d8000, 0x80007770, 64); 
TEST_RR_OP64_OO( 10 , smul16, 0x0000800000008000, 0x80008000, 0xffffffff, 72); 
TEST_RR_OP64_OO( 11 , smul16, 0x0000000000000000, 0x0000dc61, 0x00000000, 80); 
TEST_RR_OP64_OO( 12 , smul16, 0x0000800000000000, 0xffff0000, 0x8000e1cc, 88); 
TEST_RR_OP64_OO( 13 , smul16, 0xccd6800040000000, 0x66538000, 0x80008000, 96); 
TEST_RR_OP64_OO( 14 , smul16, 0x0000000000000000, 0x34ad0000, 0x00008000, 104); 
TEST_RR_OP64_OO( 15 , smul16, 0x00008000e5b90000, 0x80008000, 0xffff348e, 112); 
TEST_RR_OP64_OO( 16 , smul16, 0x0000800000005ded, 0xffffffff, 0x8000a213, 120); 
TEST_RR_OP64_OO( 17 , smul16, 0x00000000ffffb1bc, 0xffffffff, 0x00004e44, 128); 
TEST_RR_OP64_OO( 18 , smul16, 0x4000000000000000, 0x80000000, 0x8000aaef, 136); 
TEST_RR_OP64_OO( 19 , smul16, 0x0000000000000000, 0x00000000, 0xffff8000, 144); 
TEST_RR_OP64_OO( 20 , smul16, 0xfffffe7300000000, 0x018dffff, 0xffff0000, 152); 
TEST_RR_OP64_OO( 21 , smul16, 0x0000800002cf45e8, 0x8000f907, 0xffff98d8, 160); 
TEST_RR_OP64_OO( 22 , smul16, 0x00000000e44d8000, 0xadd88000, 0x00003765, 168); 
TEST_RR_OP64_OO( 23 , smul16, 0x0000800000008000, 0xffff8000, 0x8000ffff, 176); 
TEST_RR_OP64_OO( 24 , smul16, 0x0000299dc0280000, 0xd6637fb0, 0xffff8000, 184); 
TEST_RR_OP64_OO( 25 , smul16, 0x0000000000000000, 0x80002521, 0x00000000, 192); 
TEST_RR_OP64_OO( 26 , smul16, 0xffffa3370ab40000, 0x5cc98000, 0xffffea98, 200); 
TEST_RR_OP64_OO( 27 , smul16, 0x0000000000000000, 0x00000000, 0xffff8000, 208); 
TEST_RR_OP64_OO( 28 , smul16, 0x0000000000008000, 0xffffffff, 0x00008000, 216); 
TEST_RR_OP64_OO( 29 , smul16, 0x166f0000ffffeaef, 0x8000ffff, 0xd3221511, 224); 
TEST_RR_OP64_OO( 30 , smul16, 0x0000000037360000, 0x80008000, 0x00009194, 232); 
TEST_RR_OP64_OO( 31 , smul16, 0x0000800000000000, 0xffffffff, 0x80000000, 240); 
TEST_RR_OP64_OO( 32 , smul16, 0x21f7d070fffff424, 0x9ef00bdc, 0xa669ffff, 248); 
TEST_RR_OP64_OO( 33 , smul16, 0x0000000000000000, 0xffff8000, 0x00000000, 256); 
TEST_RR_OP64_OO( 34 , smul16, 0xffff806d00008000, 0xffff8000, 0x7f93ffff, 264); 
TEST_RR_OP64_OO( 35 , smul16, 0x0000000000000000, 0x00009aa6, 0x00000000, 272); 
TEST_RR_OP64_OO( 36 , smul16, 0x000080001b62c280, 0xffff9e4a, 0x8000b840, 280); 
TEST_RR_OP64_OO( 37 , smul16, 0x3458800000000000, 0x80008000, 0x974f0000, 288); 
TEST_RR_OP64_OO( 38 , smul16, 0x00000000f30d0000, 0xffff19e6, 0x00008000, 296); 
TEST_RR_OP64_OO( 39 , smul16, 0x0000000009d2ebb0, 0x80002e90, 0x00003603, 304); 
TEST_RR_OP64_OO( 40 , smul16, 0x00007e7100000a26, 0xfffff5da, 0x818fffff, 312); 
TEST_RR_OP64_OO( 41 , smul16, 0x0000438100000000, 0xbc7f8000, 0xffff0000, 320); 
TEST_RR_OP64_OO( 42 , smul16, 0x370b800000008000, 0x91e98000, 0x8000ffff, 328); 
TEST_RR_OP64_OO( 43 , smul16, 0x0000000100008000, 0xffffffff, 0xffff8000, 336); 
TEST_RR_OP64_OO( 44 , smul16, 0x00000000ffff8cd6, 0x0000ffff, 0x8000732a, 344); 
TEST_RR_OP64_OO( 45 , smul16, 0xf8b9817000000000, 0xa3e20000, 0x14381e32, 352); 
TEST_RR_OP64_OO( 46 , smul16, 0x00000001000025d0, 0xffffda30, 0xffffffff, 360); 
TEST_RR_OP64_OO( 47 , smul16, 0x0000800000000000, 0xffff0000, 0x80000000, 368); 
TEST_RR_OP64_OO( 48 , smul16, 0x088f800000000000, 0x80000000, 0xeee1e250, 376); 
TEST_RR_OP64_OO( 49 , smul16, 0x0000000000000000, 0xffff0000, 0x00000000, 384); 
TEST_RR_OP64_OO( 50 , smul16, 0x0000735b000003a5, 0x8ca5fc5b, 0xffffffff, 392); 
TEST_RR_OP64_OO( 51 , smul16, 0x18db8000fffff738, 0x8000ffff, 0xce4908c8, 400); 
TEST_RR_OP64_OO( 52 , smul16, 0x0000000000000000, 0x5fdb0000, 0x00008000, 408); 
TEST_RR_OP64_OO( 53 , smul16, 0x0000000000000000, 0x00005056, 0xffff0000, 416); 
TEST_RR_OP64_OO( 54 , smul16, 0x324400001021ef92, 0x9b78958a, 0x8000d935, 424); 
TEST_RR_OP64_OO( 55 , smul16, 0x00008000ffffcd83, 0xffffffff, 0x8000327d, 432); 
TEST_RR_OP64_OO( 56 , smul16, 0x110cb32f40000000, 0x54ab8000, 0x338d8000, 440); 
TEST_RR_OP64_OO( 57 , smul16, 0x00003dc0ee4e8000, 0xc2402363, 0xffff8000, 448); 
TEST_RR_OP64_OO( 58 , smul16, 0x38d28000edc08000, 0x8e5b247f, 0x80008000, 456); 
TEST_RR_OP64_OO( 59 , smul16, 0x00004668e2bd8000, 0xffff3a85, 0xb9988000, 464); 
TEST_RR_OP64_OO( 60 , smul16, 0xec74800000000000, 0x80008000, 0x27170000, 472); 
TEST_RR_OP64_OO( 61 , smul16, 0x0000184d00001d94, 0xe7b3e26c, 0xffffffff, 480); 
TEST_RR_OP64_OO( 62 , smul16, 0x00030000ff927e32, 0x80000822, 0xfffaf289, 488); 
TEST_RR_OP64_OO( 63 , smul16, 0x00000001000062e5, 0xffff9d1b, 0xffffffff, 496); 
TEST_RR_OP64_OO( 64 , smul16, 0x000000002d700000, 0x80008000, 0x0000a520, 504); 
TEST_RR_OP64_OO( 65 , smul16, 0xe30d707c00000000, 0xbfb10000, 0x733c5599, 512); 
TEST_RR_OP64_OO( 66 , smul16, 0x1320000000000000, 0x80000000, 0xd9c0ae7a, 520); 
TEST_RR_OP64_OO( 67 , smul16, 0x00000000fffff196, 0x0000ffff, 0xac560e6a, 528); 
TEST_RR_OP64_OO( 68 , smul16, 0x00000000f1da8000, 0x50201c4b, 0x00008000, 536); 
TEST_RR_OP64_OO( 69 , smul16, 0xe84b0000f2d88000, 0x80008000, 0x2f6a1a4f, 544); 
TEST_RR_OP64_OO( 70 , smul16, 0x0000000000000000, 0x00000000, 0x00007de4, 552); 
TEST_RR_OP64_OO( 71 , smul16, 0x0000000000000000, 0x643e0000, 0x0000ffff, 560); 
TEST_RR_OP64_OO( 72 , smul16, 0x0000000040000000, 0x00008000, 0x989d8000, 568); 
TEST_RR_OP64_OO( 73 , smul16, 0x00000000000078a4, 0x0000875c, 0x0000ffff, 576); 
TEST_RR_OP64_OO( 74 , smul16, 0x4000000000000000, 0x80008000, 0x80000000, 584); 
TEST_RR_OP64_OO( 75 , smul16, 0xffffb72300000000, 0x48dd0000, 0xffff8000, 592); 
TEST_RR_OP64_OO( 76 , smul16, 0x0000000000000000, 0x00000000, 0xffff4d86, 600); 
TEST_RR_OP64_OO( 77 , smul16, 0x393c000000000000, 0x8d888000, 0x80000000, 608); 
TEST_RR_OP64_OO( 78 , smul16, 0x00000000000031aa, 0x0000ce56, 0xffffffff, 616); 
TEST_RR_OP64_OO( 79 , smul16, 0x00008000000023be, 0xffffffff, 0x8000dc42, 624); 
TEST_RR_OP64_OO( 80 , smul16, 0xfffff5def6b28000, 0xffff129b, 0x0a228000, 632); 
TEST_RR_OP64_OO( 81 , smul16, 0x0000000000000000, 0x00000000, 0x00008000, 640); 
TEST_RR_OP64_OO( 82 , smul16, 0x0000000100008000, 0xffffffff, 0xffff8000, 648); 
TEST_RR_OP64_OO( 83 , smul16, 0x20eb800000005996, 0x8000ffff, 0xbe29a66a, 656); 
TEST_RR_OP64_OO( 84 , smul16, 0x13b1e64800008000, 0x81828000, 0xd824ffff, 664); 
TEST_RR_OP64_OO( 85 , smul16, 0x00000000e3ca8000, 0x5150386b, 0x00008000, 672); 
TEST_RR_OP64_OO( 86 , smul16, 0x020dd69c00000000, 0x177a0000, 0x16668000, 680); 
TEST_RR_OP64_OO( 87 , smul16, 0x2017000000000000, 0xbfd20000, 0x8000b3c1, 688); 
TEST_RR_OP64_OO( 88 , smul16, 0x0000800000008000, 0x80008000, 0xffffffff, 696); 
TEST_RR_OP64_OO( 89 , smul16, 0x00008000052e8000, 0x80008000, 0xfffff5a3, 704); 
TEST_RR_OP64_OO( 90 , smul16, 0x0000000000008000, 0x0000ffff, 0x00008000, 712); 
TEST_RR_OP64_OO( 91 , smul16, 0x0000800000000000, 0x80000000, 0xffff8000, 720); 
TEST_RR_OP64_OO( 92 , smul16, 0x0000000000008000, 0x00008000, 0x0000ffff, 728); 
TEST_RR_OP64_OO( 93 , smul16, 0x0000000000000000, 0x0000cacf, 0x00000000, 736); 
TEST_RR_OP64_OO( 94 , smul16, 0x0000800000008000, 0x8000ffff, 0xffff8000, 744); 
TEST_RR_OP64_OO( 95 , smul16, 0x0000000000000000, 0xaccd0000, 0x00008000, 752); 
TEST_RR_OP64_OO( 96 , smul16, 0xfe8d6c2c00000000, 0x764a8000, 0xfcde0000, 760); 
TEST_RR_OP64_OO( 97 , smul16, 0xdd9d800000000000, 0x80000000, 0x44c50000, 768); 
TEST_RR_OP64_OO( 98 , smul16, 0x0000000000008000, 0x0000ffff, 0x80008000, 776); 
TEST_RR_OP64_OO( 99 , smul16, 0x4000000000000000, 0x80000000, 0x80008000, 784); 
TEST_RR_OP64_OO( 100 , smul16, 0xffff9b0740000000, 0x64f98000, 0xffff8000, 792); 
TEST_RR_OP64_OO( 101 , smul16, 0x0000000100000000, 0xffff0000, 0xffffffff, 800); 
TEST_RR_OP64_OO( 102 , smul16, 0x0000000000008000, 0x80008000, 0x0000ffff, 808); 
TEST_RR_OP64_OO( 103 , smul16, 0x0000000020d9e5e9, 0x000068f7, 0x8000501f, 816); 
TEST_RR_OP64_OO( 104 , smul16, 0xea1689d000000000, 0x5c448000, 0xc3340000, 824); 
TEST_RR_OP64_OO( 105 , smul16, 0x3ca4800000000000, 0x80000000, 0x86b7fe8d, 832); 
TEST_RR_OP64_OO( 106 , smul16, 0x0000000000000000, 0x00000000, 0x80008000, 840); 
TEST_RR_OP64_OO( 107 , smul16, 0x0000000000000000, 0x00000000, 0x0000ffff, 848); 
TEST_RR_OP64_OO( 108 , smul16, 0x0000800000008000, 0xffffffff, 0x80008000, 856); 
TEST_RR_OP64_OO( 109 , smul16, 0x0000000000000000, 0x00000c37, 0x00000000, 864); 
TEST_RR_OP64_OO( 110 , smul16, 0x32d20000186d3cf0, 0x9a5cccea, 0x80008598, 872); 
TEST_RR_OP64_OO( 111 , smul16, 0x31d2000000000000, 0x80000000, 0x9c5cffff, 880); 
TEST_RR_OP64_OO( 112 , smul16, 0x0000000000000000, 0x00008000, 0xffff0000, 888); 
TEST_RR_OP64_OO( 113 , smul16, 0x0000000000000001, 0x8e8affff, 0x0000ffff, 896); 
TEST_RR_OP64_OO( 114 , smul16, 0x0000000100008000, 0xffff8000, 0xffffffff, 904); 
TEST_RR_OP64_OO( 115 , smul16, 0x0000000000000000, 0x00000000, 0xffffa2d7, 912); 
TEST_RR_OP64_OO( 116 , smul16, 0x0000000100000000, 0xffff0000, 0xffff0000, 920); 
TEST_RR_OP64_OO( 117 , smul16, 0x0000000000000000, 0x00000000, 0x00000000, 928); 
TEST_RR_OP64_OO( 118 , smul16, 0x3e83800000000001, 0x8000ffff, 0x82f9ffff, 936); 
TEST_RR_OP64_OO( 119 , smul16, 0x0000000000008000, 0x80008000, 0x0000ffff, 944); 
TEST_RR_OP64_OO( 120 , smul16, 0xeb07000000000000, 0x29f20000, 0x80000000, 952); 
TEST_RR_OP64_OO( 121 , smul16, 0x00008000ccac0000, 0xffff66a8, 0x80008000, 960); 
TEST_RR_OP64_OO( 122 , smul16, 0x4000000000000000, 0x80000000, 0x800058d7, 968); 
TEST_RR_OP64_OO( 123 , smul16, 0x0000000000000000, 0x00000000, 0x00000000, 976); 
TEST_RR_OP64_OO( 124 , smul16, 0x0000000000000000, 0x00000000, 0x80008000, 984); 
TEST_RR_OP64_OO( 125 , smul16, 0x0000800000000000, 0x80000000, 0xffff0000, 992); 
TEST_RR_OP64_OO( 126 , smul16, 0x00000000ca6e0000, 0x00008000, 0x00006b24, 1000); 
TEST_RR_OP64_OO( 127 , smul16, 0x0000800000000000, 0xffff75c2, 0x80000000, 1008); 
TEST_RR_OP64_OO( 128 , smul16, 0x00000000cd220000, 0xcf4665bc, 0x00008000, 1016); 
TEST_RR_OP64_OO( 129 , smul16, 0x4000000000000000, 0x80000000, 0x80002488, 1024); 
TEST_RR_OP64_OO( 130 , smul16, 0x0000000000002231, 0x0000ffff, 0xffffddcf, 1032); 
TEST_RR_OP64_OO( 131 , smul16, 0x0000000100000000, 0xffff0000, 0xffffffff, 1040); 
TEST_RR_OP64_OO( 132 , smul16, 0xdfab0000d0528000, 0x40aa5f5b, 0x80008000, 1048); 
TEST_RR_OP64_OO( 133 , smul16, 0x0000000000008000, 0x00008000, 0x8000ffff, 1056); 
TEST_RR_OP64_OO( 134 , smul16, 0x0000000140000000, 0xffff8000, 0xffff8000, 1064); 
TEST_RR_OP64_OO( 135 , smul16, 0x2d6e800000000000, 0x80000000, 0xa523ffff, 1072); 
TEST_RR_OP64_OO( 136 , smul16, 0x0000000000000000, 0x00000000, 0xd1150000, 1080); 
TEST_RR_OP64_OO( 137 , smul16, 0x0000000000008000, 0x00008000, 0xffffffff, 1088); 
TEST_RR_OP64_OO( 138 , smul16, 0x0000000000000001, 0x0000ffff, 0x0000ffff, 1096); 
TEST_RR_OP64_OO( 139 , smul16, 0x0000000000000001, 0x0000ffff, 0x8000ffff, 1104); 
TEST_RR_OP64_OO( 140 , smul16, 0x0000800000000000, 0x8000b31e, 0xffff0000, 1112); 
TEST_RR_OP64_OO( 141 , smul16, 0x0000000000000000, 0x0000ffff, 0x00000000, 1120); 
TEST_RR_OP64_OO( 142 , smul16, 0x0000000000000fdd, 0x6a94ffff, 0x0000f023, 1128); 
TEST_RR_OP64_OO( 143 , smul16, 0x0000269800000000, 0xffff8000, 0xd9680000, 1136); 
TEST_RR_OP64_OO( 144 , smul16, 0xc39780000000202f, 0x78d1ffff, 0x8000dfd1, 1144); 
TEST_RR_OP64_OO( 145 , smul16, 0xdc1e3d00000052f2, 0x9980ffff, 0x599ead0e, 1152); 
TEST_RR_OP64_OO( 146 , smul16, 0x0000000100000000, 0xffff0000, 0xffffffff, 1160); 
TEST_RR_OP64_OO( 147 , smul16, 0x01cb800000008000, 0x8000ffff, 0xfc698000, 1168); 
TEST_RR_OP64_OO( 148 , smul16, 0x000000013f3f8000, 0xffff8000, 0xffff8181, 1176); 
TEST_RR_OP64_OO( 149 , smul16, 0x0000000000008000, 0x8000ffff, 0x00008000, 1184); 
TEST_RR_OP64_OO( 150 , smul16, 0x0000000000000000, 0x8000e703, 0x00000000, 1192); 
TEST_RR_OP64_OO( 151 , smul16, 0x0000000000000000, 0xffff2749, 0x00000000, 1200); 
TEST_RR_OP64_OO( 152 , smul16, 0x09a2000000000000, 0x80000000, 0xecbcffff, 1208); 
TEST_RR_OP64_OO( 153 , smul16, 0x0000000000008000, 0x00008000, 0x99e8ffff, 1216); 
TEST_RR_OP64_OO( 154 , smul16, 0x00000000f55ff953, 0x000083db, 0xffff15e9, 1224); 
TEST_RR_OP64_OO( 155 , smul16, 0x0000800000000000, 0x80008000, 0xffff0000, 1232); 
TEST_RR_OP64_OO( 156 , smul16, 0xf83b800000005862, 0x0f89a79e, 0x8000ffff, 1240); 
TEST_RR_OP64_OO( 157 , smul16, 0x00007bb900000000, 0x84470000, 0xffff8000, 1248); 
TEST_RR_OP64_OO( 158 , smul16, 0x40000000118b8000, 0x80008000, 0x8000dce9, 1256); 
TEST_RR_OP64_OO( 159 , smul16, 0x0000000000000001, 0x8000ffff, 0x0000ffff, 1264); 
TEST_RR_OP64_OO( 160 , smul16, 0x0000000000000000, 0xfffffa55, 0x00000000, 1272); 
TEST_RR_OP64_OO( 161 , smul16, 0x00007f9300008000, 0xffff8000, 0x806dffff, 1280); 
TEST_RR_OP64_OO( 162 , smul16, 0x0000800000008000, 0xffff8000, 0x8000ffff, 1288); 
TEST_RR_OP64_OO( 163 , smul16, 0x000000000000732c, 0x0000ffff, 0x80008cd4, 1296); 
TEST_RR_OP64_OO( 164 , smul16, 0x0000000000008000, 0x00008000, 0x8000ffff, 1304); 
TEST_RR_OP64_OO( 165 , smul16, 0x0000000000000000, 0x0000ffff, 0xe08d0000, 1312); 
TEST_RR_OP64_OO( 166 , smul16, 0x0000000000000000, 0x0000ffff, 0xffff0000, 1320); 
TEST_RR_OP64_OO( 167 , smul16, 0x0000000000000000, 0x80000000, 0x0000ffff, 1328); 
TEST_RR_OP64_OO( 168 , smul16, 0x0000800000000000, 0x80000000, 0xffff0000, 1336); 
TEST_RR_OP64_OO( 169 , smul16, 0x0000800000006a05, 0x800095fb, 0xffffffff, 1344); 
TEST_RR_OP64_OO( 170 , smul16, 0xffff939900006f89, 0xffff9077, 0x6c67ffff, 1352); 
TEST_RR_OP64_OO( 171 , smul16, 0x0000800000000000, 0xffff0000, 0x8000ffff, 1360); 
TEST_RR_OP64_OO( 172 , smul16, 0x0000000000000000, 0xffff0000, 0x0000ffff, 1368); 
TEST_RR_OP64_OO( 173 , smul16, 0x0000000000000000, 0x00000000, 0x8000ffff, 1376); 
TEST_RR_OP64_OO( 174 , smul16, 0xffff9d1e000039ae, 0x62e2c652, 0xffffffff, 1384); 
TEST_RR_OP64_OO( 175 , smul16, 0x000000000000365c, 0xffffc9a4, 0x0000ffff, 1392); 
TEST_RR_OP64_OO( 176 , smul16, 0x0000000100000000, 0xffff0000, 0xffffeab6, 1400); 
TEST_RR_OP64_OO( 177 , smul16, 0x039be77700000000, 0xed418000, 0xceb70000, 1408); 
TEST_RR_OP64_OO( 178 , smul16, 0x0000000100008000, 0xffffffff, 0xffff8000, 1416); 
TEST_RR_OP64_OO( 179 , smul16, 0x0000000000000000, 0xffff0000, 0x0000ffff, 1424); 
TEST_RR_OP64_OO( 180 , smul16, 0x0000000000000000, 0x00008000, 0x80000000, 1432); 
TEST_RR_OP64_OO( 181 , smul16, 0x000080000000122e, 0xffffffff, 0x8000edd2, 1440); 
TEST_RR_OP64_OO( 182 , smul16, 0x0000000000000000, 0x00000000, 0x8000bf57, 1448); 
TEST_RR_OP64_OO( 183 , smul16, 0x00000000ffdd4660, 0x00000314, 0x8000f4b8, 1456); 
TEST_RR_OP64_OO( 184 , smul16, 0x0000000000000000, 0x00000000, 0x8f900000, 1464); 
TEST_RR_OP64_OO( 185 , smul16, 0x0000800000008000, 0x80008000, 0xffffffff, 1472); 
TEST_RR_OP64_OO( 186 , smul16, 0xfb180000fca30000, 0x80008000, 0x09d006ba, 1480); 
TEST_RR_OP64_OO( 187 , smul16, 0x4000000000000000, 0x80000000, 0x8000ffff, 1488); 
TEST_RR_OP64_OO( 188 , smul16, 0x0000800000640000, 0x8000ff38, 0xffff8000, 1496); 
TEST_RR_OP64_OO( 189 , smul16, 0x0000000000008000, 0xffffffff, 0x00008000, 1504); 
TEST_RR_OP64_OO( 190 , smul16, 0x0000000000008000, 0x00008000, 0x8000ffff, 1512); 
TEST_RR_OP64_OO( 191 , smul16, 0xe582000000000000, 0x80000000, 0x34fc2768, 1520); 
TEST_RR_OP64_OO( 192 , smul16, 0x0000000000000000, 0x00000000, 0x0000846f, 1528); 
TEST_RR_OP64_OO( 193 , smul16, 0x0000000000000000, 0x80000000, 0x0000ffff, 1536); 
TEST_RR_OP64_OO( 194 , smul16, 0x0000000000000000, 0x00000000, 0x80004e98, 1544); 
TEST_RR_OP64_OO( 195 , smul16, 0x0000000000000000, 0x00000000, 0xc5960000, 1552); 
TEST_RR_OP64_OO( 196 , smul16, 0x0000000000000000, 0xf8bb0000, 0x00008000, 1560); 
TEST_RR_OP64_OO( 197 , smul16, 0x1bac000000000000, 0x80000000, 0xc8a8a424, 1568); 
TEST_RR_OP64_OO( 198 , smul16, 0x3c96000000000000, 0x86d40000, 0x80001242, 1576); 
TEST_RR_OP64_OO( 199 , smul16, 0x0000000100000000, 0xffff007b, 0xffff0000, 1584); 

  #-------------------------------------------------------------
  # Bypassing tests
  #-------------------------------------------------------------


TEST_PASSFAIL

RV_COMPLIANCE_CODE_END

.data

RV_COMPLIANCE_DATA_BEGIN
test_res:
    .fill 398, 4, -1
RV_COMPLIANCE_DATA_END