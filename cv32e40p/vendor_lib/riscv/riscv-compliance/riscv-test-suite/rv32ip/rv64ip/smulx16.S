# See LICENSE for license details.
#*****************************************************************************
# smulx16.S
#-----------------------------------------------------------------------------
#
# Test add instruction.
#


#include "riscv_test.h"
#include "compliance_test.h"
#include "compliance_io.h"
#include "aw_test_macros.h"

RVTEST_RV64U
RV_COMPLIANCE_CODE_BEGIN

  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------

TEST_RR_OP64_OO( 2 , smulx16, 0x40000000d0060000, 0x80008000, 0x5ff48000, 8); 
TEST_RR_OP64_OO( 3 , smulx16, 0x00003dd900004221, 0xffffbddf, 0xffffc227, 16); 
TEST_RR_OP64_OO( 4 , smulx16, 0x000023e0097d8000, 0xffffed05, 0x8000dc20, 24); 
TEST_RR_OP64_OO( 5 , smulx16, 0x0000000000000000, 0x80000000, 0x80000000, 32); 
TEST_RR_OP64_OO( 6 , smulx16, 0x0000000000000000, 0xffff0000, 0x00000000, 40); 
TEST_RR_OP64_OO( 7 , smulx16, 0x0000000000000000, 0x00000000, 0xffffffff, 48); 
TEST_RR_OP64_OO( 8 , smulx16, 0x4000000000000000, 0x80000000, 0xa2658000, 56); 
TEST_RR_OP64_OO( 9 , smulx16, 0x00000000ffffbeb3, 0x0000ffff, 0x414dffff, 64); 
TEST_RR_OP64_OO( 10 , smulx16, 0x4000000000000000, 0x8000051c, 0x00008000, 72); 
TEST_RR_OP64_OO( 11 , smulx16, 0x0c2ea2faf1ad0000, 0x77928000, 0x1ca61a15, 80); 
TEST_RR_OP64_OO( 12 , smulx16, 0x4000000000000000, 0x80000000, 0xffff8000, 88); 
TEST_RR_OP64_OO( 13 , smulx16, 0x00000000ffffb088, 0x0000ffff, 0x4f78a6f0, 96); 
TEST_RR_OP64_OO( 14 , smulx16, 0x0000800000008000, 0x80008000, 0xffffffff, 104); 
TEST_RR_OP64_OO( 15 , smulx16, 0x4000000000000000, 0x8000ffff, 0x00008000, 112); 
TEST_RR_OP64_OO( 16 , smulx16, 0x4000000000008000, 0x80008000, 0xffff8000, 120); 
TEST_RR_OP64_OO( 17 , smulx16, 0xf9f8800000000000, 0x8000ffff, 0x00000c0f, 128); 
TEST_RR_OP64_OO( 18 , smulx16, 0x0000000100000000, 0xffff8000, 0x0000ffff, 136); 
TEST_RR_OP64_OO( 19 , smulx16, 0x0000000000000000, 0x00000000, 0x8000ffff, 144); 
TEST_RR_OP64_OO( 20 , smulx16, 0x0000800000008000, 0xffff8000, 0xffff8000, 152); 
TEST_RR_OP64_OO( 21 , smulx16, 0x40000000f6770000, 0x80001312, 0x80008000, 160); 
TEST_RR_OP64_OO( 22 , smulx16, 0x000039eb00000000, 0xffff0000, 0x0000c615, 168); 
TEST_RR_OP64_OO( 23 , smulx16, 0x0000800000008000, 0xffffffff, 0x80008000, 176); 
TEST_RR_OP64_OO( 24 , smulx16, 0x0000000000000000, 0x0bd70000, 0xffff0000, 184); 
TEST_RR_OP64_OO( 25 , smulx16, 0xd7a3000000000000, 0x80008000, 0x000050ba, 192); 
TEST_RR_OP64_OO( 26 , smulx16, 0x0000000000000001, 0x8000ffff, 0xffff0000, 200); 
TEST_RR_OP64_OO( 27 , smulx16, 0x0000000000000000, 0xffff0000, 0x80000000, 208); 
TEST_RR_OP64_OO( 28 , smulx16, 0xfcb9c06240000000, 0x123d8000, 0x8000d20a, 216); 
TEST_RR_OP64_OO( 29 , smulx16, 0x0d2d68f400000000, 0x851f0000, 0x0000e48c, 224); 
TEST_RR_OP64_OO( 30 , smulx16, 0x0000000000680000, 0x0000ff30, 0x80008eb5, 232); 
TEST_RR_OP64_OO( 31 , smulx16, 0x0000000000000001, 0x0000ffff, 0xffff0000, 240); 
TEST_RR_OP64_OO( 32 , smulx16, 0x000080002ebb8000, 0x80008000, 0xa289ffff, 248); 
TEST_RR_OP64_OO( 33 , smulx16, 0x000046bded6bbce5, 0xffffa8e9, 0x369db943, 256); 
TEST_RR_OP64_OO( 34 , smulx16, 0x0000000100008000, 0xffffffff, 0x8000ffff, 264); 
TEST_RR_OP64_OO( 35 , smulx16, 0x00000001ffffd6c5, 0xffffffff, 0x293bffff, 272); 
TEST_RR_OP64_OO( 36 , smulx16, 0x0000000000000001, 0xf122ffff, 0xffff0000, 280); 
TEST_RR_OP64_OO( 37 , smulx16, 0x4000000000000000, 0x8000ca0c, 0x00008000, 288); 
TEST_RR_OP64_OO( 38 , smulx16, 0x0000800000000000, 0x80000000, 0x8000ffff, 296); 
TEST_RR_OP64_OO( 39 , smulx16, 0x00005e3300000000, 0xffff0000, 0x8000a1cd, 304); 
TEST_RR_OP64_OO( 40 , smulx16, 0x0000000000000000, 0xadb80000, 0x80000000, 312); 
TEST_RR_OP64_OO( 41 , smulx16, 0x0000000000000000, 0x00000000, 0xe072ffff, 320); 
TEST_RR_OP64_OO( 42 , smulx16, 0x0000000000000000, 0x00005414, 0x00000000, 328); 
TEST_RR_OP64_OO( 43 , smulx16, 0x4000000000000000, 0x80000000, 0x80008000, 336); 
TEST_RR_OP64_OO( 44 , smulx16, 0xea766cc700000000, 0x5a3b0000, 0x9b38c2e5, 344); 
TEST_RR_OP64_OO( 45 , smulx16, 0x0000317b00000000, 0xce858000, 0x0000ffff, 352); 
TEST_RR_OP64_OO( 46 , smulx16, 0x0000000000000000, 0x0000ffff, 0x00008000, 360); 
TEST_RR_OP64_OO( 47 , smulx16, 0x0000000000008000, 0x00008000, 0xffff0000, 368); 
TEST_RR_OP64_OO( 48 , smulx16, 0x0000000000000001, 0x0000ffff, 0xffffbd4b, 376); 
TEST_RR_OP64_OO( 49 , smulx16, 0xedc5298d00008000, 0x278dffff, 0x80008a01, 384); 
TEST_RR_OP64_OO( 50 , smulx16, 0x0000000000000000, 0xffffffff, 0x00000000, 392); 
TEST_RR_OP64_OO( 51 , smulx16, 0x0000000000000000, 0xffff0000, 0xffff0000, 400); 
TEST_RR_OP64_OO( 52 , smulx16, 0x0000000040000000, 0x00008000, 0x80000000, 408); 
TEST_RR_OP64_OO( 53 , smulx16, 0x0000000000000000, 0x80000000, 0x83e60000, 416); 
TEST_RR_OP64_OO( 54 , smulx16, 0x0000800000008000, 0x8000ffff, 0x8000ffff, 424); 
TEST_RR_OP64_OO( 55 , smulx16, 0x0000000000000000, 0x00008000, 0x0000ffff, 432); 
TEST_RR_OP64_OO( 56 , smulx16, 0x0000800000008000, 0x80008000, 0xffffffff, 440); 
TEST_RR_OP64_OO( 57 , smulx16, 0x0000319400000000, 0xffff0000, 0xffffce6c, 448); 
TEST_RR_OP64_OO( 58 , smulx16, 0x4000000000000000, 0x80000000, 0xffff8000, 456); 
TEST_RR_OP64_OO( 59 , smulx16, 0x00000000ffffb92d, 0xffffffff, 0x46d30000, 464); 
TEST_RR_OP64_OO( 60 , smulx16, 0x09b5a10e00000000, 0x514fffff, 0x00001e92, 472); 
TEST_RR_OP64_OO( 61 , smulx16, 0x000037e4eba88000, 0xc81c28af, 0x8000ffff, 480); 
TEST_RR_OP64_OO( 62 , smulx16, 0x0000000000000000, 0x00008000, 0x00009020, 488); 
TEST_RR_OP64_OO( 63 , smulx16, 0x2a148000207a0000, 0x8000bf0c, 0x8000abd7, 496); 
TEST_RR_OP64_OO( 64 , smulx16, 0x0000800000000000, 0xffffcb5f, 0x00008000, 504); 
TEST_RR_OP64_OO( 65 , smulx16, 0x0000800000000000, 0x80000000, 0x25e9ffff, 512); 
TEST_RR_OP64_OO( 66 , smulx16, 0x0000000000008000, 0x0000ffff, 0x80008000, 520); 
TEST_RR_OP64_OO( 67 , smulx16, 0x0000000000000000, 0x000008c3, 0x00000000, 528); 
TEST_RR_OP64_OO( 68 , smulx16, 0x0000800000008000, 0x8000ffff, 0x8000ffff, 536); 
TEST_RR_OP64_OO( 69 , smulx16, 0x0000800000008000, 0xffff8000, 0xffff8000, 544); 
TEST_RR_OP64_OO( 70 , smulx16, 0x000043fb15af8000, 0xbc05d4a1, 0x8000ffff, 552); 
TEST_RR_OP64_OO( 71 , smulx16, 0x2e08000000008000, 0xa3f0ffff, 0x80008000, 560); 
TEST_RR_OP64_OO( 72 , smulx16, 0x0000000000000000, 0x00000000, 0xeeedffff, 568); 
TEST_RR_OP64_OO( 73 , smulx16, 0x00000000ffffaaa7, 0x0000ffff, 0x55598000, 576); 
TEST_RR_OP64_OO( 74 , smulx16, 0x4000000000000000, 0x80000000, 0xffff8000, 584); 
TEST_RR_OP64_OO( 75 , smulx16, 0x0000673a00000000, 0xffffd2ac, 0x000098c6, 592); 
TEST_RR_OP64_OO( 76 , smulx16, 0x00000001fb4ba0f6, 0xffff0aca, 0x905fffff, 600); 
TEST_RR_OP64_OO( 77 , smulx16, 0x0000000000000000, 0x00000000, 0xe5cb0000, 608); 
TEST_RR_OP64_OO( 78 , smulx16, 0x0000000000000000, 0x0000f60b, 0x0000ee79, 616); 
TEST_RR_OP64_OO( 79 , smulx16, 0x0000000000000000, 0x00008000, 0x0000ffff, 624); 
TEST_RR_OP64_OO( 80 , smulx16, 0x0000000100000000, 0xffff0000, 0x0000ffff, 632); 
TEST_RR_OP64_OO( 81 , smulx16, 0x0000000040000000, 0xffff8000, 0x80000000, 640); 
TEST_RR_OP64_OO( 82 , smulx16, 0x00008000fa300000, 0x80008000, 0x0ba0ffff, 648); 
TEST_RR_OP64_OO( 83 , smulx16, 0x00000000000038a4, 0x0000c75c, 0xffff0000, 656); 
TEST_RR_OP64_OO( 84 , smulx16, 0x4000000000008000, 0x80008000, 0xffff8000, 664); 
TEST_RR_OP64_OO( 85 , smulx16, 0x0000000000008000, 0x00008000, 0xffff92e4, 672); 
TEST_RR_OP64_OO( 86 , smulx16, 0x03548e0a00000000, 0x07468000, 0x00007537, 680); 
TEST_RR_OP64_OO( 87 , smulx16, 0xe802cc8000000001, 0xc032ffff, 0xffff6040, 688); 
TEST_RR_OP64_OO( 88 , smulx16, 0x000061c300000000, 0xffff8000, 0x00009e3d, 696); 
TEST_RR_OP64_OO( 89 , smulx16, 0x00004e0e00000000, 0xb1f28000, 0x0000ffff, 704); 
TEST_RR_OP64_OO( 90 , smulx16, 0x0000634e40000000, 0x9cb28000, 0x8000ffff, 712); 
TEST_RR_OP64_OO( 91 , smulx16, 0x4000000000000000, 0x80008000, 0x00008000, 720); 
TEST_RR_OP64_OO( 92 , smulx16, 0x0000800000000000, 0x80009567, 0x0000ffff, 728); 
TEST_RR_OP64_OO( 93 , smulx16, 0x0000491000008000, 0xffff8000, 0xffffb6f0, 736); 
TEST_RR_OP64_OO( 94 , smulx16, 0xdff08000d64a0000, 0x8000536c, 0x8000401f, 744); 
TEST_RR_OP64_OO( 95 , smulx16, 0x4000000000000000, 0x80000000, 0x80008000, 752); 
TEST_RR_OP64_OO( 96 , smulx16, 0x0000800000000001, 0x8000ffff, 0xffffffff, 760); 
TEST_RR_OP64_OO( 97 , smulx16, 0x0000000000004c9a, 0x0000b366, 0xffffa8e8, 768); 
TEST_RR_OP64_OO( 98 , smulx16, 0x4000000000000000, 0x80000000, 0x80008000, 776); 
TEST_RR_OP64_OO( 99 , smulx16, 0x0000000000008000, 0x0000ffff, 0x80008000, 784); 
TEST_RR_OP64_OO( 100 , smulx16, 0xe1c2800000000000, 0x80000000, 0xffff3c7b, 792); 
TEST_RR_OP64_OO( 101 , smulx16, 0x0000000000000000, 0x00008000, 0x00000000, 800); 
TEST_RR_OP64_OO( 102 , smulx16, 0xd4838000ffffd4d8, 0x80002b28, 0xffff56f9, 808); 
TEST_RR_OP64_OO( 103 , smulx16, 0x400000000d660000, 0x8000e534, 0x80008000, 816); 
TEST_RR_OP64_OO( 104 , smulx16, 0x0000800000000000, 0x8000d2cf, 0x0000ffff, 824); 
TEST_RR_OP64_OO( 105 , smulx16, 0x0000000100008000, 0xffff8000, 0xffffffff, 832); 
TEST_RR_OP64_OO( 106 , smulx16, 0x122a0100ffff99c7, 0xdb006639, 0xffff8253, 840); 
TEST_RR_OP64_OO( 107 , smulx16, 0x00000000d8680000, 0x00004f30, 0x8000d149, 848); 
TEST_RR_OP64_OO( 108 , smulx16, 0xffffab4900000001, 0x54b7ffff, 0xffffffff, 856); 
TEST_RR_OP64_OO( 109 , smulx16, 0x00000000f8aa0000, 0x00008000, 0x0eac0000, 864); 
TEST_RR_OP64_OO( 110 , smulx16, 0x4000000040000000, 0x80008000, 0x80008000, 872); 
TEST_RR_OP64_OO( 111 , smulx16, 0x00008000ffff86cf, 0xffffffff, 0x79318000, 880); 
TEST_RR_OP64_OO( 112 , smulx16, 0x016cb62700008000, 0xfc0bffff, 0x8000a3d5, 888); 
TEST_RR_OP64_OO( 113 , smulx16, 0xdfc71ce400000000, 0xae710000, 0x00006524, 896); 
TEST_RR_OP64_OO( 114 , smulx16, 0xffff835e00000000, 0xffff8000, 0x00007ca2, 904); 
TEST_RR_OP64_OO( 115 , smulx16, 0xc4d2000000000000, 0x765c0000, 0xd1d28000, 912); 
TEST_RR_OP64_OO( 116 , smulx16, 0x0000000000000000, 0x00000000, 0xffff8000, 920); 
TEST_RR_OP64_OO( 117 , smulx16, 0x00008000000052f2, 0x8000ad0e, 0xffffffff, 928); 
TEST_RR_OP64_OO( 118 , smulx16, 0x00000000f8820000, 0x00000efc, 0x80000000, 936); 
TEST_RR_OP64_OO( 119 , smulx16, 0x4000000000000000, 0x80000000, 0x80008000, 944); 
TEST_RR_OP64_OO( 120 , smulx16, 0x40000000f9460000, 0x80008000, 0x0d748000, 952); 
TEST_RR_OP64_OO( 121 , smulx16, 0x000000010743f7fa, 0xffffbbb2, 0xe4c5ffff, 960); 
TEST_RR_OP64_OO( 122 , smulx16, 0xd636000000000000, 0x80000000, 0xffff5394, 968); 
TEST_RR_OP64_OO( 123 , smulx16, 0xd2ba800000008000, 0x5a8b8000, 0xffff8000, 976); 
TEST_RR_OP64_OO( 124 , smulx16, 0x20a0346200000001, 0x4185ffff, 0xffff7f7a, 984); 
TEST_RR_OP64_OO( 125 , smulx16, 0x0000000000000000, 0x16c17b59, 0x00000000, 992); 
TEST_RR_OP64_OO( 126 , smulx16, 0x0000000000000000, 0x00008000, 0x0000ffff, 1000); 
TEST_RR_OP64_OO( 127 , smulx16, 0x0000000000000000, 0x00000000, 0x00008000, 1008); 
TEST_RR_OP64_OO( 128 , smulx16, 0xca42800000000000, 0x8000ffff, 0x00006b7b, 1016); 
TEST_RR_OP64_OO( 129 , smulx16, 0x00000000ffffd161, 0x0000ffff, 0x2e9f0000, 1024); 
TEST_RR_OP64_OO( 130 , smulx16, 0x0000000000000000, 0x00000000, 0x71038000, 1032); 
TEST_RR_OP64_OO( 131 , smulx16, 0x00008000333c8000, 0x80009987, 0x8000ffff, 1040); 
TEST_RR_OP64_OO( 132 , smulx16, 0x13411ce0ca438000, 0xb4a06b79, 0x8000be9b, 1048); 
TEST_RR_OP64_OO( 133 , smulx16, 0x0000800000000001, 0xffffffff, 0xffff8000, 1056); 
TEST_RR_OP64_OO( 134 , smulx16, 0x0000000000000000, 0x8000ad22, 0x00000000, 1064); 
TEST_RR_OP64_OO( 135 , smulx16, 0x3079fcb300000000, 0x96978000, 0x00008a45, 1072); 
TEST_RR_OP64_OO( 136 , smulx16, 0x161f000000000000, 0x80000000, 0x78c0d3c2, 1080); 
TEST_RR_OP64_OO( 137 , smulx16, 0x0000000000000001, 0x0000ffff, 0xffff106e, 1088); 
TEST_RR_OP64_OO( 138 , smulx16, 0x4000000000000000, 0x8000ffff, 0x00008000, 1096); 
TEST_RR_OP64_OO( 139 , smulx16, 0xffffc384f36c7780, 0x3c7cd1ad, 0x4580ffff, 1104); 
TEST_RR_OP64_OO( 140 , smulx16, 0x4000000000000001, 0x8000ffff, 0xffff8000, 1112); 
TEST_RR_OP64_OO( 141 , smulx16, 0x0000000000000000, 0x00000000, 0xffff0000, 1120); 
TEST_RR_OP64_OO( 142 , smulx16, 0x0000800000000000, 0xffffffff, 0x00008000, 1128); 
TEST_RR_OP64_OO( 143 , smulx16, 0x0000000040000000, 0x00008000, 0x800099af, 1136); 
TEST_RR_OP64_OO( 144 , smulx16, 0x0000800000000000, 0xffff0000, 0x00008000, 1144); 
TEST_RR_OP64_OO( 145 , smulx16, 0x4000000000000000, 0x80000000, 0x80008000, 1152); 
TEST_RR_OP64_OO( 146 , smulx16, 0x4000000000000000, 0x80002109, 0x00008000, 1160); 
TEST_RR_OP64_OO( 147 , smulx16, 0x4000000000000000, 0x80004fb1, 0x00008000, 1168); 
TEST_RR_OP64_OO( 148 , smulx16, 0x0000681700000000, 0xffff0000, 0x28c897e9, 1176); 
TEST_RR_OP64_OO( 149 , smulx16, 0x000000003c3b8000, 0x00008789, 0x8000ffff, 1184); 
TEST_RR_OP64_OO( 150 , smulx16, 0xf46d06bcfc0da6bc, 0x173b8fef, 0x09048074, 1192); 
TEST_RR_OP64_OO( 151 , smulx16, 0xffffe6fe40000000, 0xffff8000, 0x80001902, 1200); 
TEST_RR_OP64_OO( 152 , smulx16, 0x00008000ffec0000, 0x80008000, 0x0028ffff, 1208); 
TEST_RR_OP64_OO( 153 , smulx16, 0x0000000000008000, 0x0000ffff, 0x8000ffff, 1216); 
TEST_RR_OP64_OO( 154 , smulx16, 0x0000000014ad0000, 0xffff8000, 0xd6a60000, 1224); 
TEST_RR_OP64_OO( 155 , smulx16, 0x0000800011ca7683, 0xffff3623, 0x54218000, 1232); 
TEST_RR_OP64_OO( 156 , smulx16, 0x0000000100008000, 0xffffffff, 0x8000ffff, 1240); 
TEST_RR_OP64_OO( 157 , smulx16, 0x0000000040000000, 0x00008000, 0x8000090f, 1248); 
TEST_RR_OP64_OO( 158 , smulx16, 0x00007c380000406a, 0xffffbf96, 0xffff83c8, 1256); 
TEST_RR_OP64_OO( 159 , smulx16, 0x1e3b800000002364, 0xc389dc9c, 0xffff8000, 1264); 
TEST_RR_OP64_OO( 160 , smulx16, 0x000000000fd48000, 0x80008000, 0xe0570000, 1272); 
TEST_RR_OP64_OO( 161 , smulx16, 0x00008000fffffbcf, 0xffff0431, 0xffff8000, 1280); 
TEST_RR_OP64_OO( 162 , smulx16, 0x000000000c038000, 0x00008000, 0xe7f98000, 1288); 
TEST_RR_OP64_OO( 163 , smulx16, 0x0000000100000000, 0xffff8000, 0x0000ffff, 1296); 
TEST_RR_OP64_OO( 164 , smulx16, 0x0000000100000000, 0xffff917e, 0x0000ffff, 1304); 
TEST_RR_OP64_OO( 165 , smulx16, 0x00008000fe9ece50, 0x80002f7d, 0xf890ffff, 1312); 
TEST_RR_OP64_OO( 166 , smulx16, 0x19a26e8000000000, 0x6e4b0000, 0x80bd3b80, 1320); 
TEST_RR_OP64_OO( 167 , smulx16, 0x0000000000008000, 0x0000ffff, 0x80000000, 1328); 
TEST_RR_OP64_OO( 168 , smulx16, 0x00000000ffffdd4a, 0x000022b6, 0xffff0000, 1336); 
TEST_RR_OP64_OO( 169 , smulx16, 0x0000000000000000, 0xffffffff, 0x00000000, 1344); 
TEST_RR_OP64_OO( 170 , smulx16, 0xcab3000000000000, 0x6a9a0000, 0x80008000, 1352); 
TEST_RR_OP64_OO( 171 , smulx16, 0x0000800040000000, 0x80008000, 0x8000ffff, 1360); 
TEST_RR_OP64_OO( 172 , smulx16, 0x0000000015cc13d3, 0xffffa01f, 0xc5cd0000, 1368); 
TEST_RR_OP64_OO( 173 , smulx16, 0x0000000000000001, 0x0000ffff, 0xffff8000, 1376); 
TEST_RR_OP64_OO( 174 , smulx16, 0x4000000000008000, 0x80008000, 0xffff8000, 1384); 
TEST_RR_OP64_OO( 175 , smulx16, 0x00000000ffff9330, 0xa8d06cd0, 0xffff0000, 1392); 
TEST_RR_OP64_OO( 176 , smulx16, 0x0000800000000000, 0x80000000, 0x8000ffff, 1400); 
TEST_RR_OP64_OO( 177 , smulx16, 0x0000000000000000, 0x00008000, 0x0000996f, 1408); 
TEST_RR_OP64_OO( 178 , smulx16, 0x0000000000000001, 0x0000ffff, 0xffff5bcc, 1416); 
TEST_RR_OP64_OO( 179 , smulx16, 0x0000000000008000, 0x00008000, 0xffffffff, 1424); 
TEST_RR_OP64_OO( 180 , smulx16, 0xffffdc5e00000001, 0xffffffff, 0xffff23a2, 1432); 
TEST_RR_OP64_OO( 181 , smulx16, 0xefd2c18100005659, 0xae6bffff, 0xa9a732c3, 1440); 
TEST_RR_OP64_OO( 182 , smulx16, 0x15e5000000000000, 0xd4360000, 0xffff8000, 1448); 
TEST_RR_OP64_OO( 183 , smulx16, 0x229890ba06c3e5eb, 0x45f711e9, 0x60b37e96, 1456); 
TEST_RR_OP64_OO( 184 , smulx16, 0x0000000000000000, 0x00000000, 0xffff6e04, 1464); 
TEST_RR_OP64_OO( 185 , smulx16, 0x4000000000000000, 0x80000000, 0x00008000, 1472); 
TEST_RR_OP64_OO( 186 , smulx16, 0xffff8d9e0000121b, 0xffffffff, 0xede57262, 1480); 
TEST_RR_OP64_OO( 187 , smulx16, 0x0000800000000000, 0x80000000, 0xdec0ffff, 1488); 
TEST_RR_OP64_OO( 188 , smulx16, 0x00001faf00000000, 0xe0510000, 0x2c6affff, 1496); 
TEST_RR_OP64_OO( 189 , smulx16, 0x00000000f83784f5, 0x0000ebf7, 0x63738000, 1504); 
TEST_RR_OP64_OO( 190 , smulx16, 0xffffa9bb00000001, 0x5645ffff, 0xffffffff, 1512); 
TEST_RR_OP64_OO( 191 , smulx16, 0x0000000007c4bbed, 0x8000d117, 0xd59b0000, 1520); 
TEST_RR_OP64_OO( 192 , smulx16, 0x00000001000071b5, 0xffff8e4b, 0xffffffff, 1528); 
TEST_RR_OP64_OO( 193 , smulx16, 0x0000000100000000, 0xffff17f1, 0x0000ffff, 1536); 
TEST_RR_OP64_OO( 194 , smulx16, 0x00000000e1608000, 0x00008000, 0x3d3f8000, 1544); 
TEST_RR_OP64_OO( 195 , smulx16, 0xfe17a6bfdb1c8000, 0xa11349c7, 0x80000525, 1552); 
TEST_RR_OP64_OO( 196 , smulx16, 0xf8e7380500000000, 0xef790000, 0x75196ded, 1560); 
TEST_RR_OP64_OO( 197 , smulx16, 0x4000000000000000, 0x80000000, 0x80008000, 1568); 
TEST_RR_OP64_OO( 198 , smulx16, 0x0000000000000000, 0x948b0000, 0x80000000, 1576); 
TEST_RR_OP64_OO( 199 , smulx16, 0x0000800000000000, 0xffff0000, 0x12858000, 1584); 

  #-------------------------------------------------------------
  # Bypassing tests
  #-------------------------------------------------------------


TEST_PASSFAIL

RV_COMPLIANCE_CODE_END

.data

RV_COMPLIANCE_DATA_BEGIN
test_res:
    .fill 398, 4, -1
RV_COMPLIANCE_DATA_END