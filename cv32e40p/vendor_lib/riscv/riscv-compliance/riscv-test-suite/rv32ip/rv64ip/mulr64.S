# See LICENSE for license details.
#*****************************************************************************
# mulr64.S
#-----------------------------------------------------------------------------
#
# Test add instruction.
#


#include "riscv_test.h"
#include "compliance_test.h"
#include "compliance_io.h"
#include "aw_test_macros.h"

RVTEST_RV64U
RV_COMPLIANCE_CODE_BEGIN

  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------

TEST_RR_OP64_OO( 2 , mulr64, 0x176280c969203eec, 0x205d1884, 0xb8f9e25b , 8); 
TEST_RR_OP64_OO( 3 , mulr64, 0x614c6d379eb392c8, 0x614c6d38, 0xffffffff , 16); 
TEST_RR_OP64_OO( 4 , mulr64, 0x73af10598c50efa6, 0x73af105a, 0xffffffff , 24); 
TEST_RR_OP64_OO( 5 , mulr64, 0x8c8b2b66e50f0fa4, 0xb4b103d4, 0xc71e8ea5 , 32); 
TEST_RR_OP64_OO( 6 , mulr64, 0xb87d30f94782cf06, 0xffffffff, 0xb87d30fa , 40); 
TEST_RR_OP64_OO( 7 , mulr64, 0x7fffffff80000000, 0x80000000, 0xffffffff , 48); 
TEST_RR_OP64_OO( 8 , mulr64, 0x657f56fd34b1f590, 0x97929ce8, 0xab6cc7da , 56); 
TEST_RR_OP64_OO( 9 , mulr64, 0xff2fe59600d01a69, 0xff2fe597, 0xffffffff , 64); 
TEST_RR_OP64_OO( 10 , mulr64, 0x4000000000000000, 0x80000000, 0x80000000 , 72); 
TEST_RR_OP64_OO( 11 , mulr64, 0xfffffffe00000001, 0xffffffff, 0xffffffff , 80); 
TEST_RR_OP64_OO( 12 , mulr64, 0x7fffffff80000000, 0xffffffff, 0x80000000 , 88); 
TEST_RR_OP64_OO( 13 , mulr64, 0x32c20ec779027371, 0x4c1868b3, 0xaac29d4b , 96); 
TEST_RR_OP64_OO( 14 , mulr64, 0x7fffffff80000000, 0xffffffff, 0x80000000 , 104); 
TEST_RR_OP64_OO( 15 , mulr64, 0x3d455adb00000000, 0x80000000, 0x7a8ab5b6 , 112); 
TEST_RR_OP64_OO( 16 , mulr64, 0x1039694d00000000, 0x2072d29a, 0x80000000 , 120); 
TEST_RR_OP64_OO( 17 , mulr64, 0x0000000000000000, 0x642eb9cf, 0x00000000 , 128); 
TEST_RR_OP64_OO( 18 , mulr64, 0x0000000000000000, 0xcc1afb1d, 0x00000000 , 136); 
TEST_RR_OP64_OO( 19 , mulr64, 0x0000000000000000, 0x80000000, 0x00000000 , 144); 
TEST_RR_OP64_OO( 20 , mulr64, 0x0000000000000000, 0x00000000, 0x00000000 , 152); 
TEST_RR_OP64_OO( 21 , mulr64, 0x4000000000000000, 0x80000000, 0x80000000 , 160); 
TEST_RR_OP64_OO( 22 , mulr64, 0x0000000000000000, 0x00000000, 0xcd732372 , 168); 
TEST_RR_OP64_OO( 23 , mulr64, 0xfffffffe00000001, 0xffffffff, 0xffffffff , 176); 
TEST_RR_OP64_OO( 24 , mulr64, 0x0000000000000000, 0x00000000, 0x00000000 , 184); 
TEST_RR_OP64_OO( 25 , mulr64, 0x7fffffff80000000, 0xffffffff, 0x80000000 , 192); 
TEST_RR_OP64_OO( 26 , mulr64, 0xfffffffe00000001, 0xffffffff, 0xffffffff , 200); 
TEST_RR_OP64_OO( 27 , mulr64, 0x7fffffff80000000, 0xffffffff, 0x80000000 , 208); 
TEST_RR_OP64_OO( 28 , mulr64, 0xf813516e07ecae91, 0xf813516f, 0xffffffff , 216); 
TEST_RR_OP64_OO( 29 , mulr64, 0x0000000000000000, 0x00000000, 0x00000000 , 224); 
TEST_RR_OP64_OO( 30 , mulr64, 0x0000000000000000, 0x00000000, 0xffffffff , 232); 
TEST_RR_OP64_OO( 31 , mulr64, 0x0000000000000000, 0x00000000, 0x1d22863e , 240); 
TEST_RR_OP64_OO( 32 , mulr64, 0x605b82ae9fa47d51, 0x605b82af, 0xffffffff , 248); 
TEST_RR_OP64_OO( 33 , mulr64, 0x77f8636788079c98, 0x77f86368, 0xffffffff , 256); 
TEST_RR_OP64_OO( 34 , mulr64, 0x49fe494bda634a1c, 0x591abce4, 0xd495cfbf , 264); 
TEST_RR_OP64_OO( 35 , mulr64, 0xab497d2754b682d8, 0xab497d28, 0xffffffff , 272); 
TEST_RR_OP64_OO( 36 , mulr64, 0x1ac9522de536add2, 0x1ac9522e, 0xffffffff , 280); 
TEST_RR_OP64_OO( 37 , mulr64, 0xfffffffe00000001, 0xffffffff, 0xffffffff , 288); 
TEST_RR_OP64_OO( 38 , mulr64, 0x0000000000000000, 0xffffffff, 0x00000000 , 296); 
TEST_RR_OP64_OO( 39 , mulr64, 0x1eaff171df9ddc74, 0x24f56544, 0xd48f8e0d , 304); 
TEST_RR_OP64_OO( 40 , mulr64, 0x7fffffff80000000, 0x80000000, 0xffffffff , 312); 
TEST_RR_OP64_OO( 41 , mulr64, 0x0000000000000000, 0xffffffff, 0x00000000 , 320); 
TEST_RR_OP64_OO( 42 , mulr64, 0x0000000000000000, 0xffffffff, 0x00000000 , 328); 
TEST_RR_OP64_OO( 43 , mulr64, 0x797849238687b6dc, 0x79784924, 0xffffffff , 336); 
TEST_RR_OP64_OO( 44 , mulr64, 0x0000000000000000, 0x00000000, 0x00000000 , 344); 
TEST_RR_OP64_OO( 45 , mulr64, 0x0000000000000000, 0x00000000, 0xce18ab3a , 352); 
TEST_RR_OP64_OO( 46 , mulr64, 0x0000000000000000, 0x00000000, 0xffffffff , 360); 
TEST_RR_OP64_OO( 47 , mulr64, 0x7fffffff80000000, 0xffffffff, 0x80000000 , 368); 
TEST_RR_OP64_OO( 48 , mulr64, 0x0000000000000000, 0x00000000, 0x21a386aa , 376); 
TEST_RR_OP64_OO( 49 , mulr64, 0x48e515c180000000, 0x80000000, 0x91ca2b83 , 384); 
TEST_RR_OP64_OO( 50 , mulr64, 0xfffffffe00000001, 0xffffffff, 0xffffffff , 392); 
TEST_RR_OP64_OO( 51 , mulr64, 0xb4a8f2254b570dda, 0xffffffff, 0xb4a8f226 , 400); 
TEST_RR_OP64_OO( 52 , mulr64, 0x7bc426e155947222, 0xd44ae3ba, 0x953f62c5 , 408); 
TEST_RR_OP64_OO( 53 , mulr64, 0x0000000000000000, 0x00000000, 0x00000000 , 416); 
TEST_RR_OP64_OO( 54 , mulr64, 0x0000000000000000, 0x91e6b2f0, 0x00000000 , 424); 
TEST_RR_OP64_OO( 55 , mulr64, 0x466f7d781c386bd9, 0x71bf59f3, 0x9e85aa03 , 432); 
TEST_RR_OP64_OO( 56 , mulr64, 0x7fffffff80000000, 0x80000000, 0xffffffff , 440); 
TEST_RR_OP64_OO( 57 , mulr64, 0x0000000000000000, 0x00000000, 0xffffffff , 448); 
TEST_RR_OP64_OO( 58 , mulr64, 0x7fffffff80000000, 0x80000000, 0xffffffff , 456); 
TEST_RR_OP64_OO( 59 , mulr64, 0x0000000000000000, 0x00000000, 0x80000000 , 464); 
TEST_RR_OP64_OO( 60 , mulr64, 0x0d7f078580000000, 0x1afe0f0b, 0x80000000 , 472); 
TEST_RR_OP64_OO( 61 , mulr64, 0x7fffffff80000000, 0x80000000, 0xffffffff , 480); 
TEST_RR_OP64_OO( 62 , mulr64, 0xc7c4c257383b3da8, 0xc7c4c258, 0xffffffff , 488); 
TEST_RR_OP64_OO( 63 , mulr64, 0x0000000000000000, 0x00000000, 0x00c236a9 , 496); 
TEST_RR_OP64_OO( 64 , mulr64, 0x0000000000000000, 0x00000000, 0x4552cee1 , 504); 
TEST_RR_OP64_OO( 65 , mulr64, 0x0000000000000000, 0x00000000, 0x80000000 , 512); 
TEST_RR_OP64_OO( 66 , mulr64, 0x4000000000000000, 0x80000000, 0x80000000 , 520); 
TEST_RR_OP64_OO( 67 , mulr64, 0x7fdfe94100000000, 0x80000000, 0xffbfd282 , 528); 
TEST_RR_OP64_OO( 68 , mulr64, 0x1af14db5e50eb24a, 0x1af14db6, 0xffffffff , 536); 
TEST_RR_OP64_OO( 69 , mulr64, 0x0000000000000000, 0x19112120, 0x00000000 , 544); 
TEST_RR_OP64_OO( 70 , mulr64, 0x0233b93600000000, 0x0467726c, 0x80000000 , 552); 
TEST_RR_OP64_OO( 71 , mulr64, 0xfffffffe00000001, 0xffffffff, 0xffffffff , 560); 
TEST_RR_OP64_OO( 72 , mulr64, 0x0000000000000000, 0x00000000, 0xffffffff , 568); 
TEST_RR_OP64_OO( 73 , mulr64, 0x0000000000000000, 0xffffffff, 0x00000000 , 576); 
TEST_RR_OP64_OO( 74 , mulr64, 0x0000000000000000, 0x00000000, 0xffffffff , 584); 
TEST_RR_OP64_OO( 75 , mulr64, 0x26a336c17d690a48, 0x3ea8b696, 0x9ddb94ec , 592); 
TEST_RR_OP64_OO( 76 , mulr64, 0x7fffffff80000000, 0xffffffff, 0x80000000 , 600); 
TEST_RR_OP64_OO( 77 , mulr64, 0x7fffffff80000000, 0xffffffff, 0x80000000 , 608); 
TEST_RR_OP64_OO( 78 , mulr64, 0x0000000000000000, 0x00000000, 0xffffffff , 616); 
TEST_RR_OP64_OO( 79 , mulr64, 0x0000000000000000, 0x00000000, 0xffffffff , 624); 
TEST_RR_OP64_OO( 80 , mulr64, 0x7706793e00000000, 0xee0cf27c, 0x80000000 , 632); 
TEST_RR_OP64_OO( 81 , mulr64, 0x0000000000000000, 0x00000000, 0xffffffff , 640); 
TEST_RR_OP64_OO( 82 , mulr64, 0x0000000000000000, 0x00000000, 0x80000000 , 648); 
TEST_RR_OP64_OO( 83 , mulr64, 0x14852e03857df0d0, 0x7d709b92, 0x29e0c928 , 656); 
TEST_RR_OP64_OO( 84 , mulr64, 0xfffffffe00000001, 0xffffffff, 0xffffffff , 664); 
TEST_RR_OP64_OO( 85 , mulr64, 0x0000000000000000, 0x00000000, 0x80000000 , 672); 
TEST_RR_OP64_OO( 86 , mulr64, 0x0000000000000000, 0xffffffff, 0x00000000 , 680); 
TEST_RR_OP64_OO( 87 , mulr64, 0x6f61281b80000000, 0xdec25037, 0x80000000 , 688); 
TEST_RR_OP64_OO( 88 , mulr64, 0x1d3355c200000000, 0x3a66ab84, 0x80000000 , 696); 
TEST_RR_OP64_OO( 89 , mulr64, 0x0000000000000000, 0xffffffff, 0x00000000 , 704); 
TEST_RR_OP64_OO( 90 , mulr64, 0x4000000000000000, 0x80000000, 0x80000000 , 712); 
TEST_RR_OP64_OO( 91 , mulr64, 0x3769644100000000, 0x6ed2c882, 0x80000000 , 720); 
TEST_RR_OP64_OO( 92 , mulr64, 0x0000000000000000, 0x80000000, 0x00000000 , 728); 
TEST_RR_OP64_OO( 93 , mulr64, 0x086e5cd19e0b7e88, 0x0ca54052, 0xaaae9da4 , 736); 
TEST_RR_OP64_OO( 94 , mulr64, 0x0000000000000000, 0x00000000, 0xffffffff , 744); 
TEST_RR_OP64_OO( 95 , mulr64, 0x0000000000000000, 0xffffffff, 0x00000000 , 752); 
TEST_RR_OP64_OO( 96 , mulr64, 0x0000000000000000, 0x00000000, 0x00000000 , 760); 
TEST_RR_OP64_OO( 97 , mulr64, 0x0000000000000000, 0x00000000, 0x00000000 , 768); 
TEST_RR_OP64_OO( 98 , mulr64, 0x4000000000000000, 0x80000000, 0x80000000 , 776); 
TEST_RR_OP64_OO( 99 , mulr64, 0x1d845c0b00000000, 0x80000000, 0x3b08b816 , 784); 
TEST_RR_OP64_OO( 100 , mulr64, 0x0000000000000000, 0x00000000, 0xffffffff , 792); 
TEST_RR_OP64_OO( 101 , mulr64, 0xfffffffe00000001, 0xffffffff, 0xffffffff , 800); 
TEST_RR_OP64_OO( 102 , mulr64, 0x7fffffff80000000, 0xffffffff, 0x80000000 , 808); 
TEST_RR_OP64_OO( 103 , mulr64, 0x8ed67142248f4185, 0xe357a5cd, 0xa0d7d299 , 816); 
TEST_RR_OP64_OO( 104 , mulr64, 0xfffffffe00000001, 0xffffffff, 0xffffffff , 824); 
TEST_RR_OP64_OO( 105 , mulr64, 0x0000000000000000, 0xffffffff, 0x00000000 , 832); 
TEST_RR_OP64_OO( 106 , mulr64, 0x7fffffff80000000, 0xffffffff, 0x80000000 , 840); 
TEST_RR_OP64_OO( 107 , mulr64, 0x0000000000000000, 0x00000000, 0x00000000 , 848); 
TEST_RR_OP64_OO( 108 , mulr64, 0x0000000000000000, 0x1dd3d925, 0x00000000 , 856); 
TEST_RR_OP64_OO( 109 , mulr64, 0x0000000000000000, 0x05d38998, 0x00000000 , 864); 
TEST_RR_OP64_OO( 110 , mulr64, 0x0000000000000000, 0x00000000, 0x8efa44f3 , 872); 
TEST_RR_OP64_OO( 111 , mulr64, 0x7fffffff80000000, 0xffffffff, 0x80000000 , 880); 
TEST_RR_OP64_OO( 112 , mulr64, 0x0000000000000000, 0x00000000, 0xffffffff , 888); 
TEST_RR_OP64_OO( 113 , mulr64, 0x0000000000000000, 0x00000000, 0x80000000 , 896); 
TEST_RR_OP64_OO( 114 , mulr64, 0x7fffffff80000000, 0x80000000, 0xffffffff , 904); 
TEST_RR_OP64_OO( 115 , mulr64, 0x0000000000000000, 0x80000000, 0x00000000 , 912); 
TEST_RR_OP64_OO( 116 , mulr64, 0x0000000000000000, 0x00000000, 0x00000000 , 920); 
TEST_RR_OP64_OO( 117 , mulr64, 0x0000000000000000, 0xffffffff, 0x00000000 , 928); 
TEST_RR_OP64_OO( 118 , mulr64, 0x7fffffff80000000, 0x80000000, 0xffffffff , 936); 
TEST_RR_OP64_OO( 119 , mulr64, 0x732737d800000000, 0xe64e6fb0, 0x80000000 , 944); 
TEST_RR_OP64_OO( 120 , mulr64, 0x0000000000000000, 0x00000000, 0x55dbb04e , 952); 
TEST_RR_OP64_OO( 121 , mulr64, 0x0000000000000000, 0xffffffff, 0x00000000 , 960); 
TEST_RR_OP64_OO( 122 , mulr64, 0x0000000000000000, 0xccbafccd, 0x00000000 , 968); 
TEST_RR_OP64_OO( 123 , mulr64, 0x7fffffff80000000, 0xffffffff, 0x80000000 , 976); 
TEST_RR_OP64_OO( 124 , mulr64, 0x0000000000000000, 0x00000000, 0xffffffff , 984); 
TEST_RR_OP64_OO( 125 , mulr64, 0x4000000000000000, 0x80000000, 0x80000000 , 992); 
TEST_RR_OP64_OO( 126 , mulr64, 0xd3038a945dad4670, 0xe6e76eb0, 0xe9f2b175 , 1000); 
TEST_RR_OP64_OO( 127 , mulr64, 0x0000000000000000, 0x00000000, 0x477a8ceb , 1008); 
TEST_RR_OP64_OO( 128 , mulr64, 0x0000000000000000, 0x80000000, 0x00000000 , 1016); 
TEST_RR_OP64_OO( 129 , mulr64, 0x58918d4780000000, 0xb1231a8f, 0x80000000 , 1024); 
TEST_RR_OP64_OO( 130 , mulr64, 0x2a5a5c2a7600b178, 0x3253c63e, 0xd76febc4 , 1032); 
TEST_RR_OP64_OO( 131 , mulr64, 0x0000000000000000, 0x80000000, 0x00000000 , 1040); 
TEST_RR_OP64_OO( 132 , mulr64, 0x7fffffff80000000, 0x80000000, 0xffffffff , 1048); 
TEST_RR_OP64_OO( 133 , mulr64, 0x0000000000000000, 0xffffffff, 0x00000000 , 1056); 
TEST_RR_OP64_OO( 134 , mulr64, 0xfffffffe00000001, 0xffffffff, 0xffffffff , 1064); 
TEST_RR_OP64_OO( 135 , mulr64, 0x707b6bf000000000, 0xe0f6d7e0, 0x80000000 , 1072); 
TEST_RR_OP64_OO( 136 , mulr64, 0x0000000000000000, 0x1ad69dca, 0x00000000 , 1080); 
TEST_RR_OP64_OO( 137 , mulr64, 0x03068197fcf97e68, 0x03068198, 0xffffffff , 1088); 
TEST_RR_OP64_OO( 138 , mulr64, 0x7fffffff80000000, 0xffffffff, 0x80000000 , 1096); 
TEST_RR_OP64_OO( 139 , mulr64, 0x0000000000000000, 0x80000000, 0x00000000 , 1104); 
TEST_RR_OP64_OO( 140 , mulr64, 0x3970298080000000, 0x72e05301, 0x80000000 , 1112); 
TEST_RR_OP64_OO( 141 , mulr64, 0x0000000000000000, 0x80000000, 0x00000000 , 1120); 
TEST_RR_OP64_OO( 142 , mulr64, 0x7fffffff80000000, 0x80000000, 0xffffffff , 1128); 
TEST_RR_OP64_OO( 143 , mulr64, 0xc3766c743c89938b, 0xc3766c75, 0xffffffff , 1136); 
TEST_RR_OP64_OO( 144 , mulr64, 0x0000000000000000, 0x00000000, 0x80000000 , 1144); 
TEST_RR_OP64_OO( 145 , mulr64, 0x78fb36028704c9fd, 0x78fb3603, 0xffffffff , 1152); 
TEST_RR_OP64_OO( 146 , mulr64, 0x0000000000000000, 0x80000000, 0x00000000 , 1160); 
TEST_RR_OP64_OO( 147 , mulr64, 0x0000000000000000, 0xffffffff, 0x00000000 , 1168); 
TEST_RR_OP64_OO( 148 , mulr64, 0x031d45fe80000000, 0x063a8bfd, 0x80000000 , 1176); 
TEST_RR_OP64_OO( 149 , mulr64, 0x0000000000000000, 0x00000000, 0x295d118b , 1184); 
TEST_RR_OP64_OO( 150 , mulr64, 0x4e3a1d7d80000000, 0x9c743afb, 0x80000000 , 1192); 
TEST_RR_OP64_OO( 151 , mulr64, 0x0000000000000000, 0x00000000, 0x80000000 , 1200); 
TEST_RR_OP64_OO( 152 , mulr64, 0x0000000000000000, 0x7592ab10, 0x00000000 , 1208); 
TEST_RR_OP64_OO( 153 , mulr64, 0xd51887882ae77877, 0xffffffff, 0xd5188789 , 1216); 
TEST_RR_OP64_OO( 154 , mulr64, 0x0000000000000000, 0x00000000, 0x0bcc4c0c , 1224); 
TEST_RR_OP64_OO( 155 , mulr64, 0x4000000000000000, 0x80000000, 0x80000000 , 1232); 
TEST_RR_OP64_OO( 156 , mulr64, 0xfffffffe00000001, 0xffffffff, 0xffffffff , 1240); 
TEST_RR_OP64_OO( 157 , mulr64, 0x0000000000000000, 0x00000000, 0xb4879259 , 1248); 
TEST_RR_OP64_OO( 158 , mulr64, 0x7fffffff80000000, 0x80000000, 0xffffffff , 1256); 
TEST_RR_OP64_OO( 159 , mulr64, 0x02e6a86c80000000, 0x05cd50d9, 0x80000000 , 1264); 
TEST_RR_OP64_OO( 160 , mulr64, 0x00d10c5680000000, 0x01a218ad, 0x80000000 , 1272); 
TEST_RR_OP64_OO( 161 , mulr64, 0x2fe51ac080000000, 0x80000000, 0x5fca3581 , 1280); 
TEST_RR_OP64_OO( 162 , mulr64, 0x0cadb904136e5cc8, 0x0f99dd6f, 0xd00b9bb8 , 1288); 
TEST_RR_OP64_OO( 163 , mulr64, 0x7fffffff80000000, 0x80000000, 0xffffffff , 1296); 
TEST_RR_OP64_OO( 164 , mulr64, 0x0000000000000000, 0x00000000, 0xb6f552ee , 1304); 
TEST_RR_OP64_OO( 165 , mulr64, 0x7fffffff80000000, 0xffffffff, 0x80000000 , 1312); 
TEST_RR_OP64_OO( 166 , mulr64, 0x0000000000000000, 0x00000000, 0xffffffff , 1320); 
TEST_RR_OP64_OO( 167 , mulr64, 0x40e12b26bf1ed4d9, 0x40e12b27, 0xffffffff , 1328); 
TEST_RR_OP64_OO( 168 , mulr64, 0x4000000000000000, 0x80000000, 0x80000000 , 1336); 
TEST_RR_OP64_OO( 169 , mulr64, 0x4000000000000000, 0x80000000, 0x80000000 , 1344); 
TEST_RR_OP64_OO( 170 , mulr64, 0x0000000000000000, 0xffffffff, 0x00000000 , 1352); 
TEST_RR_OP64_OO( 171 , mulr64, 0xcfbe42203041bddf, 0xcfbe4221, 0xffffffff , 1360); 
TEST_RR_OP64_OO( 172 , mulr64, 0x0000000000000000, 0x80000000, 0x00000000 , 1368); 
TEST_RR_OP64_OO( 173 , mulr64, 0x0000000000000000, 0x00000000, 0xffffffff , 1376); 
TEST_RR_OP64_OO( 174 , mulr64, 0x4000000000000000, 0x80000000, 0x80000000 , 1384); 
TEST_RR_OP64_OO( 175 , mulr64, 0x7fffffff80000000, 0x80000000, 0xffffffff , 1392); 
TEST_RR_OP64_OO( 176 , mulr64, 0x0000000000000000, 0xffffffff, 0x00000000 , 1400); 
TEST_RR_OP64_OO( 177 , mulr64, 0x0000000000000000, 0xffffffff, 0x00000000 , 1408); 
TEST_RR_OP64_OO( 178 , mulr64, 0x0000000000000000, 0x80000000, 0x00000000 , 1416); 
TEST_RR_OP64_OO( 179 , mulr64, 0xfffffffe00000001, 0xffffffff, 0xffffffff , 1424); 
TEST_RR_OP64_OO( 180 , mulr64, 0x50fe4a4faf01b5b0, 0xffffffff, 0x50fe4a50 , 1432); 
TEST_RR_OP64_OO( 181 , mulr64, 0x0000000000000000, 0x00000000, 0x00000000 , 1440); 
TEST_RR_OP64_OO( 182 , mulr64, 0x0000000000000000, 0x80000000, 0x00000000 , 1448); 
TEST_RR_OP64_OO( 183 , mulr64, 0x0000000000000000, 0x00000000, 0xffffffff , 1456); 
TEST_RR_OP64_OO( 184 , mulr64, 0x4000000000000000, 0x80000000, 0x80000000 , 1464); 
TEST_RR_OP64_OO( 185 , mulr64, 0x7fffffff80000000, 0x80000000, 0xffffffff , 1472); 
TEST_RR_OP64_OO( 186 , mulr64, 0x4c763a7d80000000, 0x80000000, 0x98ec74fb , 1480); 
TEST_RR_OP64_OO( 187 , mulr64, 0x0000000000000000, 0x00000000, 0x00000000 , 1488); 
TEST_RR_OP64_OO( 188 , mulr64, 0x0000000000000000, 0x4ce03e7e, 0x00000000 , 1496); 
TEST_RR_OP64_OO( 189 , mulr64, 0x0000000000000000, 0x80000000, 0x00000000 , 1504); 
TEST_RR_OP64_OO( 190 , mulr64, 0x0000000000000000, 0x00000000, 0xffffffff , 1512); 
TEST_RR_OP64_OO( 191 , mulr64, 0x5b519fde00000000, 0x80000000, 0xb6a33fbc , 1520); 
TEST_RR_OP64_OO( 192 , mulr64, 0x96041d6d69fbe292, 0x96041d6e, 0xffffffff , 1528); 
TEST_RR_OP64_OO( 193 , mulr64, 0x0000000000000000, 0x1d11efad, 0x00000000 , 1536); 
TEST_RR_OP64_OO( 194 , mulr64, 0x0000000000000000, 0x00000000, 0x00000000 , 1544); 
TEST_RR_OP64_OO( 195 , mulr64, 0xfffffffe00000001, 0xffffffff, 0xffffffff , 1552); 
TEST_RR_OP64_OO( 196 , mulr64, 0x0000000000000000, 0x00000000, 0x00000000 , 1560); 
TEST_RR_OP64_OO( 197 , mulr64, 0xfd586e2402a791db, 0xfd586e25, 0xffffffff , 1568); 
TEST_RR_OP64_OO( 198 , mulr64, 0x0000000000000000, 0x00000000, 0x00000000 , 1576); 
TEST_RR_OP64_OO( 199 , mulr64, 0x3396d4f8cc692b07, 0xffffffff, 0x3396d4f9 , 1584); 

  #-------------------------------------------------------------
  # Bypassing tests
  #-------------------------------------------------------------


TEST_PASSFAIL

RV_COMPLIANCE_CODE_END

.data

RV_COMPLIANCE_DATA_BEGIN
test_res:
    .fill 398, 4, -1
RV_COMPLIANCE_DATA_END