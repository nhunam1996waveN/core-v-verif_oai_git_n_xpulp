# See LICENSE for license details.
#*****************************************************************************
# umul8.S
#-----------------------------------------------------------------------------
#
# Test add instruction.
#


#include "riscv_test.h"
#include "compliance_test.h"
#include "compliance_io.h"
#include "aw_test_macros.h"

RVTEST_RV64U
RV_COMPLIANCE_CODE_BEGIN

  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------

TEST_RR_OP64_OO( 2 , umul8, 0x000000007f800000, 0xff008000, 0x004bff80 , 8); 
TEST_RR_OP64_OO( 3 , umul8, 0x000053fc00000000, 0x006400ff, 0x80d70000 , 16); 
TEST_RR_OP64_OO( 4 , umul8, 0x50af7f8000007a00, 0xffffd4f4, 0x51800080 , 24); 
TEST_RR_OP64_OO( 5 , umul8, 0xfe0100007f804000, 0xffffff80, 0xff008080 , 32); 
TEST_RR_OP64_OO( 6 , umul8, 0x0000220000000000, 0x008800db, 0x8e40ff00 , 40); 
TEST_RR_OP64_OO( 7 , umul8, 0x0000a55a43bc5fa0, 0xffff4460, 0x00a6ffff , 48); 
TEST_RR_OP64_OO( 8 , umul8, 0x7f8000000000a659, 0xff0000ff, 0x808080a7 , 56); 
TEST_RR_OP64_OO( 9 , umul8, 0x000000007b847f80, 0xfe00ff80, 0x00ff7cff , 64); 
TEST_RR_OP64_OO( 10 , umul8, 0x956a7f807f800000, 0xff80ffff, 0x96ff8000 , 72); 
TEST_RR_OP64_OO( 11 , umul8, 0x0000fe011180b04f, 0x00ff80b1, 0xffff23ff , 80); 
TEST_RR_OP64_OO( 12 , umul8, 0x7f80fe0100002fd0, 0xffffff30, 0x80ff00ff , 88); 
TEST_RR_OP64_OO( 13 , umul8, 0xfe0141fc00000000, 0xff520000, 0xffceff00 , 96); 
TEST_RR_OP64_OO( 14 , umul8, 0x000000000000fe01, 0x000000ff, 0x800080ff , 104); 
TEST_RR_OP64_OO( 15 , umul8, 0x7f80906f00000000, 0xffff80ff, 0x80910000 , 112); 
TEST_RR_OP64_OO( 16 , umul8, 0x0000000000000000, 0x0080ff00, 0xe9000000 , 120); 
TEST_RR_OP64_OO( 17 , umul8, 0x00007f8040000000, 0xffff8000, 0x00808000 , 128); 
TEST_RR_OP64_OO( 18 , umul8, 0x42f000000000fe01, 0x7eff00ff, 0x880007ff , 136); 
TEST_RR_OP64_OO( 19 , umul8, 0xad52400000007f80, 0xff8011ff, 0xae800080 , 144); 
TEST_RR_OP64_OO( 20 , umul8, 0x36002ad500000000, 0x802b00ff, 0x6cff0000 , 152); 
TEST_RR_OP64_OO( 21 , umul8, 0xbc430000fd020000, 0xbd00ff82, 0xff80fe00 , 160); 
TEST_RR_OP64_OO( 22 , umul8, 0x0000000030cf0000, 0x0000ffff, 0xff003100 , 168); 
TEST_RR_OP64_OO( 23 , umul8, 0x9b64000000000900, 0xff00ff80, 0x9c800012 , 176); 
TEST_RR_OP64_OO( 24 , umul8, 0xfe014fb000000000, 0xffff0000, 0xff50ffff , 184); 
TEST_RR_OP64_OO( 25 , umul8, 0x0000906f3c544f5b, 0xffff42ef, 0x0091ea55 , 192); 
TEST_RR_OP64_OO( 26 , umul8, 0x5ba40226649b1a4c, 0x5c32ff99, 0xff0b652c , 200); 
TEST_RR_OP64_OO( 27 , umul8, 0x7f80000040001100, 0xff008080, 0x80008022 , 208); 
TEST_RR_OP64_OO( 28 , umul8, 0x4b78400029cf2a48, 0x8c804df6, 0x8a808b2c , 216); 
TEST_RR_OP64_OO( 29 , umul8, 0x7f80000000000000, 0xff000000, 0x8000134e , 224); 
TEST_RR_OP64_OO( 30 , umul8, 0x4000000000000000, 0x80808000, 0x800000ff , 232); 
TEST_RR_OP64_OO( 31 , umul8, 0x00006e8023dc609f, 0x80802461, 0x00ddffff , 240); 
TEST_RR_OP64_OO( 32 , umul8, 0x5e881dc0e51afe01, 0x6eeeffff, 0xdc20e6ff , 248); 
TEST_RR_OP64_OO( 33 , umul8, 0x00007f804000fe01, 0x00ff80ff, 0xff8080ff , 256); 
TEST_RR_OP64_OO( 34 , umul8, 0x000000003d2c3051, 0xff006c39, 0x000091d9 , 264); 
TEST_RR_OP64_OO( 35 , umul8, 0x4000700000007f80, 0x80e00080, 0x808080ff , 272); 
TEST_RR_OP64_OO( 36 , umul8, 0x4000000000006d80, 0x800080db, 0x80800080 , 280); 
TEST_RR_OP64_OO( 37 , umul8, 0x0000b94600003500, 0x00ff0080, 0x00ba466a , 288); 
TEST_RR_OP64_OO( 38 , umul8, 0x0000400040002e02, 0x0080804e, 0x80808097 , 296); 
TEST_RR_OP64_OO( 39 , umul8, 0x230000005e650000, 0x4600b300, 0x80dd8764 , 304); 
TEST_RR_OP64_OO( 40 , umul8, 0x0000000040000000, 0xff008000, 0x00008064 , 312); 
TEST_RR_OP64_OO( 41 , umul8, 0xfe010000d12e0000, 0xff00d200, 0xffffff00 , 320); 
TEST_RR_OP64_OO( 42 , umul8, 0x00007f800000857a, 0x00ff0086, 0x0080a9ff , 328); 
TEST_RR_OP64_OO( 43 , umul8, 0x45ba7f8000000000, 0x46fffa80, 0xff800000 , 336); 
TEST_RR_OP64_OO( 44 , umul8, 0x000000000e80fe01, 0x003b80ff, 0x80001dff , 344); 
TEST_RR_OP64_OO( 45 , umul8, 0x5d800ff000000000, 0x80100000, 0xbbff8000 , 352); 
TEST_RR_OP64_OO( 46 , umul8, 0x6500857a7f800000, 0xcaffff00, 0x80868080 , 360); 
TEST_RR_OP64_OO( 47 , umul8, 0x3a807f8000000000, 0x75ff8000, 0x808000c6 , 368); 
TEST_RR_OP64_OO( 48 , umul8, 0x000000007f800000, 0xffffffff, 0x00008000 , 376); 
TEST_RR_OP64_OO( 49 , umul8, 0x7f80000078870000, 0x8080ff80, 0xff007900 , 384); 
TEST_RR_OP64_OO( 50 , umul8, 0x00007f80946b7f80, 0x6d8095ff, 0x00ffff80 , 392); 
TEST_RR_OP64_OO( 51 , umul8, 0x2cd3000000000000, 0xfffffff9, 0x2d000000 , 400); 
TEST_RR_OP64_OO( 52 , umul8, 0x4000000000000000, 0x8080ff80, 0x80000000 , 408); 
TEST_RR_OP64_OO( 53 , umul8, 0xf20d000000000000, 0xf3000000, 0xffa128e9 , 416); 
TEST_RR_OP64_OO( 54 , umul8, 0xfe014000fe017f80, 0xff80ffff, 0xff80ff80 , 424); 
TEST_RR_OP64_OO( 55 , umul8, 0x400024007f807f80, 0x8048ff80, 0x808080ff , 432); 
TEST_RR_OP64_OO( 56 , umul8, 0x00007f800000fe01, 0xff8080ff, 0x00ff00ff , 440); 
TEST_RR_OP64_OO( 57 , umul8, 0x00007f80370030cf, 0x00806eff, 0xffff8031 , 448); 
TEST_RR_OP64_OO( 58 , umul8, 0x7e8088773f808877, 0xfd8980ff, 0x80ff7f89 , 456); 
TEST_RR_OP64_OO( 59 , umul8, 0x96694000fe017f80, 0x9780ff80, 0xff80ffff , 464); 
TEST_RR_OP64_OO( 60 , umul8, 0x2c00000000002f47, 0x80240031, 0x580080f7 , 472); 
TEST_RR_OP64_OO( 61 , umul8, 0x7f8040005ba4d827, 0xff80ffff, 0x80805cd9 , 480); 
TEST_RR_OP64_OO( 62 , umul8, 0x877800000d800000, 0xff008000, 0x88c71b00 , 488); 
TEST_RR_OP64_OO( 63 , umul8, 0x48b7ee1156a94000, 0xffef5780, 0x49ffff80 , 496); 
TEST_RR_OP64_OO( 64 , umul8, 0x0000fe0100000000, 0x00ff9a00, 0xffff00ff , 504); 
TEST_RR_OP64_OO( 65 , umul8, 0x7f80ac53fe014000, 0x80adff80, 0xffffff80 , 512); 
TEST_RR_OP64_OO( 66 , umul8, 0x000057a8fe014000, 0x0058ff80, 0x80ffff80 , 520); 
TEST_RR_OP64_OO( 67 , umul8, 0x2d00000050007f80, 0x8000a080, 0x5a0080ff , 528); 
TEST_RR_OP64_OO( 68 , umul8, 0x5480000000000000, 0x80ff0000, 0xa9000000 , 536); 
TEST_RR_OP64_OO( 69 , umul8, 0x7f80000000000000, 0xff170000, 0x8000ffdf , 544); 
TEST_RR_OP64_OO( 70 , umul8, 0x0000000000000000, 0x80800000, 0x0000ffff , 552); 
TEST_RR_OP64_OO( 71 , umul8, 0x0000fe012bd40000, 0xd7ff2c00, 0x00ffff80 , 560); 
TEST_RR_OP64_OO( 72 , umul8, 0x7f80000000004980, 0xff000080, 0x8000ff93 , 568); 
TEST_RR_OP64_OO( 73 , umul8, 0x40004000420004c8, 0x80808422, 0x80808024 , 576); 
TEST_RR_OP64_OO( 74 , umul8, 0x0000fe010af50000, 0x00ff0b00, 0x7fffffcd , 584); 
TEST_RR_OP64_OO( 75 , umul8, 0x1f807f8000000000, 0x80ff0080, 0x3f808000 , 592); 
TEST_RR_OP64_OO( 76 , umul8, 0x4000f00f00000000, 0x80ffff00, 0x80f10075 , 600); 
TEST_RR_OP64_OO( 77 , umul8, 0x400000007e806780, 0x80ab80cf, 0x8000fd80 , 608); 
TEST_RR_OP64_OO( 78 , umul8, 0x5480000000007f80, 0x80feff80, 0xa90000ff , 616); 
TEST_RR_OP64_OO( 79 , umul8, 0x728d7f800000fa05, 0x7380ffff, 0xffff00fb , 624); 
TEST_RR_OP64_OO( 80 , umul8, 0x7f8000000000fe01, 0x800080ff, 0xff0000ff , 632); 
TEST_RR_OP64_OO( 81 , umul8, 0x61002c8021b90000, 0xc2595900, 0x80806100 , 640); 
TEST_RR_OP64_OO( 82 , umul8, 0x7b8000007f804000, 0x80cbff80, 0xf7008080 , 648); 
TEST_RR_OP64_OO( 83 , umul8, 0x0000000000007500, 0x00000080, 0xff8000ea , 656); 
TEST_RR_OP64_OO( 84 , umul8, 0x7700000000003ac5, 0x8000003b, 0xee8000ff , 664); 
TEST_RR_OP64_OO( 85 , umul8, 0x4000148000004000, 0x80800080, 0x80298080 , 672); 
TEST_RR_OP64_OO( 86 , umul8, 0x7f807f8000000000, 0xffff7c00, 0x80800087 , 680); 
TEST_RR_OP64_OO( 87 , umul8, 0x00007f800000fe01, 0x008080ff, 0x19ff00ff , 688); 
TEST_RR_OP64_OO( 88 , umul8, 0x659a0000250019e6, 0x66ff4aff, 0xff00801a , 696); 
TEST_RR_OP64_OO( 89 , umul8, 0xfe01000000005580, 0xff0000ab, 0xff800080 , 704); 
TEST_RR_OP64_OO( 90 , umul8, 0x689700004fb00000, 0xffff5000, 0x6900ff25 , 712); 
TEST_RR_OP64_OO( 91 , umul8, 0x16e9728d40000000, 0xff738000, 0x17ff8000 , 720); 
TEST_RR_OP64_OO( 92 , umul8, 0x00001080fe010000, 0x0021ff80, 0x0080ff00 , 728); 
TEST_RR_OP64_OO( 93 , umul8, 0x00000000000047b8, 0x80ff8048, 0x000000ff , 736); 
TEST_RR_OP64_OO( 94 , umul8, 0xfe01000000000000, 0xff000000, 0xff400000 , 744); 
TEST_RR_OP64_OO( 95 , umul8, 0x7f80000000004000, 0x80000080, 0xffff8080 , 752); 
TEST_RR_OP64_OO( 96 , umul8, 0x0000000040800000, 0x00008180, 0x80808000 , 760); 
TEST_RR_OP64_OO( 97 , umul8, 0x000000003980ed12, 0x800080ff, 0x003773ee , 768); 
TEST_RR_OP64_OO( 98 , umul8, 0x7f80288000007f80, 0x8051ffff, 0xff800080 , 776); 
TEST_RR_OP64_OO( 99 , umul8, 0x4b000000fe017f80, 0x9600ffff, 0x8000ff80 , 784); 
TEST_RR_OP64_OO( 100 , umul8, 0xfe01be41fe014d00, 0xffbfff80, 0xffffff9a , 792); 
TEST_RR_OP64_OO( 101 , umul8, 0x7f80fe014000639c, 0xffff8096, 0x80ff80aa , 800); 
TEST_RR_OP64_OO( 102 , umul8, 0xe619986700000000, 0xe79980ff, 0xffff0000 , 808); 
TEST_RR_OP64_OO( 103 , umul8, 0x0000fe0100004c00, 0xffff0098, 0x00ff8080 , 816); 
TEST_RR_OP64_OO( 104 , umul8, 0x0000fe0110bc0000, 0xffff246e, 0x00ff7700 , 824); 
TEST_RR_OP64_OO( 105 , umul8, 0x0000000000000000, 0x5a5600ff, 0x00000d00 , 832); 
TEST_RR_OP64_OO( 106 , umul8, 0xfe017f80478013ec, 0xff808f14, 0xffff80ff , 840); 
TEST_RR_OP64_OO( 107 , umul8, 0x0000fe0100000000, 0x00ff0000, 0x80ff80c9 , 848); 
TEST_RR_OP64_OO( 108 , umul8, 0x7f80160053ac0000, 0xff80ff00, 0x802c54ff , 856); 
TEST_RR_OP64_OO( 109 , umul8, 0x8a757f8000000000, 0x8b800000, 0xffff01ea , 864); 
TEST_RR_OP64_OO( 110 , umul8, 0x0000738c00000000, 0x80748000, 0x00ff00b0 , 872); 
TEST_RR_OP64_OO( 111 , umul8, 0xf30cab54fe017f80, 0xffffffff, 0xf4acff80 , 880); 
TEST_RR_OP64_OO( 112 , umul8, 0xd12efe01fe010000, 0xffffff61, 0xd2ffff00 , 888); 
TEST_RR_OP64_OO( 113 , umul8, 0x00007a85ec13049c, 0x007bedec, 0xb9ffff05 , 896); 
TEST_RR_OP64_OO( 114 , umul8, 0x7f800000fe010000, 0x8000ff00, 0xffd4ff80 , 904); 
TEST_RR_OP64_OO( 115 , umul8, 0x42800000f7080000, 0x853ef800, 0x8000ff00 , 912); 
TEST_RR_OP64_OO( 116 , umul8, 0x0000000048b7ac53, 0x000049ff, 0xff00ffad , 920); 
TEST_RR_OP64_OO( 117 , umul8, 0x0000400000000180, 0x0080ff03, 0x80800080 , 928); 
TEST_RR_OP64_OO( 118 , umul8, 0xfe01fe0140007f80, 0xffff8080, 0xffff80ff , 936); 
TEST_RR_OP64_OO( 119 , umul8, 0x46b9078000004000, 0x47800080, 0xff0f8080 , 944); 
TEST_RR_OP64_OO( 120 , umul8, 0x0000000000002800, 0xff800050, 0x0000c280 , 952); 
TEST_RR_OP64_OO( 121 , umul8, 0x0000000050000000, 0x80ffa000, 0x000080bf , 960); 
TEST_RR_OP64_OO( 122 , umul8, 0x946b7f8000000000, 0x95ff0000, 0xff80ffab , 968); 
TEST_RR_OP64_OO( 123 , umul8, 0x59107f8000007f80, 0x5fffff80, 0xf08000ff , 976); 
TEST_RR_OP64_OO( 124 , umul8, 0x0000000000000000, 0x0000fd80, 0x80ff0000 , 984); 
TEST_RR_OP64_OO( 125 , umul8, 0x0000906ffe0142bd, 0x00ffff43, 0x0091ffff , 992); 
TEST_RR_OP64_OO( 126 , umul8, 0x688000006800fe01, 0x8000d0ff, 0xd1ff80ff , 1000); 
TEST_RR_OP64_OO( 127 , umul8, 0x18e718e774800000, 0xffffe9ff, 0x19198000 , 1008); 
TEST_RR_OP64_OO( 128 , umul8, 0x7f80000000000000, 0x8000ff3c, 0xffff0000 , 1016); 
TEST_RR_OP64_OO( 129 , umul8, 0x7f80000000007f80, 0xff0000ff, 0x8000ff80 , 1024); 
TEST_RR_OP64_OO( 130 , umul8, 0x14009f6380760000, 0x28c9a200, 0x80cbcba7 , 1032); 
TEST_RR_OP64_OO( 131 , umul8, 0xfe01000000000000, 0xff80e400, 0xff0000a2 , 1040); 
TEST_RR_OP64_OO( 132 , umul8, 0x00007f807f80b14e, 0x00ff80ff, 0xff80ffb2 , 1048); 
TEST_RR_OP64_OO( 133 , umul8, 0x0000956a00004000, 0x80960080, 0x00ff0080 , 1056); 
TEST_RR_OP64_OO( 134 , umul8, 0x7f807f8017e87f80, 0xffff1880, 0x8080ffff , 1064); 
TEST_RR_OP64_OO( 135 , umul8, 0x5a807f808e710000, 0x80808f00, 0xb5ffffe4 , 1072); 
TEST_RR_OP64_OO( 136 , umul8, 0x7f80000000004000, 0xff000080, 0x80ffd180 , 1080); 
TEST_RR_OP64_OO( 137 , umul8, 0x0000000000002ad5, 0xff0000ff, 0x00ff802b , 1088); 
TEST_RR_OP64_OO( 138 , umul8, 0x72007f807f807f80, 0x8080ff80, 0xe4ff80ff , 1096); 
TEST_RR_OP64_OO( 139 , umul8, 0x3b1e000000007f80, 0x5e0000ff, 0xa1888080 , 1104); 
TEST_RR_OP64_OO( 140 , umul8, 0x000000007f804000, 0x80acff80, 0x00008080 , 1112); 
TEST_RR_OP64_OO( 141 , umul8, 0x7f8030874db2fe01, 0xff7bffff, 0x80654eff , 1120); 
TEST_RR_OP64_OO( 142 , umul8, 0x00007f803fc07f80, 0xffffffff, 0x00804080 , 1128); 
TEST_RR_OP64_OO( 143 , umul8, 0x4c001c0000000000, 0x9838ff00, 0x80800000 , 1136); 
TEST_RR_OP64_OO( 144 , umul8, 0x730083a000000000, 0xe6d00000, 0x80a2ff00 , 1144); 
TEST_RR_OP64_OO( 145 , umul8, 0x0f0000002880718e, 0x80ff80ff, 0x1e005172 , 1152); 
TEST_RR_OP64_OO( 146 , umul8, 0x941a200000006f80, 0xb28072df, 0xd5400080 , 1160); 
TEST_RR_OP64_OO( 147 , umul8, 0x0000fe017f8000ff, 0x0bff8001, 0x00ffffff , 1168); 
TEST_RR_OP64_OO( 148 , umul8, 0x53000000109f7f80, 0x8000b9ff, 0xa6631780 , 1176); 
TEST_RR_OP64_OO( 149 , umul8, 0x000000007f8050af, 0x0000ffff, 0x49008051 , 1184); 
TEST_RR_OP64_OO( 150 , umul8, 0x400000000000cc33, 0x80ffffcd, 0x800000ff , 1192); 
TEST_RR_OP64_OO( 151 , umul8, 0x0000000000007f80, 0xf76a00ff, 0x00000080 , 1200); 
TEST_RR_OP64_OO( 152 , umul8, 0x000000006c000000, 0x00008080, 0x8080d800 , 1208); 
TEST_RR_OP64_OO( 153 , umul8, 0x000000008e710000, 0x0000ff00, 0x00008f80 , 1216); 
TEST_RR_OP64_OO( 154 , umul8, 0x0000000034cbfe01, 0x0081ffff, 0x870035ff , 1224); 
TEST_RR_OP64_OO( 155 , umul8, 0xfe01c53a14003dc2, 0xffff803e, 0xffc628ff , 1232); 
TEST_RR_OP64_OO( 156 , umul8, 0x0000be4100000000, 0x00ffd400, 0xffbf00d8 , 1240); 
TEST_RR_OP64_OO( 157 , umul8, 0x00007f8000000000, 0x00800000, 0x1cff80ff , 1248); 
TEST_RR_OP64_OO( 158 , umul8, 0x7a8000006a800000, 0xf5008000, 0x80ffd500 , 1256); 
TEST_RR_OP64_OO( 159 , umul8, 0x04100000ba450000, 0x8200bb00, 0x081bff80 , 1264); 
TEST_RR_OP64_OO( 160 , umul8, 0x000000003e800000, 0x80807d80, 0x00008000 , 1272); 
TEST_RR_OP64_OO( 161 , umul8, 0x390000004eb10000, 0x72014f00, 0x8000ff63 , 1280); 
TEST_RR_OP64_OO( 162 , umul8, 0x7f80034800000000, 0x806900ff, 0xff08ff00 , 1288); 
TEST_RR_OP64_OO( 163 , umul8, 0x16e95aa500007f80, 0xffff0080, 0x175b80ff , 1296); 
TEST_RR_OP64_OO( 164 , umul8, 0x758a4000fe01ae51, 0x7680ffaf, 0xff80ffff , 1304); 
TEST_RR_OP64_OO( 165 , umul8, 0x0000170000000000, 0x0080000f, 0x802e0000 , 1312); 
TEST_RR_OP64_OO( 166 , umul8, 0x000000005d0021de, 0xff00ba22, 0x00ff80ff , 1320); 
TEST_RR_OP64_OO( 167 , umul8, 0x7f80362540000000, 0xffa78080, 0x80538000 , 1328); 
TEST_RR_OP64_OO( 168 , umul8, 0x0000000000000000, 0x00801400, 0x80000080 , 1336); 
TEST_RR_OP64_OO( 169 , umul8, 0x00007f80fe010000, 0x0080ff00, 0xfffffff5 , 1344); 
TEST_RR_OP64_OO( 170 , umul8, 0x7f8052ad00000000, 0xff53ffd1, 0x80ff0000 , 1352); 
TEST_RR_OP64_OO( 171 , umul8, 0x629d000000003a00, 0x63800074, 0xff000080 , 1360); 
TEST_RR_OP64_OO( 172 , umul8, 0x00008998d926f10e, 0x0094daff, 0xffeefff2 , 1368); 
TEST_RR_OP64_OO( 173 , umul8, 0x40007f8067987d88, 0x808068ce, 0x80ffff9c , 1376); 
TEST_RR_OP64_OO( 174 , umul8, 0x400000002a282780, 0x80dd4c4f, 0x80008e80 , 1384); 
TEST_RR_OP64_OO( 175 , umul8, 0x00000000916e0000, 0x0080ff00, 0x00009280 , 1392); 
TEST_RR_OP64_OO( 176 , umul8, 0x6e0000007f800000, 0x80008000, 0xdcffff80 , 1400); 
TEST_RR_OP64_OO( 177 , umul8, 0x0000be4100006c93, 0x00bf006d, 0xffffa7ff , 1408); 
TEST_RR_OP64_OO( 178 , umul8, 0x7f80118055800000, 0x8080ab00, 0xff238018 , 1416); 
TEST_RR_OP64_OO( 179 , umul8, 0x7f800000fe017f80, 0xff00ff80, 0x80ffffff , 1424); 
TEST_RR_OP64_OO( 180 , umul8, 0x000000000c800000, 0x00ff8000, 0x80001985 , 1432); 
TEST_RR_OP64_OO( 181 , umul8, 0x00007f8025000000, 0x00ff8098, 0x80804a00 , 1440); 
TEST_RR_OP64_OO( 182 , umul8, 0x7f80000000000000, 0xffffffff, 0x80000000 , 1448); 
TEST_RR_OP64_OO( 183 , umul8, 0x78803f04768019c4, 0xf1da8061, 0x804aed44 , 1456); 
TEST_RR_OP64_OO( 184 , umul8, 0x2db7590034000000, 0x8db28000, 0x538068ba , 1464); 
TEST_RR_OP64_OO( 185 , umul8, 0xbecb7f8042800000, 0xf3ff8500, 0xc9808082 , 1472); 
TEST_RR_OP64_OO( 186 , umul8, 0x000000009b640000, 0x2fffff00, 0x00009c94 , 1480); 
TEST_RR_OP64_OO( 187 , umul8, 0x00002a5400000000, 0xff544e00, 0x00810052 , 1488); 
TEST_RR_OP64_OO( 188 , umul8, 0x0000fe0100000000, 0x00ff0000, 0x00ff0000 , 1496); 
TEST_RR_OP64_OO( 189 , umul8, 0x00009d6200000000, 0x009e00ff, 0x80ffff00 , 1504); 
TEST_RR_OP64_OO( 190 , umul8, 0xc6c0400000000000, 0xf080003d, 0xd480bf00 , 1512); 
TEST_RR_OP64_OO( 191 , umul8, 0x00003d0000002780, 0x64808040, 0x007a009e , 1520); 
TEST_RR_OP64_OO( 192 , umul8, 0x7f80000000000000, 0xff00c800, 0x808000b7 , 1528); 
TEST_RR_OP64_OO( 193 , umul8, 0x8e71f10e00000000, 0xffff0000, 0x8ff2bcff , 1536); 
TEST_RR_OP64_OO( 194 , umul8, 0x7f807f8000000000, 0xffff0000, 0x8080ff88 , 1544); 
TEST_RR_OP64_OO( 195 , umul8, 0x7f80000056800000, 0xff0080ff, 0x8080ad00 , 1552); 
TEST_RR_OP64_OO( 196 , umul8, 0x000057a800000000, 0x80ff00a1, 0x00589400 , 1560); 
TEST_RR_OP64_OO( 197 , umul8, 0x4000000047020000, 0x80007a00, 0x80009580 , 1568); 
TEST_RR_OP64_OO( 198 , umul8, 0x3100000004004580, 0x80000880, 0x6200808b , 1576); 
TEST_RR_OP64_OO( 199 , umul8, 0x51b3118000000000, 0xeb230000, 0x5980ffae , 1584); 

  #-------------------------------------------------------------
  # Bypassing tests
  #-------------------------------------------------------------


TEST_PASSFAIL

RV_COMPLIANCE_CODE_END

.data

RV_COMPLIANCE_DATA_BEGIN
test_res:
    .fill 398, 4, -1
RV_COMPLIANCE_DATA_END