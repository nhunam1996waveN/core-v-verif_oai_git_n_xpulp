# See LICENSE for license details.
#*****************************************************************************
# umar64.S
#-----------------------------------------------------------------------------
#
# Test add instruction.
#


#include "riscv_test.h"
#include "compliance_test.h"
#include "compliance_io.h"
#include "aw_test_macros.h"

RVTEST_RV64U
RV_COMPLIANCE_CODE_BEGIN

  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------

TEST_RR_OP64_OO( 2 , umar64, 0x0000000000000000, 0x00000000, 0x80000000 , 8); 
TEST_RR_OP64_OO( 3 , umar64, 0x0000000000000000, 0x11f8ec99, 0x00000000 , 16); 
TEST_RR_OP64_OO( 4 , umar64, 0xfffffffe00000001, 0xffffffff, 0xffffffff , 24); 
TEST_RR_OP64_OO( 5 , umar64, 0x3ffffffe00000001, 0x80000000, 0x80000000 , 32); 
TEST_RR_OP64_OO( 6 , umar64, 0x3ffffffe00000001, 0xc0ea5ce3, 0x00000000 , 40); 
TEST_RR_OP64_OO( 7 , umar64, 0x27af631018509cee, 0xe7af6313, 0xffffffff , 48); 
TEST_RR_OP64_OO( 8 , umar64, 0x27af631018509cee, 0x00000000, 0xeb958675 , 56); 
TEST_RR_OP64_OO( 9 , umar64, 0x27af630e18509cef, 0xffffffff, 0xffffffff , 64); 
TEST_RR_OP64_OO( 10 , umar64, 0x7a21811fc5de7edd, 0x52721e12, 0xffffffff , 72); 
TEST_RR_OP64_OO( 11 , umar64, 0x7a21811fc5de7edd, 0x00000000, 0xffffffff , 80); 
TEST_RR_OP64_OO( 12 , umar64, 0xfa21811f45de7edd, 0xffffffff, 0x80000000 , 88); 
TEST_RR_OP64_OO( 13 , umar64, 0x7025d13637113373, 0xaa548553, 0xb1600052 , 96); 
TEST_RR_OP64_OO( 14 , umar64, 0x7025d13637113373, 0x00000000, 0x00000000 , 104); 
TEST_RR_OP64_OO( 15 , umar64, 0x7025d13637113373, 0x00000000, 0xf11a598d , 112); 
TEST_RR_OP64_OO( 16 , umar64, 0xf025d135b7113373, 0xffffffff, 0x80000000 , 120); 
TEST_RR_OP64_OO( 17 , umar64, 0x7025d13537113373, 0xffffffff, 0x80000000 , 128); 
TEST_RR_OP64_OO( 18 , umar64, 0x7025d13537113373, 0xffffffff, 0x00000000 , 136); 
TEST_RR_OP64_OO( 19 , umar64, 0x7025d13537113373, 0xa70f5160, 0x00000000 , 144); 
TEST_RR_OP64_OO( 20 , umar64, 0x88461f1e1ef0e58a, 0xffffffff, 0x18204de9 , 152); 
TEST_RR_OP64_OO( 21 , umar64, 0xea1ca4fd1ef0e58a, 0xc3ad0bbe, 0x80000000 , 160); 
TEST_RR_OP64_OO( 22 , umar64, 0xea1ca4fd1ef0e58a, 0x61319c6d, 0x00000000 , 168); 
TEST_RR_OP64_OO( 23 , umar64, 0xea1ca4fb1ef0e58b, 0xffffffff, 0xffffffff , 176); 
TEST_RR_OP64_OO( 24 , umar64, 0xea1ca4fb1ef0e58b, 0x00000000, 0xffffffff , 184); 
TEST_RR_OP64_OO( 25 , umar64, 0x6a1ca4fa9ef0e58b, 0x80000000, 0xffffffff , 192); 
TEST_RR_OP64_OO( 26 , umar64, 0x6a1ca4fa9ef0e58b, 0x00000000, 0xffffffff , 200); 
TEST_RR_OP64_OO( 27 , umar64, 0x6a1ca4fa9ef0e58b, 0x80000000, 0x00000000 , 208); 
TEST_RR_OP64_OO( 28 , umar64, 0x6a1ca4fa9ef0e58b, 0xffffffff, 0x00000000 , 216); 
TEST_RR_OP64_OO( 29 , umar64, 0x6a1ca4fa9ef0e58b, 0x00000000, 0x80000000 , 224); 
TEST_RR_OP64_OO( 30 , umar64, 0xea1ca4fa1ef0e58b, 0xffffffff, 0x80000000 , 232); 
TEST_RR_OP64_OO( 31 , umar64, 0x2a1ca4fa1ef0e58b, 0x80000000, 0x80000000 , 240); 
TEST_RR_OP64_OO( 32 , umar64, 0xad053911072d6fd2, 0xb630d227, 0xb7f13ae1 , 248); 
TEST_RR_OP64_OO( 33 , umar64, 0x5f731bb654bf8d2c, 0xb26de2a6, 0xffffffff , 256); 
TEST_RR_OP64_OO( 34 , umar64, 0x9f731bb654bf8d2c, 0x80000000, 0x80000000 , 264); 
TEST_RR_OP64_OO( 35 , umar64, 0x1f731bb5d4bf8d2c, 0x80000000, 0xffffffff , 272); 
TEST_RR_OP64_OO( 36 , umar64, 0x5a93663d85bfd6f0, 0x5d549514, 0xa22dfd3d , 280); 
TEST_RR_OP64_OO( 37 , umar64, 0xda93663d05bfd6f0, 0xffffffff, 0x80000000 , 288); 
TEST_RR_OP64_OO( 38 , umar64, 0xda93663d05bfd6f0, 0x00000000, 0x00000000 , 296); 
TEST_RR_OP64_OO( 39 , umar64, 0xda93663d05bfd6f0, 0x00000000, 0x80000000 , 304); 
TEST_RR_OP64_OO( 40 , umar64, 0xe971f9c8f6e14364, 0x0ede938c, 0xffffffff , 312); 
TEST_RR_OP64_OO( 41 , umar64, 0xe971f9c8f6e14364, 0xffffffff, 0x00000000 , 320); 
TEST_RR_OP64_OO( 42 , umar64, 0x3ae92b89a56a11a3, 0x517731c1, 0xffffffff , 328); 
TEST_RR_OP64_OO( 43 , umar64, 0x3ae92b89a56a11a3, 0x00000000, 0xffffffff , 336); 
TEST_RR_OP64_OO( 44 , umar64, 0xbae92b89256a11a3, 0xffffffff, 0x80000000 , 344); 
TEST_RR_OP64_OO( 45 , umar64, 0xbae92b89256a11a3, 0x80000000, 0x00000000 , 352); 
TEST_RR_OP64_OO( 46 , umar64, 0x3ae92b88a56a11a3, 0x80000000, 0xffffffff , 360); 
TEST_RR_OP64_OO( 47 , umar64, 0x7ae92b88a56a11a3, 0x80000000, 0x80000000 , 368); 
TEST_RR_OP64_OO( 48 , umar64, 0x7ae92b88a56a11a3, 0xffffffff, 0x00000000 , 376); 
TEST_RR_OP64_OO( 49 , umar64, 0x7ae92b88a56a11a3, 0x00000000, 0x00000000 , 384); 
TEST_RR_OP64_OO( 50 , umar64, 0x7ae92b88a56a11a3, 0x00000000, 0xffffffff , 392); 
TEST_RR_OP64_OO( 51 , umar64, 0x7ae92b88a56a11a3, 0x00000000, 0x7da5ede0 , 400); 
TEST_RR_OP64_OO( 52 , umar64, 0x35931e92eac01e98, 0xffffffff, 0xbaa9f30b , 408); 
TEST_RR_OP64_OO( 53 , umar64, 0x35931e92eac01e98, 0x00000000, 0xffffffff , 416); 
TEST_RR_OP64_OO( 54 , umar64, 0x5a8fcd4eeac01e98, 0x49f95d78, 0x80000000 , 424); 
TEST_RR_OP64_OO( 55 , umar64, 0x5a8fcd4eeac01e98, 0x00000000, 0x80000000 , 432); 
TEST_RR_OP64_OO( 56 , umar64, 0x5a8fcd4ceac01e99, 0xffffffff, 0xffffffff , 440); 
TEST_RR_OP64_OO( 57 , umar64, 0x5a8fcd4ceac01e99, 0x80000000, 0x00000000 , 448); 
TEST_RR_OP64_OO( 58 , umar64, 0x9a8fcd4ceac01e99, 0x80000000, 0x80000000 , 456); 
TEST_RR_OP64_OO( 59 , umar64, 0x9a8fcd4ceac01e99, 0x80000000, 0x00000000 , 464); 
TEST_RR_OP64_OO( 60 , umar64, 0x9b93e5946ac01e99, 0x0208308f, 0x80000000 , 472); 
TEST_RR_OP64_OO( 61 , umar64, 0x9b93e5946ac01e99, 0x00000000, 0x99182bff , 480); 
TEST_RR_OP64_OO( 62 , umar64, 0x1b93e593eac01e99, 0xffffffff, 0x80000000 , 488); 
TEST_RR_OP64_OO( 63 , umar64, 0x1b9bf193eac01e99, 0x80000000, 0x00101800 , 496); 
TEST_RR_OP64_OO( 64 , umar64, 0x2e2d005f6ac01e99, 0x25221d97, 0x80000000 , 504); 
TEST_RR_OP64_OO( 65 , umar64, 0x2e2d005f6ac01e99, 0x00000000, 0xffffffff , 512); 
TEST_RR_OP64_OO( 66 , umar64, 0x318deb55eac01e99, 0x06c1d5ed, 0x80000000 , 520); 
TEST_RR_OP64_OO( 67 , umar64, 0x318deb55eac01e99, 0x80000000, 0x00000000 , 528); 
TEST_RR_OP64_OO( 68 , umar64, 0xe42444963829c558, 0xb2965941, 0xffffffff , 536); 
TEST_RR_OP64_OO( 69 , umar64, 0x451ff2a6b829c558, 0x80000000, 0xc1f75c21 , 544); 
TEST_RR_OP64_OO( 70 , umar64, 0x451ff2a6b829c558, 0x80000000, 0x00000000 , 552); 
TEST_RR_OP64_OO( 71 , umar64, 0x451ff2a6b829c558, 0x718b2a3d, 0x00000000 , 560); 
TEST_RR_OP64_OO( 72 , umar64, 0xe579361817d081e6, 0xffffffff, 0xa0594372 , 568); 
TEST_RR_OP64_OO( 73 , umar64, 0xe579361817d081e6, 0x00000000, 0x80000000 , 576); 
TEST_RR_OP64_OO( 74 , umar64, 0xe579361817d081e6, 0x80000000, 0x00000000 , 584); 
TEST_RR_OP64_OO( 75 , umar64, 0xe579361617d081e7, 0xffffffff, 0xffffffff , 592); 
TEST_RR_OP64_OO( 76 , umar64, 0xe579361617d081e7, 0x00000000, 0x37dad043 , 600); 
TEST_RR_OP64_OO( 77 , umar64, 0xe579361617d081e7, 0x00000000, 0x00000000 , 608); 
TEST_RR_OP64_OO( 78 , umar64, 0xe579361617d081e7, 0x80000000, 0x00000000 , 616); 
TEST_RR_OP64_OO( 79 , umar64, 0x6579361597d081e7, 0xffffffff, 0x80000000 , 624); 
TEST_RR_OP64_OO( 80 , umar64, 0xa579361597d081e7, 0x80000000, 0x80000000 , 632); 
TEST_RR_OP64_OO( 81 , umar64, 0xa579361597d081e7, 0x00000000, 0x80000000 , 640); 
TEST_RR_OP64_OO( 82 , umar64, 0xa579361597d081e7, 0x00000000, 0x0d38153e , 648); 
TEST_RR_OP64_OO( 83 , umar64, 0x2579361517d081e7, 0x80000000, 0xffffffff , 656); 
TEST_RR_OP64_OO( 84 , umar64, 0x2579361517d081e7, 0x00000000, 0xf6e1ba11 , 664); 
TEST_RR_OP64_OO( 85 , umar64, 0xa579361497d081e7, 0x80000000, 0xffffffff , 672); 
TEST_RR_OP64_OO( 86 , umar64, 0xe579361497d081e7, 0x80000000, 0x80000000 , 680); 
TEST_RR_OP64_OO( 87 , umar64, 0x16e7dea46661d957, 0x316ea890, 0xffffffff , 688); 
TEST_RR_OP64_OO( 88 , umar64, 0x16e7dea46661d957, 0x80000000, 0x00000000 , 696); 
TEST_RR_OP64_OO( 89 , umar64, 0x96e7dea3e661d957, 0xffffffff, 0x80000000 , 704); 
TEST_RR_OP64_OO( 90 , umar64, 0x96e7dea3e661d957, 0x00000000, 0xffffffff , 712); 
TEST_RR_OP64_OO( 91 , umar64, 0x96e7dea3e661d957, 0x49c979a9, 0x00000000 , 720); 
TEST_RR_OP64_OO( 92 , umar64, 0x96e7dea3e661d957, 0x00000000, 0x80000000 , 728); 
TEST_RR_OP64_OO( 93 , umar64, 0x96e7dea3e661d957, 0x00000000, 0x80000000 , 736); 
TEST_RR_OP64_OO( 94 , umar64, 0x96e7dea3e661d957, 0x00000000, 0xffffffff , 744); 
TEST_RR_OP64_OO( 95 , umar64, 0xd6e7dea3e661d957, 0x80000000, 0x80000000 , 752); 
TEST_RR_OP64_OO( 96 , umar64, 0xd6e7dea3e661d957, 0x80000000, 0x00000000 , 760); 
TEST_RR_OP64_OO( 97 , umar64, 0x56e7dea36661d957, 0x80000000, 0xffffffff , 768); 
TEST_RR_OP64_OO( 98 , umar64, 0x56e7dea36661d957, 0x00000000, 0x10e3b24b , 776); 
TEST_RR_OP64_OO( 99 , umar64, 0x56e7dea36661d957, 0x00000000, 0x80000000 , 784); 
TEST_RR_OP64_OO( 100 , umar64, 0x56e7dea36661d957, 0x00000000, 0x00000000 , 792); 
TEST_RR_OP64_OO( 101 , umar64, 0x56e7dea36661d957, 0x00000000, 0x00000000 , 800); 
TEST_RR_OP64_OO( 102 , umar64, 0x56e7dea36661d957, 0x00000000, 0xffffffff , 808); 
TEST_RR_OP64_OO( 103 , umar64, 0xd6e7dea2e661d957, 0xffffffff, 0x80000000 , 816); 
TEST_RR_OP64_OO( 104 , umar64, 0x99766b7a23d34c7f, 0xc28e8cd8, 0xffffffff , 824); 
TEST_RR_OP64_OO( 105 , umar64, 0x2cf6282c90538fcc, 0xffffffff, 0x937fbcb3 , 832); 
TEST_RR_OP64_OO( 106 , umar64, 0x3b128def8b1800b0, 0x43781efc, 0x358a9a07 , 840); 
TEST_RR_OP64_OO( 107 , umar64, 0x3b128def8b1800b0, 0x80000000, 0x00000000 , 848); 
TEST_RR_OP64_OO( 108 , umar64, 0x3b128def8b1800b0, 0x00000000, 0xdc738b33 , 856); 
TEST_RR_OP64_OO( 109 , umar64, 0xbb128def0b1800b0, 0x80000000, 0xffffffff , 864); 
TEST_RR_OP64_OO( 110 , umar64, 0xfb128def0b1800b0, 0x80000000, 0x80000000 , 872); 
TEST_RR_OP64_OO( 111 , umar64, 0xfb128def0b1800b0, 0xffffffff, 0x00000000 , 880); 
TEST_RR_OP64_OO( 112 , umar64, 0xfb128def0b1800b0, 0x00000000, 0x00000000 , 888); 
TEST_RR_OP64_OO( 113 , umar64, 0x3b128def0b1800b0, 0x80000000, 0x80000000 , 896); 
TEST_RR_OP64_OO( 114 , umar64, 0x446b9bd96f34e940, 0x0b985790, 0xce629d91 , 904); 
TEST_RR_OP64_OO( 115 , umar64, 0xcde90246e5b782d2, 0x897d666e, 0xffffffff , 912); 
TEST_RR_OP64_OO( 116 , umar64, 0xcde90244e5b782d3, 0xffffffff, 0xffffffff , 920); 
TEST_RR_OP64_OO( 117 , umar64, 0xcde90244e5b782d3, 0xffffffff, 0x00000000 , 928); 
TEST_RR_OP64_OO( 118 , umar64, 0xcde90244e5b782d3, 0xf4c0ff69, 0x00000000 , 936); 
TEST_RR_OP64_OO( 119 , umar64, 0x9dc9095015d77bc7, 0xcfe0070c, 0xffffffff , 944); 
TEST_RR_OP64_OO( 120 , umar64, 0x9dc9095015d77bc7, 0x80000000, 0x00000000 , 952); 
TEST_RR_OP64_OO( 121 , umar64, 0xc543b9f415d77bc7, 0x4ef56148, 0x80000000 , 960); 
TEST_RR_OP64_OO( 122 , umar64, 0x426f248895d77bc7, 0x80000000, 0xfa56d529 , 968); 
TEST_RR_OP64_OO( 123 , umar64, 0x826f248895d77bc7, 0x80000000, 0x80000000 , 976); 
TEST_RR_OP64_OO( 124 , umar64, 0x3ce1a9d3db64f67b, 0xba72854c, 0xffffffff , 984); 
TEST_RR_OP64_OO( 125 , umar64, 0x4ee917663156cd17, 0x236cbf34, 0x8249bf43 , 992); 
TEST_RR_OP64_OO( 126 , umar64, 0x4ee917663156cd17, 0x80000000, 0x00000000 , 1000); 
TEST_RR_OP64_OO( 127 , umar64, 0x6d2dcdf63156cd17, 0x80000000, 0x3c896d20 , 1008); 
TEST_RR_OP64_OO( 128 , umar64, 0xed2dcdf5b156cd17, 0xffffffff, 0x80000000 , 1016); 
TEST_RR_OP64_OO( 129 , umar64, 0x253e72d83156cd17, 0x702149c5, 0x80000000 , 1024); 
TEST_RR_OP64_OO( 130 , umar64, 0x253e72d83156cd17, 0x5e186316, 0x00000000 , 1032); 
TEST_RR_OP64_OO( 131 , umar64, 0x253e72d83156cd17, 0x60506601, 0x00000000 , 1040); 
TEST_RR_OP64_OO( 132 , umar64, 0x253e72d83156cd17, 0x00000000, 0x00000000 , 1048); 
TEST_RR_OP64_OO( 133 , umar64, 0x4c064afd0a8ef4f2, 0x26c7d825, 0xffffffff , 1056); 
TEST_RR_OP64_OO( 134 , umar64, 0x712783b1e56dbc3d, 0xffffffff, 0x252138b5 , 1064); 
TEST_RR_OP64_OO( 135 , umar64, 0xf12783b1656dbc3d, 0x80000000, 0xffffffff , 1072); 
TEST_RR_OP64_OO( 136 , umar64, 0x0a9003bf51dbd750, 0x22b8d4ed, 0xbb54afff , 1080); 
TEST_RR_OP64_OO( 137 , umar64, 0x4a9003bf51dbd750, 0x80000000, 0x80000000 , 1088); 
TEST_RR_OP64_OO( 138 , umar64, 0x4a9003bf51dbd750, 0x00000000, 0xb1bb8185 , 1096); 
TEST_RR_OP64_OO( 139 , umar64, 0x4a9003bf51dbd750, 0x00000000, 0x00000000 , 1104); 
TEST_RR_OP64_OO( 140 , umar64, 0x4a9003bf51dbd750, 0x00000000, 0x80000000 , 1112); 
TEST_RR_OP64_OO( 141 , umar64, 0x4a9003bf51dbd750, 0x00000000, 0x00000000 , 1120); 
TEST_RR_OP64_OO( 142 , umar64, 0x8a9003bf51dbd750, 0x80000000, 0x80000000 , 1128); 
TEST_RR_OP64_OO( 143 , umar64, 0xca9003bf51dbd750, 0x80000000, 0x80000000 , 1136); 
TEST_RR_OP64_OO( 144 , umar64, 0xca9003bf51dbd750, 0x00000000, 0x37b88249 , 1144); 
TEST_RR_OP64_OO( 145 , umar64, 0xca9003bf51dbd750, 0x00000000, 0x80000000 , 1152); 
TEST_RR_OP64_OO( 146 , umar64, 0xca9003bf51dbd750, 0x00000000, 0xffffffff , 1160); 
TEST_RR_OP64_OO( 147 , umar64, 0xca9003bf51dbd750, 0x00000000, 0x00000000 , 1168); 
TEST_RR_OP64_OO( 148 , umar64, 0x1d45888ed1dbd750, 0xa56b099f, 0x80000000 , 1176); 
TEST_RR_OP64_OO( 149 , umar64, 0x1d45888ed1dbd750, 0x00000000, 0xffffffff , 1184); 
TEST_RR_OP64_OO( 150 , umar64, 0x238a48b751dbd750, 0x0c898051, 0x80000000 , 1192); 
TEST_RR_OP64_OO( 151 , umar64, 0x238a48b751dbd750, 0x80000000, 0x00000000 , 1200); 
TEST_RR_OP64_OO( 152 , umar64, 0x238a48b751dbd750, 0x80000000, 0x00000000 , 1208); 
TEST_RR_OP64_OO( 153 , umar64, 0x238a48b751dbd750, 0x80000000, 0x00000000 , 1216); 
TEST_RR_OP64_OO( 154 , umar64, 0x2775518734790b3a, 0x0500b909, 0xc87e611a , 1224); 
TEST_RR_OP64_OO( 155 , umar64, 0x2775518734790b3a, 0x00000000, 0xffffffff , 1232); 
TEST_RR_OP64_OO( 156 , umar64, 0x2775518734790b3a, 0x00000000, 0xc1674ca8 , 1240); 
TEST_RR_OP64_OO( 157 , umar64, 0xa7755186b4790b3a, 0xffffffff, 0x80000000 , 1248); 
TEST_RR_OP64_OO( 158 , umar64, 0xa7755186b4790b3a, 0x00000000, 0xffffffff , 1256); 
TEST_RR_OP64_OO( 159 , umar64, 0xa7755186b4790b3a, 0x00000000, 0x8bd1cec6 , 1264); 
TEST_RR_OP64_OO( 160 , umar64, 0xa7755186b4790b3a, 0x00000000, 0x00000000 , 1272); 
TEST_RR_OP64_OO( 161 , umar64, 0x2775518634790b3a, 0xffffffff, 0x80000000 , 1280); 
TEST_RR_OP64_OO( 162 , umar64, 0x6775518634790b3a, 0x80000000, 0x80000000 , 1288); 
TEST_RR_OP64_OO( 163 , umar64, 0x6775518634790b3a, 0x00000000, 0xffffffff , 1296); 
TEST_RR_OP64_OO( 164 , umar64, 0x6775518634790b3a, 0x00000000, 0xffffffff , 1304); 
TEST_RR_OP64_OO( 165 , umar64, 0x298708557267546a, 0xc211b6d0, 0xffffffff , 1312); 
TEST_RR_OP64_OO( 166 , umar64, 0xa9870854f267546a, 0xffffffff, 0x80000000 , 1320); 
TEST_RR_OP64_OO( 167 , umar64, 0x9aa8fd4b01455f73, 0xffffffff, 0xf121f4f7 , 1328); 
TEST_RR_OP64_OO( 168 , umar64, 0x0365af11a938e63f, 0x85cfb9f5, 0xc860701c , 1336); 
TEST_RR_OP64_OO( 169 , umar64, 0x0365af11a938e63f, 0xffffffff, 0x00000000 , 1344); 
TEST_RR_OP64_OO( 170 , umar64, 0x8365af112938e63f, 0x80000000, 0xffffffff , 1352); 
TEST_RR_OP64_OO( 171 , umar64, 0xeba2759ec0fc1fb1, 0x683cc68e, 0xffffffff , 1360); 
TEST_RR_OP64_OO( 172 , umar64, 0x3e499aff40fc1fb1, 0x80000000, 0xa54e4ac1 , 1368); 
TEST_RR_OP64_OO( 173 , umar64, 0xbe499afec0fc1fb1, 0x80000000, 0xffffffff , 1376); 
TEST_RR_OP64_OO( 174 , umar64, 0xbe499afec0fc1fb1, 0x00000000, 0xffffffff , 1384); 
TEST_RR_OP64_OO( 175 , umar64, 0xbe499afec0fc1fb1, 0xbcfa982d, 0x00000000 , 1392); 
TEST_RR_OP64_OO( 176 , umar64, 0xcb3f46ee40fc1fb1, 0x80000000, 0x19eb57df , 1400); 
TEST_RR_OP64_OO( 177 , umar64, 0x0c50d8ec40fc1fb1, 0x822323fc, 0x80000000 , 1408); 
TEST_RR_OP64_OO( 178 , umar64, 0x0c50d8ec40fc1fb1, 0x00000000, 0x00000000 , 1416); 
TEST_RR_OP64_OO( 179 , umar64, 0x8c50d8ebc0fc1fb1, 0x80000000, 0xffffffff , 1424); 
TEST_RR_OP64_OO( 180 , umar64, 0x8c50d8ebc0fc1fb1, 0x00000000, 0x00000000 , 1432); 
TEST_RR_OP64_OO( 181 , umar64, 0x0c50d8eb40fc1fb1, 0x80000000, 0xffffffff , 1440); 
TEST_RR_OP64_OO( 182 , umar64, 0x0c50d8eb40fc1fb1, 0x00000000, 0x00000000 , 1448); 
TEST_RR_OP64_OO( 183 , umar64, 0x0c50d8eb40fc1fb1, 0x00000000, 0x80000000 , 1456); 
TEST_RR_OP64_OO( 184 , umar64, 0x0c50d8eb40fc1fb1, 0x00000000, 0x00000000 , 1464); 
TEST_RR_OP64_OO( 185 , umar64, 0x0c50d8e940fc1fb2, 0xffffffff, 0xffffffff , 1472); 
TEST_RR_OP64_OO( 186 , umar64, 0x0c50d8e940fc1fb2, 0x00000000, 0x80000000 , 1480); 
TEST_RR_OP64_OO( 187 , umar64, 0x0c50d8e940fc1fb2, 0x00000000, 0x80000000 , 1488); 
TEST_RR_OP64_OO( 188 , umar64, 0x0c50d8e940fc1fb2, 0xffffffff, 0x00000000 , 1496); 
TEST_RR_OP64_OO( 189 , umar64, 0x8c50d8e8c0fc1fb2, 0x80000000, 0xffffffff , 1504); 
TEST_RR_OP64_OO( 190 , umar64, 0x8c50d8e6c0fc1fb3, 0xffffffff, 0xffffffff , 1512); 
TEST_RR_OP64_OO( 191 , umar64, 0x8c50d8e6c0fc1fb3, 0x98ec1a3c, 0x00000000 , 1520); 
TEST_RR_OP64_OO( 192 , umar64, 0x8c50d8e4c0fc1fb4, 0xffffffff, 0xffffffff , 1528); 
TEST_RR_OP64_OO( 193 , umar64, 0x5f18793dee347f5a, 0xffffffff, 0xd2c7a05a , 1536); 
TEST_RR_OP64_OO( 194 , umar64, 0x5f18793dee347f5a, 0xffffffff, 0x00000000 , 1544); 
TEST_RR_OP64_OO( 195 , umar64, 0xc38cd3f3ee347f5a, 0xc8e8b56c, 0x80000000 , 1552); 
TEST_RR_OP64_OO( 196 , umar64, 0xc38cd3f3ee347f5a, 0xffffffff, 0x00000000 , 1560); 
TEST_RR_OP64_OO( 197 , umar64, 0xc38cd3f3ee347f5a, 0x00000000, 0x80000000 , 1568); 
TEST_RR_OP64_OO( 198 , umar64, 0xd3e76584b40ffb23, 0x1087be95, 0xfd445f65 , 1576); 
TEST_RR_OP64_OO( 199 , umar64, 0xd3e76584b40ffb23, 0x00000000, 0x80000000 , 1584); 

  #-------------------------------------------------------------
  # Bypassing tests
  #-------------------------------------------------------------


TEST_PASSFAIL

RV_COMPLIANCE_CODE_END

.data

RV_COMPLIANCE_DATA_BEGIN
test_res:
    .fill 398, 4, -1
RV_COMPLIANCE_DATA_END