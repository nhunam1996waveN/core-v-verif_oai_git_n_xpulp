# See LICENSE for license details.
#*****************************************************************************
# umulx16.S
#-----------------------------------------------------------------------------
#
# Test add instruction.
#


#include "riscv_test.h"
#include "compliance_test.h"
#include "compliance_io.h"
#include "aw_test_macros.h"

RVTEST_RV64U
RV_COMPLIANCE_CODE_BEGIN

  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------

TEST_RR_OP64_OO( 2 , umulx16, 0x23bfdc407fff8000, 0xffffffff, 0x800023c0, 8); 
TEST_RR_OP64_OO( 3 , umulx16, 0x6b6d800000000000, 0xd6db0000, 0x80008000, 16); 
TEST_RR_OP64_OO( 4 , umulx16, 0x03a406ca72818000, 0x2e328000, 0xe503142d, 24); 
TEST_RR_OP64_OO( 5 , umulx16, 0x07c60000501a0000, 0x80008000, 0xa0340f8c, 32); 
TEST_RR_OP64_OO( 6 , umulx16, 0x000000008730534a, 0x0f0df523, 0x8d2e0000, 40); 
TEST_RR_OP64_OO( 7 , umulx16, 0x7823000000000000, 0x8000ffff, 0x0000f046, 48); 
TEST_RR_OP64_OO( 8 , umulx16, 0x0000000040000000, 0x00008000, 0x80008000, 56); 
TEST_RR_OP64_OO( 9 , umulx16, 0x7fff800039a2c65d, 0xffffffff, 0x39a38000, 64); 
TEST_RR_OP64_OO( 10 , umulx16, 0x4000000000000000, 0x80000000, 0xffff8000, 72); 
TEST_RR_OP64_OO( 11 , umulx16, 0x000000001cdbe324, 0x7e34ffff, 0x1cdc0000, 80); 
TEST_RR_OP64_OO( 12 , umulx16, 0x0000000000000000, 0x00000000, 0x8000ffff, 88); 
TEST_RR_OP64_OO( 13 , umulx16, 0x000000003a3ac5c5, 0x8000ffff, 0x3a3b0000, 96); 
TEST_RR_OP64_OO( 14 , umulx16, 0x0000000000000000, 0x00008000, 0x00000000, 104); 
TEST_RR_OP64_OO( 15 , umulx16, 0x40000000fffe0001, 0x8000ffff, 0xffff8000, 112); 
TEST_RR_OP64_OO( 16 , umulx16, 0x0000000061258000, 0x0000c24b, 0x80000000, 120); 
TEST_RR_OP64_OO( 17 , umulx16, 0xfffe000140000000, 0xffff8000, 0x8000ffff, 128); 
TEST_RR_OP64_OO( 18 , umulx16, 0x7fff80007fff8000, 0x80008000, 0xffffffff, 136); 
TEST_RR_OP64_OO( 19 , umulx16, 0xfffe000110b0ef4f, 0xffff10b1, 0xffffffff, 144); 
TEST_RR_OP64_OO( 20 , umulx16, 0x3e148000366ec991, 0x7c29ffff, 0x366f8000, 152); 
TEST_RR_OP64_OO( 21 , umulx16, 0x7fff800040000000, 0xffff8000, 0x80008000, 160); 
TEST_RR_OP64_OO( 22 , umulx16, 0x0000000000000000, 0xffff0000, 0x80000000, 168); 
TEST_RR_OP64_OO( 23 , umulx16, 0x2508499a7fff8000, 0x5812ffff, 0x80006ba5, 176); 
TEST_RR_OP64_OO( 24 , umulx16, 0x0000000000000000, 0xffff0000, 0x80000000, 184); 
TEST_RR_OP64_OO( 25 , umulx16, 0x400000007fff8000, 0x8000ffff, 0x80008000, 192); 
TEST_RR_OP64_OO( 26 , umulx16, 0x00000000fffe0001, 0x0000ffff, 0xffff0000, 200); 
TEST_RR_OP64_OO( 27 , umulx16, 0x0000000000000000, 0x0b110000, 0x80000000, 208); 
TEST_RR_OP64_OO( 28 , umulx16, 0xc0033ffc26c40000, 0xc0044d88, 0x8000ffff, 216); 
TEST_RR_OP64_OO( 29 , umulx16, 0xfffe000140000000, 0xffff8000, 0x8000ffff, 224); 
TEST_RR_OP64_OO( 30 , umulx16, 0x7fff8000fffe0001, 0x8000ffff, 0xffffffff, 232); 
TEST_RR_OP64_OO( 31 , umulx16, 0x0000000000000000, 0x8000ffff, 0x00000000, 240); 
TEST_RR_OP64_OO( 32 , umulx16, 0x92f70b8c00000000, 0xb6d10000, 0x8000cdcc, 248); 
TEST_RR_OP64_OO( 33 , umulx16, 0x0000000000000000, 0x80000000, 0x00000000, 256); 
TEST_RR_OP64_OO( 34 , umulx16, 0x454086ee7fff8000, 0xb84e8000, 0xffff6031, 264); 
TEST_RR_OP64_OO( 35 , umulx16, 0x241edbe100000000, 0xffff9cfe, 0x0000241f, 272); 
TEST_RR_OP64_OO( 36 , umulx16, 0x0000000000000000, 0x00008000, 0x0000ffff, 280); 
TEST_RR_OP64_OO( 37 , umulx16, 0x522a000048aab755, 0x8000ffff, 0x48aba454, 288); 
TEST_RR_OP64_OO( 38 , umulx16, 0xb4f04b0f00000000, 0xb4f10000, 0x0000ffff, 296); 
TEST_RR_OP64_OO( 39 , umulx16, 0x0000000000000000, 0x0000ffff, 0x0000ffff, 304); 
TEST_RR_OP64_OO( 40 , umulx16, 0x0000000000000000, 0xffff0000, 0x8e330000, 312); 
TEST_RR_OP64_OO( 41 , umulx16, 0x46e5800068980000, 0x8000d130, 0x80008dcb, 320); 
TEST_RR_OP64_OO( 42 , umulx16, 0xfffe000140000000, 0xffff8000, 0x8000ffff, 328); 
TEST_RR_OP64_OO( 43 , umulx16, 0x4000000040000000, 0x80008000, 0x80008000, 336); 
TEST_RR_OP64_OO( 44 , umulx16, 0x0000000025e70000, 0x00004bce, 0x80008000, 344); 
TEST_RR_OP64_OO( 45 , umulx16, 0x0314b6ec7fff8000, 0x2d6affff, 0x8000115e, 352); 
TEST_RR_OP64_OO( 46 , umulx16, 0xbdc2423d7fff8000, 0xbdc3ffff, 0x8000ffff, 360); 
TEST_RR_OP64_OO( 47 , umulx16, 0x198d000060a08000, 0x331a8000, 0xc1418000, 368); 
TEST_RR_OP64_OO( 48 , umulx16, 0x4000000074f20000, 0x8000e9e4, 0x80008000, 376); 
TEST_RR_OP64_OO( 49 , umulx16, 0x000000007fff8000, 0x00008000, 0xffff6d43, 384); 
TEST_RR_OP64_OO( 50 , umulx16, 0x4000000000000000, 0x80000000, 0xffff8000, 392); 
TEST_RR_OP64_OO( 51 , umulx16, 0x7fff800000000000, 0x8000ffff, 0x0000ffff, 400); 
TEST_RR_OP64_OO( 52 , umulx16, 0x0000000000000000, 0xf5170000, 0xf99e0000, 408); 
TEST_RR_OP64_OO( 53 , umulx16, 0x25b7000000000000, 0x80008000, 0x00004b6e, 416); 
TEST_RR_OP64_OO( 54 , umulx16, 0x46b580007fff8000, 0x8d6bffff, 0x80008000, 424); 
TEST_RR_OP64_OO( 55 , umulx16, 0x4000000000000000, 0x80000000, 0x00008000, 432); 
TEST_RR_OP64_OO( 56 , umulx16, 0x58100000690a96f5, 0x8000ffff, 0x690bb020, 440); 
TEST_RR_OP64_OO( 57 , umulx16, 0x7fff800000000000, 0xffff3910, 0x00008000, 448); 
TEST_RR_OP64_OO( 58 , umulx16, 0x0000000000000000, 0x0000ffff, 0x00008000, 456); 
TEST_RR_OP64_OO( 59 , umulx16, 0x4000000000000000, 0x80000000, 0xffff8000, 464); 
TEST_RR_OP64_OO( 60 , umulx16, 0x0000000079698000, 0x80008000, 0xf2d30000, 472); 
TEST_RR_OP64_OO( 61 , umulx16, 0x40000000fffe0001, 0x8000ffff, 0xffff8000, 480); 
TEST_RR_OP64_OO( 62 , umulx16, 0x7fff800000000000, 0x80008000, 0x0000ffff, 488); 
TEST_RR_OP64_OO( 63 , umulx16, 0x1c0ce3f37c4f83b0, 0xffffffff, 0x7c501c0d, 496); 
TEST_RR_OP64_OO( 64 , umulx16, 0x0000000000000000, 0x23e20000, 0x80000000, 504); 
TEST_RR_OP64_OO( 65 , umulx16, 0x4f3d80007fff8000, 0x80008000, 0xffff9e7b, 512); 
TEST_RR_OP64_OO( 66 , umulx16, 0x378f09a800000000, 0x50dc0000, 0x0000afe6, 520); 
TEST_RR_OP64_OO( 67 , umulx16, 0x6b20000000000000, 0xd6400000, 0xc5658000, 528); 
TEST_RR_OP64_OO( 68 , umulx16, 0x000000007fff8000, 0x00008000, 0xffffffff, 536); 
TEST_RR_OP64_OO( 69 , umulx16, 0x49548000fffe0001, 0x92a9ffff, 0xffff8000, 544); 
TEST_RR_OP64_OO( 70 , umulx16, 0xa70258fd00000000, 0xffff0000, 0xffffa703, 552); 
TEST_RR_OP64_OO( 71 , umulx16, 0x000000007de40000, 0x0b4efbc8, 0x80000000, 560); 
TEST_RR_OP64_OO( 72 , umulx16, 0x00000000e6781987, 0xffffe679, 0xffff0000, 568); 
TEST_RR_OP64_OO( 73 , umulx16, 0x400000007fff8000, 0x80008000, 0xffff8000, 576); 
TEST_RR_OP64_OO( 74 , umulx16, 0xfffe0001441d7834, 0xffffa7ff, 0x67ccffff, 584); 
TEST_RR_OP64_OO( 75 , umulx16, 0x0000000000000000, 0x8000ffff, 0x00000000, 592); 
TEST_RR_OP64_OO( 76 , umulx16, 0x0000000000000000, 0xfb5affff, 0x00000000, 600); 
TEST_RR_OP64_OO( 77 , umulx16, 0x0000000000000000, 0x00000000, 0x8000126d, 608); 
TEST_RR_OP64_OO( 78 , umulx16, 0x0205be7400000000, 0x6befc89a, 0x000004cc, 616); 
TEST_RR_OP64_OO( 79 , umulx16, 0x4000000000000000, 0x800033a9, 0x00008000, 624); 
TEST_RR_OP64_OO( 80 , umulx16, 0xc75538aa00000000, 0xffffffff, 0x0000c756, 632); 
TEST_RR_OP64_OO( 81 , umulx16, 0x0d29000000000000, 0x1a52ffff, 0x00008000, 640); 
TEST_RR_OP64_OO( 82 , umulx16, 0x64b09b4f00000000, 0xffff8000, 0x000064b1, 648); 
TEST_RR_OP64_OO( 83 , umulx16, 0x63749c8b2360dc9f, 0xffffffff, 0x23616375, 656); 
TEST_RR_OP64_OO( 84 , umulx16, 0x76da89257fff8000, 0x76db8000, 0xffffffff, 664); 
TEST_RR_OP64_OO( 85 , umulx16, 0x0000000000000000, 0x0000e72a, 0x00008000, 672); 
TEST_RR_OP64_OO( 86 , umulx16, 0xc68739786e470000, 0xffffdc8e, 0x8000c688, 680); 
TEST_RR_OP64_OO( 87 , umulx16, 0x0000000000000000, 0x8000ffff, 0x00000000, 688); 
TEST_RR_OP64_OO( 88 , umulx16, 0x00000000fffe0001, 0x0000ffff, 0xffffffff, 696); 
TEST_RR_OP64_OO( 89 , umulx16, 0x0000000000000000, 0x00000000, 0x8000ffff, 704); 
TEST_RR_OP64_OO( 90 , umulx16, 0xfffe0001207d6b0f, 0xffff97c1, 0x36cfffff, 712); 
TEST_RR_OP64_OO( 91 , umulx16, 0x7fff80004b2d8000, 0x80008000, 0x965bffff, 720); 
TEST_RR_OP64_OO( 92 , umulx16, 0x00000000fffe0001, 0x8000ffff, 0xffff0000, 728); 
TEST_RR_OP64_OO( 93 , umulx16, 0x7fff800000000000, 0xffff0000, 0xffff8000, 736); 
TEST_RR_OP64_OO( 94 , umulx16, 0x00000000991166ee, 0xbc039912, 0xffff0000, 744); 
TEST_RR_OP64_OO( 95 , umulx16, 0xfffe000100000000, 0xffffffff, 0x0000ffff, 752); 
TEST_RR_OP64_OO( 96 , umulx16, 0x0000000023f18000, 0x000047e3, 0x8000ffff, 760); 
TEST_RR_OP64_OO( 97 , umulx16, 0x9d0562fa00000000, 0x9d067210, 0x0000ffff, 768); 
TEST_RR_OP64_OO( 98 , umulx16, 0x0000000040000000, 0x80008000, 0x80000000, 776); 
TEST_RR_OP64_OO( 99 , umulx16, 0x000000001456eba9, 0xffff1457, 0xffff0000, 784); 
TEST_RR_OP64_OO( 100 , umulx16, 0x000000002ad1d52e, 0x00002ad2, 0xffff0000, 792); 
TEST_RR_OP64_OO( 101 , umulx16, 0x7a02000000000000, 0x80008000, 0x0000f404, 800); 
TEST_RR_OP64_OO( 102 , umulx16, 0x7fff800000000000, 0xffff0000, 0x21948000, 808); 
TEST_RR_OP64_OO( 103 , umulx16, 0x2436000000000000, 0x486c8000, 0x00008000, 816); 
TEST_RR_OP64_OO( 104 , umulx16, 0x7fff80003a6afe80, 0xffff8694, 0x6f208000, 824); 
TEST_RR_OP64_OO( 105 , umulx16, 0x000000007fff8000, 0x00008000, 0xffff8000, 832); 
TEST_RR_OP64_OO( 106 , umulx16, 0x000000007fff8000, 0x00008000, 0xffff8000, 840); 
TEST_RR_OP64_OO( 107 , umulx16, 0x40000000ac4f53b0, 0x8000ffff, 0xac508000, 848); 
TEST_RR_OP64_OO( 108 , umulx16, 0x7fff8000218ade75, 0xffffffff, 0x218b8000, 856); 
TEST_RR_OP64_OO( 109 , umulx16, 0x2217dde840000000, 0x22188000, 0x8000ffff, 864); 
TEST_RR_OP64_OO( 110 , umulx16, 0xfffe00017fff8000, 0xffff8000, 0xffffffff, 872); 
TEST_RR_OP64_OO( 111 , umulx16, 0x0000000000000000, 0x00000000, 0x8000ffff, 880); 
TEST_RR_OP64_OO( 112 , umulx16, 0x0000000000000000, 0xc0508000, 0x00000000, 888); 
TEST_RR_OP64_OO( 113 , umulx16, 0x7fff8000460e0000, 0xffff8c1c, 0x80008000, 896); 
TEST_RR_OP64_OO( 114 , umulx16, 0x000000007fff8000, 0xffffffff, 0x80000000, 904); 
TEST_RR_OP64_OO( 115 , umulx16, 0x0000000070a10000, 0x00008000, 0xe1420000, 912); 
TEST_RR_OP64_OO( 116 , umulx16, 0x63cd9c321ceae315, 0xffffffff, 0x1ceb63ce, 920); 
TEST_RR_OP64_OO( 117 , umulx16, 0x7fff800000000000, 0xffffffff, 0x00008000, 928); 
TEST_RR_OP64_OO( 118 , umulx16, 0x000000003086cf79, 0x0000ffff, 0x30870000, 936); 
TEST_RR_OP64_OO( 119 , umulx16, 0xa31f5ce000000000, 0xa3208000, 0x0000ffff, 944); 
TEST_RR_OP64_OO( 120 , umulx16, 0x0000000000000000, 0xffff0000, 0x80000000, 952); 
TEST_RR_OP64_OO( 121 , umulx16, 0x00000000fffe0001, 0xab84ffff, 0xffff0000, 960); 
TEST_RR_OP64_OO( 122 , umulx16, 0x58670000fb70048f, 0x8000fb71, 0xffffb0ce, 968); 
TEST_RR_OP64_OO( 123 , umulx16, 0x0000000000000000, 0x00000000, 0x0000f7e3, 976); 
TEST_RR_OP64_OO( 124 , umulx16, 0x00000000ef4e10b1, 0x8000ef4f, 0xffff0000, 984); 
TEST_RR_OP64_OO( 125 , umulx16, 0x6c95800000000000, 0xd92b6010, 0x00008000, 992); 
TEST_RR_OP64_OO( 126 , umulx16, 0x0000000000000000, 0xffffd07a, 0x00000000, 1000); 
TEST_RR_OP64_OO( 127 , umulx16, 0xc679398600000000, 0xffff0000, 0xffffc67a, 1008); 
TEST_RR_OP64_OO( 128 , umulx16, 0xfffe000140000000, 0xffff8000, 0x8000ffff, 1016); 
TEST_RR_OP64_OO( 129 , umulx16, 0x000000000f54bbe0, 0x00001da0, 0x847bffff, 1024); 
TEST_RR_OP64_OO( 130 , umulx16, 0x7fff80005fce0000, 0xffffbf9c, 0x80008000, 1032); 
TEST_RR_OP64_OO( 131 , umulx16, 0x0000000000000000, 0x41baffff, 0x00000000, 1040); 
TEST_RR_OP64_OO( 132 , umulx16, 0x689c173431a98000, 0x89ad8000, 0x6353c284, 1048); 
TEST_RR_OP64_OO( 133 , umulx16, 0x0000000000000000, 0x00000000, 0x9f0e91bf, 1056); 
TEST_RR_OP64_OO( 134 , umulx16, 0x0000000000000000, 0xffff0000, 0xffff0000, 1064); 
TEST_RR_OP64_OO( 135 , umulx16, 0x0000000054070000, 0x0000a80e, 0x80008000, 1072); 
TEST_RR_OP64_OO( 136 , umulx16, 0x72a1000000000000, 0xe5420000, 0xffff8000, 1080); 
TEST_RR_OP64_OO( 137 , umulx16, 0x0000000040000000, 0x78cb8000, 0x80000000, 1088); 
TEST_RR_OP64_OO( 138 , umulx16, 0xfffe000100000000, 0xffff0000, 0x0000ffff, 1096); 
TEST_RR_OP64_OO( 139 , umulx16, 0xfffe0001f985067a, 0xfffff986, 0xffffffff, 1104); 
TEST_RR_OP64_OO( 140 , umulx16, 0x72038dfc00000000, 0x72040000, 0x8000ffff, 1112); 
TEST_RR_OP64_OO( 141 , umulx16, 0x7fff8000fffe0001, 0x8000ffff, 0xffffffff, 1120); 
TEST_RR_OP64_OO( 142 , umulx16, 0x0000000000000000, 0x0000ffff, 0x00000000, 1128); 
TEST_RR_OP64_OO( 143 , umulx16, 0x0000000000000000, 0x00000000, 0xffff0000, 1136); 
TEST_RR_OP64_OO( 144 , umulx16, 0x0000000000000000, 0xa21f0000, 0x80000000, 1144); 
TEST_RR_OP64_OO( 145 , umulx16, 0x0000000000000000, 0x80000000, 0xffff0000, 1152); 
TEST_RR_OP64_OO( 146 , umulx16, 0x000000007fff8000, 0xffff8000, 0xffff0000, 1160); 
TEST_RR_OP64_OO( 147 , umulx16, 0x0000000040000000, 0x80008000, 0x80000000, 1168); 
TEST_RR_OP64_OO( 148 , umulx16, 0x0000000083cddc80, 0xf49ce244, 0x95200000, 1176); 
TEST_RR_OP64_OO( 149 , umulx16, 0x000000001fd48000, 0x80003fa9, 0x80000000, 1184); 
TEST_RR_OP64_OO( 150 , umulx16, 0x7fff800000000000, 0xffff0000, 0xf46d8000, 1192); 
TEST_RR_OP64_OO( 151 , umulx16, 0x00000000a5ad5a52, 0x0000a5ae, 0xffffffff, 1200); 
TEST_RR_OP64_OO( 152 , umulx16, 0x7fff800000000000, 0x80000000, 0xbea4ffff, 1208); 
TEST_RR_OP64_OO( 153 , umulx16, 0x2289000060319fce, 0x8000ffff, 0x60324512, 1216); 
TEST_RR_OP64_OO( 154 , umulx16, 0x0000000000000000, 0x00008000, 0x00000000, 1224); 
TEST_RR_OP64_OO( 155 , umulx16, 0x0000000040000000, 0xffff8000, 0x80000000, 1232); 
TEST_RR_OP64_OO( 156 , umulx16, 0x00000000195c8000, 0x80008000, 0x32b90000, 1240); 
TEST_RR_OP64_OO( 157 , umulx16, 0x00000000fffe0001, 0x0000ffff, 0xffffffff, 1248); 
TEST_RR_OP64_OO( 158 , umulx16, 0x9072f6a07fff8000, 0xa454ffff, 0x8000e108, 1256); 
TEST_RR_OP64_OO( 159 , umulx16, 0x0000000000000000, 0xbad18000, 0x00000000, 1264); 
TEST_RR_OP64_OO( 160 , umulx16, 0xfffe000106cbaf18, 0xffff8f28, 0x0c27ffff, 1272); 
TEST_RR_OP64_OO( 161 , umulx16, 0x000000001108b6c6, 0x00001a1d, 0xa6fe8000, 1280); 
TEST_RR_OP64_OO( 162 , umulx16, 0x0000000040000000, 0xffff8000, 0x80000000, 1288); 
TEST_RR_OP64_OO( 163 , umulx16, 0x7f81800040000000, 0xff038000, 0x80008000, 1296); 
TEST_RR_OP64_OO( 164 , umulx16, 0x4000000000000000, 0x80000000, 0xe7f98000, 1304); 
TEST_RR_OP64_OO( 165 , umulx16, 0x000000007fff8000, 0x00008000, 0xffff0000, 1312); 
TEST_RR_OP64_OO( 166 , umulx16, 0xfffe000100000000, 0xffff8000, 0x0000ffff, 1320); 
TEST_RR_OP64_OO( 167 , umulx16, 0xfffe00017fff8000, 0xffffffff, 0x8000ffff, 1328); 
TEST_RR_OP64_OO( 168 , umulx16, 0xfffe0001f93706c8, 0xffffffff, 0xf938ffff, 1336); 
TEST_RR_OP64_OO( 169 , umulx16, 0x783687c900000000, 0x78370000, 0x8000ffff, 1344); 
TEST_RR_OP64_OO( 170 , umulx16, 0xfffe000100000000, 0xffff8000, 0x0000ffff, 1352); 
TEST_RR_OP64_OO( 171 , umulx16, 0x4000000042b2bd4d, 0x800042b3, 0xffff8000, 1360); 
TEST_RR_OP64_OO( 172 , umulx16, 0xf40c0bf3c2c63d39, 0xffffc2c7, 0xfffff40d, 1368); 
TEST_RR_OP64_OO( 173 , umulx16, 0x7240000040000000, 0x80008000, 0x8000e480, 1376); 
TEST_RR_OP64_OO( 174 , umulx16, 0x0000000000000000, 0x13400000, 0xffff0000, 1384); 
TEST_RR_OP64_OO( 175 , umulx16, 0x000000002c9e8000, 0x00008000, 0x593d0000, 1392); 
TEST_RR_OP64_OO( 176 , umulx16, 0x000000001d3d8f15, 0x00009df1, 0x2f650000, 1400); 
TEST_RR_OP64_OO( 177 , umulx16, 0x000000006f2b90d4, 0x0000ffff, 0x6f2c0000, 1408); 
TEST_RR_OP64_OO( 178 , umulx16, 0x14c7eb3800000000, 0xffff0000, 0x000014c8, 1416); 
TEST_RR_OP64_OO( 179 , umulx16, 0x0000000000000000, 0x00000000, 0x78188000, 1424); 
TEST_RR_OP64_OO( 180 , umulx16, 0x4000000000000000, 0x80000000, 0x80008000, 1432); 
TEST_RR_OP64_OO( 181 , umulx16, 0x7fff8000d6df2920, 0x8000ffff, 0xd6e0ffff, 1440); 
TEST_RR_OP64_OO( 182 , umulx16, 0x7fff800000000000, 0xffffffff, 0x00008000, 1448); 
TEST_RR_OP64_OO( 183 , umulx16, 0x000000002c8d0000, 0x00008000, 0x591a0000, 1456); 
TEST_RR_OP64_OO( 184 , umulx16, 0x000000007fff8000, 0xffffffff, 0x80000000, 1464); 
TEST_RR_OP64_OO( 185 , umulx16, 0x0000000000000000, 0x49dbffff, 0x00000000, 1472); 
TEST_RR_OP64_OO( 186 , umulx16, 0x482480002db08000, 0x90498000, 0x5b618000, 1480); 
TEST_RR_OP64_OO( 187 , umulx16, 0x400000007fff8000, 0x80008000, 0xffff8000, 1488); 
TEST_RR_OP64_OO( 188 , umulx16, 0x0000000000000000, 0x80000000, 0x00000000, 1496); 
TEST_RR_OP64_OO( 189 , umulx16, 0x0000000000000000, 0x00000000, 0x0000de25, 1504); 
TEST_RR_OP64_OO( 190 , umulx16, 0x0000000040000000, 0x00008000, 0x80005a3a, 1512); 
TEST_RR_OP64_OO( 191 , umulx16, 0x7703000000000000, 0x80008000, 0x0000ee06, 1520); 
TEST_RR_OP64_OO( 192 , umulx16, 0x0000000000000000, 0x00000000, 0x8000ffff, 1528); 
TEST_RR_OP64_OO( 193 , umulx16, 0x0f4af0b500000000, 0x0f4bffff, 0x0000ffff, 1536); 
TEST_RR_OP64_OO( 194 , umulx16, 0x4000000000000000, 0x80000000, 0xb4628000, 1544); 
TEST_RR_OP64_OO( 195 , umulx16, 0x5c323f3b00000000, 0x6aa78000, 0x0000dd4d, 1552); 
TEST_RR_OP64_OO( 196 , umulx16, 0x531f8000dbf3240c, 0x8000dbf4, 0xffffa63f, 1560); 
TEST_RR_OP64_OO( 197 , umulx16, 0x0000000000000000, 0x00000000, 0x80008000, 1568); 
TEST_RR_OP64_OO( 198 , umulx16, 0x0000000000000000, 0x80008000, 0x00000000, 1576); 
TEST_RR_OP64_OO( 199 , umulx16, 0x0000000000000000, 0xffff2d68, 0x00000000, 1584); 

  #-------------------------------------------------------------
  # Bypassing tests
  #-------------------------------------------------------------


TEST_PASSFAIL

RV_COMPLIANCE_CODE_END

.data

RV_COMPLIANCE_DATA_BEGIN
test_res:
    .fill 398, 4, -1
RV_COMPLIANCE_DATA_END